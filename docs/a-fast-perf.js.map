{"version":3,"file":"a-fast-perf.js","sources":["node_modules/@microsoft/fast-element/dist/esm/components/attributes.js","node_modules/@microsoft/fast-element/dist/esm/components/controller.js","node_modules/@microsoft/fast-element/dist/esm/components/fast-definitions.js","node_modules/@microsoft/fast-element/dist/esm/components/fast-element.js","node_modules/@microsoft/fast-element/dist/esm/dom.js","node_modules/@microsoft/fast-element/dist/esm/index.js","node_modules/@microsoft/fast-element/dist/esm/observation/array-change-records.js","node_modules/@microsoft/fast-element/dist/esm/observation/array-observer.js","node_modules/@microsoft/fast-element/dist/esm/observation/notifier.js","node_modules/@microsoft/fast-element/dist/esm/observation/observable.js","node_modules/@microsoft/fast-element/dist/esm/platform.js","node_modules/@microsoft/fast-element/dist/esm/styles/css-directive.js","node_modules/@microsoft/fast-element/dist/esm/styles/css.js","node_modules/@microsoft/fast-element/dist/esm/styles/element-styles.js","node_modules/@microsoft/fast-element/dist/esm/templating/binding.js","node_modules/@microsoft/fast-element/dist/esm/templating/compiler.js","node_modules/@microsoft/fast-element/dist/esm/templating/html-directive.js","node_modules/@microsoft/fast-element/dist/esm/templating/repeat.js","node_modules/@microsoft/fast-element/dist/esm/templating/template.js","node_modules/@microsoft/fast-element/dist/esm/templating/view.js","node_modules/tslib/tslib.es6.js","node_modules/@swc/helpers/src/_ts_decorate.mjs","node_modules/@swc/helpers/src/_ts_metadata.mjs","src/fast/a-perf.ts","src/fast/observe.ts","src/fast/tree.ts"],"sourcesContent":["import { Observable } from \"../observation/observable.js\";\nimport { DOM } from \"../dom.js\";\nimport { createMetadataLocator } from \"../platform.js\";\n/**\n * Metadata used to configure a custom attribute's behavior.\n * @public\n */\nexport const AttributeConfiguration = Object.freeze({\n    /**\n     * Locates all attribute configurations associated with a type.\n     */\n    locate: createMetadataLocator(),\n});\n/**\n * A {@link ValueConverter} that converts to and from `boolean` values.\n * @remarks\n * Used automatically when the `boolean` {@link AttributeMode} is selected.\n * @public\n */\nexport const booleanConverter = {\n    toView(value) {\n        return value ? \"true\" : \"false\";\n    },\n    fromView(value) {\n        if (value === null ||\n            value === void 0 ||\n            value === \"false\" ||\n            value === false ||\n            value === 0) {\n            return false;\n        }\n        return true;\n    },\n};\n/**\n * A {@link ValueConverter} that converts to and from `number` values.\n * @remarks\n * This converter allows for nullable numbers, returning `null` if the\n * input was `null`, `undefined`, or `NaN`.\n * @public\n */\nexport const nullableNumberConverter = {\n    toView(value) {\n        if (value === null || value === undefined) {\n            return null;\n        }\n        const number = value * 1;\n        return isNaN(number) ? null : number.toString();\n    },\n    fromView(value) {\n        if (value === null || value === undefined) {\n            return null;\n        }\n        const number = value * 1;\n        return isNaN(number) ? null : number;\n    },\n};\n/**\n * An implementation of {@link Accessor} that supports reactivity,\n * change callbacks, attribute reflection, and type conversion for\n * custom elements.\n * @public\n */\nexport class AttributeDefinition {\n    /**\n     * Creates an instance of AttributeDefinition.\n     * @param Owner - The class constructor that owns this attribute.\n     * @param name - The name of the property associated with the attribute.\n     * @param attribute - The name of the attribute in HTML.\n     * @param mode - The {@link AttributeMode} that describes the behavior of this attribute.\n     * @param converter - A {@link ValueConverter} that integrates with the property getter/setter\n     * to convert values to and from a DOM string.\n     */\n    constructor(Owner, name, attribute = name.toLowerCase(), mode = \"reflect\", converter) {\n        this.guards = new Set();\n        this.Owner = Owner;\n        this.name = name;\n        this.attribute = attribute;\n        this.mode = mode;\n        this.converter = converter;\n        this.fieldName = `_${name}`;\n        this.callbackName = `${name}Changed`;\n        this.hasCallback = this.callbackName in Owner.prototype;\n        if (mode === \"boolean\" && converter === void 0) {\n            this.converter = booleanConverter;\n        }\n    }\n    /**\n     * Sets the value of the attribute/property on the source element.\n     * @param source - The source element to access.\n     * @param value - The value to set the attribute/property to.\n     */\n    setValue(source, newValue) {\n        const oldValue = source[this.fieldName];\n        const converter = this.converter;\n        if (converter !== void 0) {\n            newValue = converter.fromView(newValue);\n        }\n        if (oldValue !== newValue) {\n            source[this.fieldName] = newValue;\n            this.tryReflectToAttribute(source);\n            if (this.hasCallback) {\n                source[this.callbackName](oldValue, newValue);\n            }\n            source.$fastController.notify(this.name);\n        }\n    }\n    /**\n     * Gets the value of the attribute/property on the source element.\n     * @param source - The source element to access.\n     */\n    getValue(source) {\n        Observable.track(source, this.name);\n        return source[this.fieldName];\n    }\n    /** @internal */\n    onAttributeChangedCallback(element, value) {\n        if (this.guards.has(element)) {\n            return;\n        }\n        this.guards.add(element);\n        this.setValue(element, value);\n        this.guards.delete(element);\n    }\n    tryReflectToAttribute(element) {\n        const mode = this.mode;\n        const guards = this.guards;\n        if (guards.has(element) || mode === \"fromView\") {\n            return;\n        }\n        DOM.queueUpdate(() => {\n            guards.add(element);\n            const latestValue = element[this.fieldName];\n            switch (mode) {\n                case \"reflect\":\n                    const converter = this.converter;\n                    DOM.setAttribute(element, this.attribute, converter !== void 0 ? converter.toView(latestValue) : latestValue);\n                    break;\n                case \"boolean\":\n                    DOM.setBooleanAttribute(element, this.attribute, latestValue);\n                    break;\n            }\n            guards.delete(element);\n        });\n    }\n    /**\n     * Collects all attribute definitions associated with the owner.\n     * @param Owner - The class constructor to collect attribute for.\n     * @param attributeLists - Any existing attributes to collect and merge with those associated with the owner.\n     * @internal\n     */\n    static collect(Owner, ...attributeLists) {\n        const attributes = [];\n        attributeLists.push(AttributeConfiguration.locate(Owner));\n        for (let i = 0, ii = attributeLists.length; i < ii; ++i) {\n            const list = attributeLists[i];\n            if (list === void 0) {\n                continue;\n            }\n            for (let j = 0, jj = list.length; j < jj; ++j) {\n                const config = list[j];\n                if (typeof config === \"string\") {\n                    attributes.push(new AttributeDefinition(Owner, config));\n                }\n                else {\n                    attributes.push(new AttributeDefinition(Owner, config.property, config.attribute, config.mode, config.converter));\n                }\n            }\n        }\n        return attributes;\n    }\n}\nexport function attr(configOrTarget, prop) {\n    let config;\n    function decorator($target, $prop) {\n        if (arguments.length > 1) {\n            // Non invocation:\n            // - @attr\n            // Invocation with or w/o opts:\n            // - @attr()\n            // - @attr({...opts})\n            config.property = $prop;\n        }\n        AttributeConfiguration.locate($target.constructor).push(config);\n    }\n    if (arguments.length > 1) {\n        // Non invocation:\n        // - @attr\n        config = {};\n        decorator(configOrTarget, prop);\n        return;\n    }\n    // Invocation with or w/o opts:\n    // - @attr()\n    // - @attr({...opts})\n    config = configOrTarget === void 0 ? {} : configOrTarget;\n    return decorator;\n}\n","import { DOM } from \"../dom.js\";\nimport { PropertyChangeNotifier } from \"../observation/notifier.js\";\nimport { defaultExecutionContext, Observable } from \"../observation/observable.js\";\nimport { FASTElementDefinition } from \"./fast-definitions.js\";\nconst shadowRoots = new WeakMap();\nconst defaultEventOptions = {\n    bubbles: true,\n    composed: true,\n    cancelable: true,\n};\nfunction getShadowRoot(element) {\n    return element.shadowRoot || shadowRoots.get(element) || null;\n}\n/**\n * Controls the lifecycle and rendering of a `FASTElement`.\n * @public\n */\nexport class Controller extends PropertyChangeNotifier {\n    /**\n     * Creates a Controller to control the specified element.\n     * @param element - The element to be controlled by this controller.\n     * @param definition - The element definition metadata that instructs this\n     * controller in how to handle rendering and other platform integrations.\n     * @internal\n     */\n    constructor(element, definition) {\n        super(element);\n        this.boundObservables = null;\n        this.behaviors = null;\n        this.needsInitialization = true;\n        this._template = null;\n        this._styles = null;\n        this._isConnected = false;\n        /**\n         * This allows Observable.getNotifier(...) to return the Controller\n         * when the notifier for the Controller itself is being requested. The\n         * result is that the Observable system does not need to create a separate\n         * instance of Notifier for observables on the Controller. The component and\n         * the controller will now share the same notifier, removing one-object construct\n         * per web component instance.\n         */\n        this.$fastController = this;\n        /**\n         * The view associated with the custom element.\n         * @remarks\n         * If `null` then the element is managing its own rendering.\n         */\n        this.view = null;\n        this.element = element;\n        this.definition = definition;\n        const shadowOptions = definition.shadowOptions;\n        if (shadowOptions !== void 0) {\n            const shadowRoot = element.attachShadow(shadowOptions);\n            if (shadowOptions.mode === \"closed\") {\n                shadowRoots.set(element, shadowRoot);\n            }\n        }\n        // Capture any observable values that were set by the binding engine before\n        // the browser upgraded the element. Then delete the property since it will\n        // shadow the getter/setter that is required to make the observable operate.\n        // Later, in the connect callback, we'll re-apply the values.\n        const accessors = Observable.getAccessors(element);\n        if (accessors.length > 0) {\n            const boundObservables = (this.boundObservables = Object.create(null));\n            for (let i = 0, ii = accessors.length; i < ii; ++i) {\n                const propertyName = accessors[i].name;\n                const value = element[propertyName];\n                if (value !== void 0) {\n                    delete element[propertyName];\n                    boundObservables[propertyName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Indicates whether or not the custom element has been\n     * connected to the document.\n     */\n    get isConnected() {\n        Observable.track(this, \"isConnected\");\n        return this._isConnected;\n    }\n    setIsConnected(value) {\n        this._isConnected = value;\n        Observable.notify(this, \"isConnected\");\n    }\n    /**\n     * Gets/sets the template used to render the component.\n     * @remarks\n     * This value can only be accurately read after connect but can be set at any time.\n     */\n    get template() {\n        return this._template;\n    }\n    set template(value) {\n        if (this._template === value) {\n            return;\n        }\n        this._template = value;\n        if (!this.needsInitialization) {\n            this.renderTemplate(value);\n        }\n    }\n    /**\n     * Gets/sets the primary styles used for the component.\n     * @remarks\n     * This value can only be accurately read after connect but can be set at any time.\n     */\n    get styles() {\n        return this._styles;\n    }\n    set styles(value) {\n        if (this._styles === value) {\n            return;\n        }\n        if (this._styles !== null) {\n            this.removeStyles(this._styles);\n        }\n        this._styles = value;\n        if (!this.needsInitialization && value !== null) {\n            this.addStyles(value);\n        }\n    }\n    /**\n     * Adds styles to this element. Providing an HTMLStyleElement will attach the element instance to the shadowRoot.\n     * @param styles - The styles to add.\n     */\n    addStyles(styles) {\n        const target = getShadowRoot(this.element) ||\n            this.element.getRootNode();\n        if (styles instanceof HTMLStyleElement) {\n            target.append(styles);\n        }\n        else if (!styles.isAttachedTo(target)) {\n            const sourceBehaviors = styles.behaviors;\n            styles.addStylesTo(target);\n            if (sourceBehaviors !== null) {\n                this.addBehaviors(sourceBehaviors);\n            }\n        }\n    }\n    /**\n     * Removes styles from this element. Providing an HTMLStyleElement will detach the element instance from the shadowRoot.\n     * @param styles - the styles to remove.\n     */\n    removeStyles(styles) {\n        const target = getShadowRoot(this.element) ||\n            this.element.getRootNode();\n        if (styles instanceof HTMLStyleElement) {\n            target.removeChild(styles);\n        }\n        else if (styles.isAttachedTo(target)) {\n            const sourceBehaviors = styles.behaviors;\n            styles.removeStylesFrom(target);\n            if (sourceBehaviors !== null) {\n                this.removeBehaviors(sourceBehaviors);\n            }\n        }\n    }\n    /**\n     * Adds behaviors to this element.\n     * @param behaviors - The behaviors to add.\n     */\n    addBehaviors(behaviors) {\n        const targetBehaviors = this.behaviors || (this.behaviors = new Map());\n        const length = behaviors.length;\n        const behaviorsToBind = [];\n        for (let i = 0; i < length; ++i) {\n            const behavior = behaviors[i];\n            if (targetBehaviors.has(behavior)) {\n                targetBehaviors.set(behavior, targetBehaviors.get(behavior) + 1);\n            }\n            else {\n                targetBehaviors.set(behavior, 1);\n                behaviorsToBind.push(behavior);\n            }\n        }\n        if (this._isConnected) {\n            const element = this.element;\n            for (let i = 0; i < behaviorsToBind.length; ++i) {\n                behaviorsToBind[i].bind(element, defaultExecutionContext);\n            }\n        }\n    }\n    /**\n     * Removes behaviors from this element.\n     * @param behaviors - The behaviors to remove.\n     * @param force - Forces unbinding of behaviors.\n     */\n    removeBehaviors(behaviors, force = false) {\n        const targetBehaviors = this.behaviors;\n        if (targetBehaviors === null) {\n            return;\n        }\n        const length = behaviors.length;\n        const behaviorsToUnbind = [];\n        for (let i = 0; i < length; ++i) {\n            const behavior = behaviors[i];\n            if (targetBehaviors.has(behavior)) {\n                const count = targetBehaviors.get(behavior) - 1;\n                count === 0 || force\n                    ? targetBehaviors.delete(behavior) && behaviorsToUnbind.push(behavior)\n                    : targetBehaviors.set(behavior, count);\n            }\n        }\n        if (this._isConnected) {\n            const element = this.element;\n            for (let i = 0; i < behaviorsToUnbind.length; ++i) {\n                behaviorsToUnbind[i].unbind(element);\n            }\n        }\n    }\n    /**\n     * Runs connected lifecycle behavior on the associated element.\n     */\n    onConnectedCallback() {\n        if (this._isConnected) {\n            return;\n        }\n        const element = this.element;\n        if (this.needsInitialization) {\n            this.finishInitialization();\n        }\n        else if (this.view !== null) {\n            this.view.bind(element, defaultExecutionContext);\n        }\n        const behaviors = this.behaviors;\n        if (behaviors !== null) {\n            for (const [behavior] of behaviors) {\n                behavior.bind(element, defaultExecutionContext);\n            }\n        }\n        this.setIsConnected(true);\n    }\n    /**\n     * Runs disconnected lifecycle behavior on the associated element.\n     */\n    onDisconnectedCallback() {\n        if (!this._isConnected) {\n            return;\n        }\n        this.setIsConnected(false);\n        const view = this.view;\n        if (view !== null) {\n            view.unbind();\n        }\n        const behaviors = this.behaviors;\n        if (behaviors !== null) {\n            const element = this.element;\n            for (const [behavior] of behaviors) {\n                behavior.unbind(element);\n            }\n        }\n    }\n    /**\n     * Runs the attribute changed callback for the associated element.\n     * @param name - The name of the attribute that changed.\n     * @param oldValue - The previous value of the attribute.\n     * @param newValue - The new value of the attribute.\n     */\n    onAttributeChangedCallback(name, oldValue, newValue) {\n        const attrDef = this.definition.attributeLookup[name];\n        if (attrDef !== void 0) {\n            attrDef.onAttributeChangedCallback(this.element, newValue);\n        }\n    }\n    /**\n     * Emits a custom HTML event.\n     * @param type - The type name of the event.\n     * @param detail - The event detail object to send with the event.\n     * @param options - The event options. By default bubbles and composed.\n     * @remarks\n     * Only emits events if connected.\n     */\n    emit(type, detail, options) {\n        if (this._isConnected) {\n            return this.element.dispatchEvent(new CustomEvent(type, Object.assign(Object.assign({ detail }, defaultEventOptions), options)));\n        }\n        return false;\n    }\n    finishInitialization() {\n        const element = this.element;\n        const boundObservables = this.boundObservables;\n        // If we have any observables that were bound, re-apply their values.\n        if (boundObservables !== null) {\n            const propertyNames = Object.keys(boundObservables);\n            for (let i = 0, ii = propertyNames.length; i < ii; ++i) {\n                const propertyName = propertyNames[i];\n                element[propertyName] = boundObservables[propertyName];\n            }\n            this.boundObservables = null;\n        }\n        const definition = this.definition;\n        // 1. Template overrides take top precedence.\n        if (this._template === null) {\n            if (this.element.resolveTemplate) {\n                // 2. Allow for element instance overrides next.\n                this._template = this.element.resolveTemplate();\n            }\n            else if (definition.template) {\n                // 3. Default to the static definition.\n                this._template = definition.template || null;\n            }\n        }\n        // If we have a template after the above process, render it.\n        // If there's no template, then the element author has opted into\n        // custom rendering and they will managed the shadow root's content themselves.\n        if (this._template !== null) {\n            this.renderTemplate(this._template);\n        }\n        // 1. Styles overrides take top precedence.\n        if (this._styles === null) {\n            if (this.element.resolveStyles) {\n                // 2. Allow for element instance overrides next.\n                this._styles = this.element.resolveStyles();\n            }\n            else if (definition.styles) {\n                // 3. Default to the static definition.\n                this._styles = definition.styles || null;\n            }\n        }\n        // If we have styles after the above process, add them.\n        if (this._styles !== null) {\n            this.addStyles(this._styles);\n        }\n        this.needsInitialization = false;\n    }\n    renderTemplate(template) {\n        const element = this.element;\n        // When getting the host to render to, we start by looking\n        // up the shadow root. If there isn't one, then that means\n        // we're doing a Light DOM render to the element's direct children.\n        const host = getShadowRoot(element) || element;\n        if (this.view !== null) {\n            // If there's already a view, we need to unbind and remove through dispose.\n            this.view.dispose();\n            this.view = null;\n        }\n        else if (!this.needsInitialization) {\n            // If there was previous custom rendering, we need to clear out the host.\n            DOM.removeChildNodes(host);\n        }\n        if (template) {\n            // If a new template was provided, render it.\n            this.view = template.render(element, host, element);\n        }\n    }\n    /**\n     * Locates or creates a controller for the specified element.\n     * @param element - The element to return the controller for.\n     * @remarks\n     * The specified element must have a {@link FASTElementDefinition}\n     * registered either through the use of the {@link customElement}\n     * decorator or a call to `FASTElement.define`.\n     */\n    static forCustomElement(element) {\n        const controller = element.$fastController;\n        if (controller !== void 0) {\n            return controller;\n        }\n        const definition = FASTElementDefinition.forType(element.constructor);\n        if (definition === void 0) {\n            throw new Error(\"Missing FASTElement definition.\");\n        }\n        return (element.$fastController = new Controller(element, definition));\n    }\n}\n","import { FAST } from \"../platform.js\";\nimport { Observable } from \"../observation/observable.js\";\nimport { ElementStyles } from \"../styles/element-styles.js\";\nimport { AttributeDefinition } from \"./attributes.js\";\nconst defaultShadowOptions = { mode: \"open\" };\nconst defaultElementOptions = {};\nconst fastRegistry = FAST.getById(4 /* elementRegistry */, () => {\n    const typeToDefinition = new Map();\n    return Object.freeze({\n        register(definition) {\n            if (typeToDefinition.has(definition.type)) {\n                return false;\n            }\n            typeToDefinition.set(definition.type, definition);\n            return true;\n        },\n        getByType(key) {\n            return typeToDefinition.get(key);\n        },\n    });\n});\n/**\n * Defines metadata for a FASTElement.\n * @public\n */\nexport class FASTElementDefinition {\n    /**\n     * Creates an instance of FASTElementDefinition.\n     * @param type - The type this definition is being created for.\n     * @param nameOrConfig - The name of the element to define or a config object\n     * that describes the element to define.\n     */\n    constructor(type, nameOrConfig = type.definition) {\n        if (typeof nameOrConfig === \"string\") {\n            nameOrConfig = { name: nameOrConfig };\n        }\n        this.type = type;\n        this.name = nameOrConfig.name;\n        this.template = nameOrConfig.template;\n        const attributes = AttributeDefinition.collect(type, nameOrConfig.attributes);\n        const observedAttributes = new Array(attributes.length);\n        const propertyLookup = {};\n        const attributeLookup = {};\n        for (let i = 0, ii = attributes.length; i < ii; ++i) {\n            const current = attributes[i];\n            observedAttributes[i] = current.attribute;\n            propertyLookup[current.name] = current;\n            attributeLookup[current.attribute] = current;\n        }\n        this.attributes = attributes;\n        this.observedAttributes = observedAttributes;\n        this.propertyLookup = propertyLookup;\n        this.attributeLookup = attributeLookup;\n        this.shadowOptions =\n            nameOrConfig.shadowOptions === void 0\n                ? defaultShadowOptions\n                : nameOrConfig.shadowOptions === null\n                    ? void 0\n                    : Object.assign(Object.assign({}, defaultShadowOptions), nameOrConfig.shadowOptions);\n        this.elementOptions =\n            nameOrConfig.elementOptions === void 0\n                ? defaultElementOptions\n                : Object.assign(Object.assign({}, defaultElementOptions), nameOrConfig.elementOptions);\n        this.styles =\n            nameOrConfig.styles === void 0\n                ? void 0\n                : Array.isArray(nameOrConfig.styles)\n                    ? ElementStyles.create(nameOrConfig.styles)\n                    : nameOrConfig.styles instanceof ElementStyles\n                        ? nameOrConfig.styles\n                        : ElementStyles.create([nameOrConfig.styles]);\n    }\n    /**\n     * Indicates if this element has been defined in at least one registry.\n     */\n    get isDefined() {\n        return !!fastRegistry.getByType(this.type);\n    }\n    /**\n     * Defines a custom element based on this definition.\n     * @param registry - The element registry to define the element in.\n     */\n    define(registry = customElements) {\n        const type = this.type;\n        if (fastRegistry.register(this)) {\n            const attributes = this.attributes;\n            const proto = type.prototype;\n            for (let i = 0, ii = attributes.length; i < ii; ++i) {\n                Observable.defineProperty(proto, attributes[i]);\n            }\n            Reflect.defineProperty(type, \"observedAttributes\", {\n                value: this.observedAttributes,\n                enumerable: true,\n            });\n        }\n        if (!registry.get(this.name)) {\n            registry.define(this.name, type, this.elementOptions);\n        }\n        return this;\n    }\n}\n/**\n * Gets the element definition associated with the specified type.\n * @param type - The custom element type to retrieve the definition for.\n */\nFASTElementDefinition.forType = fastRegistry.getByType;\n","import { Controller } from \"./controller.js\";\nimport { FASTElementDefinition, } from \"./fast-definitions.js\";\n/* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\nfunction createFASTElement(BaseType) {\n    return class extends BaseType {\n        constructor() {\n            /* eslint-disable-next-line */\n            super();\n            Controller.forCustomElement(this);\n        }\n        $emit(type, detail, options) {\n            return this.$fastController.emit(type, detail, options);\n        }\n        connectedCallback() {\n            this.$fastController.onConnectedCallback();\n        }\n        disconnectedCallback() {\n            this.$fastController.onDisconnectedCallback();\n        }\n        attributeChangedCallback(name, oldValue, newValue) {\n            this.$fastController.onAttributeChangedCallback(name, oldValue, newValue);\n        }\n    };\n}\n/**\n * A minimal base class for FASTElements that also provides\n * static helpers for working with FASTElements.\n * @public\n */\nexport const FASTElement = Object.assign(createFASTElement(HTMLElement), {\n    /**\n     * Creates a new FASTElement base class inherited from the\n     * provided base type.\n     * @param BaseType - The base element type to inherit from.\n     */\n    from(BaseType) {\n        return createFASTElement(BaseType);\n    },\n    /**\n     * Defines a platform custom element based on the provided type and definition.\n     * @param type - The custom element type to define.\n     * @param nameOrDef - The name of the element to define or a definition object\n     * that describes the element to define.\n     */\n    define(type, nameOrDef) {\n        return new FASTElementDefinition(type, nameOrDef).define().type;\n    },\n});\n/**\n * Decorator: Defines a platform custom element based on `FASTElement`.\n * @param nameOrDef - The name of the element to define or a definition object\n * that describes the element to define.\n * @public\n */\nexport function customElement(nameOrDef) {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\n    return function (type) {\n        new FASTElementDefinition(type, nameOrDef).define();\n    };\n}\n","import { $global } from \"./platform.js\";\nconst updateQueue = $global.FAST.getById(1 /* updateQueue */, () => {\n    const tasks = [];\n    const pendingErrors = [];\n    function throwFirstError() {\n        if (pendingErrors.length) {\n            throw pendingErrors.shift();\n        }\n    }\n    function tryRunTask(task) {\n        try {\n            task.call();\n        }\n        catch (error) {\n            pendingErrors.push(error);\n            setTimeout(throwFirstError, 0);\n        }\n    }\n    function process() {\n        const capacity = 1024;\n        let index = 0;\n        while (index < tasks.length) {\n            tryRunTask(tasks[index]);\n            index++;\n            // Prevent leaking memory for long chains of recursive calls to `DOM.queueUpdate`.\n            // If we call `DOM.queueUpdate` within a task scheduled by `DOM.queueUpdate`, the queue will\n            // grow, but to avoid an O(n) walk for every task we execute, we don't\n            // shift tasks off the queue after they have been executed.\n            // Instead, we periodically shift 1024 tasks off the queue.\n            if (index > capacity) {\n                // Manually shift all values starting at the index back to the\n                // beginning of the queue.\n                for (let scan = 0, newLength = tasks.length - index; scan < newLength; scan++) {\n                    tasks[scan] = tasks[scan + index];\n                }\n                tasks.length -= index;\n                index = 0;\n            }\n        }\n        tasks.length = 0;\n    }\n    function enqueue(callable) {\n        if (tasks.length < 1) {\n            $global.requestAnimationFrame(process);\n        }\n        tasks.push(callable);\n    }\n    return Object.freeze({\n        enqueue,\n        process,\n    });\n});\n/* eslint-disable */\nconst fastHTMLPolicy = $global.trustedTypes.createPolicy(\"fast-html\", {\n    createHTML: html => html,\n});\n/* eslint-enable */\nlet htmlPolicy = fastHTMLPolicy;\nconst marker = `fast-${Math.random().toString(36).substring(2, 8)}`;\n/** @internal */\nexport const _interpolationStart = `${marker}{`;\n/** @internal */\nexport const _interpolationEnd = `}${marker}`;\n/**\n * Common DOM APIs.\n * @public\n */\nexport const DOM = Object.freeze({\n    /**\n     * Indicates whether the DOM supports the adoptedStyleSheets feature.\n     */\n    supportsAdoptedStyleSheets: Array.isArray(document.adoptedStyleSheets) &&\n        \"replace\" in CSSStyleSheet.prototype,\n    /**\n     * Sets the HTML trusted types policy used by the templating engine.\n     * @param policy - The policy to set for HTML.\n     * @remarks\n     * This API can only be called once, for security reasons. It should be\n     * called by the application developer at the start of their program.\n     */\n    setHTMLPolicy(policy) {\n        if (htmlPolicy !== fastHTMLPolicy) {\n            throw new Error(\"The HTML policy can only be set once.\");\n        }\n        htmlPolicy = policy;\n    },\n    /**\n     * Turns a string into trusted HTML using the configured trusted types policy.\n     * @param html - The string to turn into trusted HTML.\n     * @remarks\n     * Used internally by the template engine when creating templates\n     * and setting innerHTML.\n     */\n    createHTML(html) {\n        return htmlPolicy.createHTML(html);\n    },\n    /**\n     * Determines if the provided node is a template marker used by the runtime.\n     * @param node - The node to test.\n     */\n    isMarker(node) {\n        return node && node.nodeType === 8 && node.data.startsWith(marker);\n    },\n    /**\n     * Given a marker node, extract the {@link HTMLDirective} index from the placeholder.\n     * @param node - The marker node to extract the index from.\n     */\n    extractDirectiveIndexFromMarker(node) {\n        return parseInt(node.data.replace(`${marker}:`, \"\"));\n    },\n    /**\n     * Creates a placeholder string suitable for marking out a location *within*\n     * an attribute value or HTML content.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by binding directives.\n     */\n    createInterpolationPlaceholder(index) {\n        return `${_interpolationStart}${index}${_interpolationEnd}`;\n    },\n    /**\n     * Creates a placeholder that manifests itself as an attribute on an\n     * element.\n     * @param attributeName - The name of the custom attribute.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by attribute directives such as `ref`, `slotted`, and `children`.\n     */\n    createCustomAttributePlaceholder(attributeName, index) {\n        return `${attributeName}=\"${this.createInterpolationPlaceholder(index)}\"`;\n    },\n    /**\n     * Creates a placeholder that manifests itself as a marker within the DOM structure.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by structural directives such as `repeat`.\n     */\n    createBlockPlaceholder(index) {\n        return `<!--${marker}:${index}-->`;\n    },\n    /**\n     * Schedules DOM update work in the next async batch.\n     * @param callable - The callable function or object to queue.\n     */\n    queueUpdate: updateQueue.enqueue,\n    /**\n     * Immediately processes all work previously scheduled\n     * through queueUpdate.\n     * @remarks\n     * This also forces nextUpdate promises\n     * to resolve.\n     */\n    processUpdates: updateQueue.process,\n    /**\n     * Resolves with the next DOM update.\n     */\n    nextUpdate() {\n        return new Promise(updateQueue.enqueue);\n    },\n    /**\n     * Sets an attribute value on an element.\n     * @param element - The element to set the attribute value on.\n     * @param attributeName - The attribute name to set.\n     * @param value - The value of the attribute to set.\n     * @remarks\n     * If the value is `null` or `undefined`, the attribute is removed, otherwise\n     * it is set to the provided value using the standard `setAttribute` API.\n     */\n    setAttribute(element, attributeName, value) {\n        if (value === null || value === undefined) {\n            element.removeAttribute(attributeName);\n        }\n        else {\n            element.setAttribute(attributeName, value);\n        }\n    },\n    /**\n     * Sets a boolean attribute value.\n     * @param element - The element to set the boolean attribute value on.\n     * @param attributeName - The attribute name to set.\n     * @param value - The value of the attribute to set.\n     * @remarks\n     * If the value is true, the attribute is added; otherwise it is removed.\n     */\n    setBooleanAttribute(element, attributeName, value) {\n        value\n            ? element.setAttribute(attributeName, \"\")\n            : element.removeAttribute(attributeName);\n    },\n    /**\n     * Removes all the child nodes of the provided parent node.\n     * @param parent - The node to remove the children from.\n     */\n    removeChildNodes(parent) {\n        for (let child = parent.firstChild; child !== null; child = parent.firstChild) {\n            parent.removeChild(child);\n        }\n    },\n    /**\n     * Creates a TreeWalker configured to walk a template fragment.\n     * @param fragment - The fragment to walk.\n     */\n    createTemplateWalker(fragment) {\n        return document.createTreeWalker(fragment, 133, // element, text, comment\n        null, false);\n    },\n});\n","export * from \"./platform.js\";\nexport * from \"./templating/template.js\";\nexport * from \"./components/fast-element.js\";\nexport { FASTElementDefinition, } from \"./components/fast-definitions.js\";\nexport * from \"./components/attributes.js\";\nexport * from \"./components/controller.js\";\nexport * from \"./templating/compiler.js\";\nexport { ElementStyles, } from \"./styles/element-styles.js\";\nexport { css, cssPartial } from \"./styles/css.js\";\nexport { CSSDirective } from \"./styles/css-directive.js\";\nexport * from \"./templating/view.js\";\nexport * from \"./observation/observable.js\";\nexport * from \"./observation/notifier.js\";\nexport {} from \"./observation/array-change-records.js\";\nexport { enableArrayObservation } from \"./observation/array-observer.js\";\nexport { DOM } from \"./dom.js\";\nexport * from \"./templating/binding.js\";\nexport * from \"./templating/html-directive.js\";\nexport * from \"./templating/ref.js\";\nexport * from \"./templating/when.js\";\nexport * from \"./templating/repeat.js\";\nexport * from \"./templating/slotted.js\";\nexport * from \"./templating/children.js\";\nexport { elements, } from \"./templating/node-observation.js\";\n","import { emptyArray } from \"../platform.js\";\n/** @internal */\nexport function newSplice(index, removed, addedCount) {\n    return {\n        index: index,\n        removed: removed,\n        addedCount: addedCount,\n    };\n}\nconst EDIT_LEAVE = 0;\nconst EDIT_UPDATE = 1;\nconst EDIT_ADD = 2;\nconst EDIT_DELETE = 3;\n// Note: This function is *based* on the computation of the Levenshtein\n// \"edit\" distance. The one change is that \"updates\" are treated as two\n// edits - not one. With Array splices, an update is really a delete\n// followed by an add. By retaining this, we optimize for \"keeping\" the\n// maximum array items in the original array. For example:\n//\n//   'xxxx123' -> '123yyyy'\n//\n// With 1-edit updates, the shortest path would be just to update all seven\n// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n// leaves the substring '123' intact.\nfunction calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    // \"Deletion\" columns\n    const rowCount = oldEnd - oldStart + 1;\n    const columnCount = currentEnd - currentStart + 1;\n    const distances = new Array(rowCount);\n    let north;\n    let west;\n    // \"Addition\" rows. Initialize null column.\n    for (let i = 0; i < rowCount; ++i) {\n        distances[i] = new Array(columnCount);\n        distances[i][0] = i;\n    }\n    // Initialize null row\n    for (let j = 0; j < columnCount; ++j) {\n        distances[0][j] = j;\n    }\n    for (let i = 1; i < rowCount; ++i) {\n        for (let j = 1; j < columnCount; ++j) {\n            if (current[currentStart + j - 1] === old[oldStart + i - 1]) {\n                distances[i][j] = distances[i - 1][j - 1];\n            }\n            else {\n                north = distances[i - 1][j] + 1;\n                west = distances[i][j - 1] + 1;\n                distances[i][j] = north < west ? north : west;\n            }\n        }\n    }\n    return distances;\n}\n// This starts at the final weight, and walks \"backward\" by finding\n// the minimum previous weight recursively until the origin of the weight\n// matrix.\nfunction spliceOperationsFromEditDistances(distances) {\n    let i = distances.length - 1;\n    let j = distances[0].length - 1;\n    let current = distances[i][j];\n    const edits = [];\n    while (i > 0 || j > 0) {\n        if (i === 0) {\n            edits.push(EDIT_ADD);\n            j--;\n            continue;\n        }\n        if (j === 0) {\n            edits.push(EDIT_DELETE);\n            i--;\n            continue;\n        }\n        const northWest = distances[i - 1][j - 1];\n        const west = distances[i - 1][j];\n        const north = distances[i][j - 1];\n        let min;\n        if (west < north) {\n            min = west < northWest ? west : northWest;\n        }\n        else {\n            min = north < northWest ? north : northWest;\n        }\n        if (min === northWest) {\n            if (northWest === current) {\n                edits.push(EDIT_LEAVE);\n            }\n            else {\n                edits.push(EDIT_UPDATE);\n                current = northWest;\n            }\n            i--;\n            j--;\n        }\n        else if (min === west) {\n            edits.push(EDIT_DELETE);\n            i--;\n            current = west;\n        }\n        else {\n            edits.push(EDIT_ADD);\n            j--;\n            current = north;\n        }\n    }\n    edits.reverse();\n    return edits;\n}\nfunction sharedPrefix(current, old, searchLength) {\n    for (let i = 0; i < searchLength; ++i) {\n        if (current[i] !== old[i]) {\n            return i;\n        }\n    }\n    return searchLength;\n}\nfunction sharedSuffix(current, old, searchLength) {\n    let index1 = current.length;\n    let index2 = old.length;\n    let count = 0;\n    while (count < searchLength && current[--index1] === old[--index2]) {\n        count++;\n    }\n    return count;\n}\nfunction intersect(start1, end1, start2, end2) {\n    // Disjoint\n    if (end1 < start2 || end2 < start1) {\n        return -1;\n    }\n    // Adjacent\n    if (end1 === start2 || end2 === start1) {\n        return 0;\n    }\n    // Non-zero intersect, span1 first\n    if (start1 < start2) {\n        if (end1 < end2) {\n            return end1 - start2; // Overlap\n        }\n        return end2 - start2; // Contained\n    }\n    // Non-zero intersect, span2 first\n    if (end2 < end1) {\n        return end2 - start1; // Overlap\n    }\n    return end1 - start1; // Contained\n}\n/**\n * Splice Projection functions:\n *\n * A splice map is a representation of how a previous array of items\n * was transformed into a new array of items. Conceptually it is a list of\n * tuples of\n *\n *   <index, removed, addedCount>\n *\n * which are kept in ascending index order of. The tuple represents that at\n * the |index|, |removed| sequence of items were removed, and counting forward\n * from |index|, |addedCount| items were added.\n */\n/**\n * @internal\n * @remarks\n * Lacking individual splice mutation information, the minimal set of\n * splices can be synthesized given the previous state and final state of an\n * array. The basic approach is to calculate the edit distance matrix and\n * choose the shortest path through it.\n *\n * Complexity: O(l * p)\n *   l: The length of the current array\n *   p: The length of the old array\n */\nexport function calcSplices(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    let prefixCount = 0;\n    let suffixCount = 0;\n    const minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n    if (currentStart === 0 && oldStart === 0) {\n        prefixCount = sharedPrefix(current, old, minLength);\n    }\n    if (currentEnd === current.length && oldEnd === old.length) {\n        suffixCount = sharedSuffix(current, old, minLength - prefixCount);\n    }\n    currentStart += prefixCount;\n    oldStart += prefixCount;\n    currentEnd -= suffixCount;\n    oldEnd -= suffixCount;\n    if (currentEnd - currentStart === 0 && oldEnd - oldStart === 0) {\n        return emptyArray;\n    }\n    if (currentStart === currentEnd) {\n        const splice = newSplice(currentStart, [], 0);\n        while (oldStart < oldEnd) {\n            splice.removed.push(old[oldStart++]);\n        }\n        return [splice];\n    }\n    else if (oldStart === oldEnd) {\n        return [newSplice(currentStart, [], currentEnd - currentStart)];\n    }\n    const ops = spliceOperationsFromEditDistances(calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));\n    const splices = [];\n    let splice = void 0;\n    let index = currentStart;\n    let oldIndex = oldStart;\n    for (let i = 0; i < ops.length; ++i) {\n        switch (ops[i]) {\n            case EDIT_LEAVE:\n                if (splice !== void 0) {\n                    splices.push(splice);\n                    splice = void 0;\n                }\n                index++;\n                oldIndex++;\n                break;\n            case EDIT_UPDATE:\n                if (splice === void 0) {\n                    splice = newSplice(index, [], 0);\n                }\n                splice.addedCount++;\n                index++;\n                splice.removed.push(old[oldIndex]);\n                oldIndex++;\n                break;\n            case EDIT_ADD:\n                if (splice === void 0) {\n                    splice = newSplice(index, [], 0);\n                }\n                splice.addedCount++;\n                index++;\n                break;\n            case EDIT_DELETE:\n                if (splice === void 0) {\n                    splice = newSplice(index, [], 0);\n                }\n                splice.removed.push(old[oldIndex]);\n                oldIndex++;\n                break;\n            // no default\n        }\n    }\n    if (splice !== void 0) {\n        splices.push(splice);\n    }\n    return splices;\n}\nconst $push = Array.prototype.push;\nfunction mergeSplice(splices, index, removed, addedCount) {\n    const splice = newSplice(index, removed, addedCount);\n    let inserted = false;\n    let insertionOffset = 0;\n    for (let i = 0; i < splices.length; i++) {\n        const current = splices[i];\n        current.index += insertionOffset;\n        if (inserted) {\n            continue;\n        }\n        const intersectCount = intersect(splice.index, splice.index + splice.removed.length, current.index, current.index + current.addedCount);\n        if (intersectCount >= 0) {\n            // Merge the two splices\n            splices.splice(i, 1);\n            i--;\n            insertionOffset -= current.addedCount - current.removed.length;\n            splice.addedCount += current.addedCount - intersectCount;\n            const deleteCount = splice.removed.length + current.removed.length - intersectCount;\n            if (!splice.addedCount && !deleteCount) {\n                // merged splice is a noop. discard.\n                inserted = true;\n            }\n            else {\n                let currentRemoved = current.removed;\n                if (splice.index < current.index) {\n                    // some prefix of splice.removed is prepended to current.removed.\n                    const prepend = splice.removed.slice(0, current.index - splice.index);\n                    $push.apply(prepend, currentRemoved);\n                    currentRemoved = prepend;\n                }\n                if (splice.index + splice.removed.length >\n                    current.index + current.addedCount) {\n                    // some suffix of splice.removed is appended to current.removed.\n                    const append = splice.removed.slice(current.index + current.addedCount - splice.index);\n                    $push.apply(currentRemoved, append);\n                }\n                splice.removed = currentRemoved;\n                if (current.index < splice.index) {\n                    splice.index = current.index;\n                }\n            }\n        }\n        else if (splice.index < current.index) {\n            // Insert splice here.\n            inserted = true;\n            splices.splice(i, 0, splice);\n            i++;\n            const offset = splice.addedCount - splice.removed.length;\n            current.index += offset;\n            insertionOffset += offset;\n        }\n    }\n    if (!inserted) {\n        splices.push(splice);\n    }\n}\nfunction createInitialSplices(changeRecords) {\n    const splices = [];\n    for (let i = 0, ii = changeRecords.length; i < ii; i++) {\n        const record = changeRecords[i];\n        mergeSplice(splices, record.index, record.removed, record.addedCount);\n    }\n    return splices;\n}\n/** @internal */\nexport function projectArraySplices(array, changeRecords) {\n    let splices = [];\n    const initialSplices = createInitialSplices(changeRecords);\n    for (let i = 0, ii = initialSplices.length; i < ii; ++i) {\n        const splice = initialSplices[i];\n        if (splice.addedCount === 1 && splice.removed.length === 1) {\n            if (splice.removed[0] !== array[splice.index]) {\n                splices.push(splice);\n            }\n            continue;\n        }\n        splices = splices.concat(calcSplices(array, splice.index, splice.index + splice.addedCount, splice.removed, 0, splice.removed.length));\n    }\n    return splices;\n}\n","import { DOM } from \"../dom.js\";\nimport { calcSplices, newSplice, projectArraySplices } from \"./array-change-records.js\";\nimport { SubscriberSet } from \"./notifier.js\";\nimport { Observable } from \"./observable.js\";\nlet arrayObservationEnabled = false;\nfunction adjustIndex(changeRecord, array) {\n    let index = changeRecord.index;\n    const arrayLength = array.length;\n    if (index > arrayLength) {\n        index = arrayLength - changeRecord.addedCount;\n    }\n    else if (index < 0) {\n        index =\n            arrayLength + changeRecord.removed.length + index - changeRecord.addedCount;\n    }\n    if (index < 0) {\n        index = 0;\n    }\n    changeRecord.index = index;\n    return changeRecord;\n}\nclass ArrayObserver extends SubscriberSet {\n    constructor(source) {\n        super(source);\n        this.oldCollection = void 0;\n        this.splices = void 0;\n        this.needsQueue = true;\n        this.call = this.flush;\n        Reflect.defineProperty(source, \"$fastController\", {\n            value: this,\n            enumerable: false,\n        });\n    }\n    subscribe(subscriber) {\n        this.flush();\n        super.subscribe(subscriber);\n    }\n    addSplice(splice) {\n        if (this.splices === void 0) {\n            this.splices = [splice];\n        }\n        else {\n            this.splices.push(splice);\n        }\n        if (this.needsQueue) {\n            this.needsQueue = false;\n            DOM.queueUpdate(this);\n        }\n    }\n    reset(oldCollection) {\n        this.oldCollection = oldCollection;\n        if (this.needsQueue) {\n            this.needsQueue = false;\n            DOM.queueUpdate(this);\n        }\n    }\n    flush() {\n        const splices = this.splices;\n        const oldCollection = this.oldCollection;\n        if (splices === void 0 && oldCollection === void 0) {\n            return;\n        }\n        this.needsQueue = true;\n        this.splices = void 0;\n        this.oldCollection = void 0;\n        const finalSplices = oldCollection === void 0\n            ? projectArraySplices(this.source, splices)\n            : calcSplices(this.source, 0, this.source.length, oldCollection, 0, oldCollection.length);\n        this.notify(finalSplices);\n    }\n}\n/* eslint-disable prefer-rest-params */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/**\n * Enables the array observation mechanism.\n * @remarks\n * Array observation is enabled automatically when using the\n * {@link RepeatDirective}, so calling this API manually is\n * not typically necessary.\n * @public\n */\nexport function enableArrayObservation() {\n    if (arrayObservationEnabled) {\n        return;\n    }\n    arrayObservationEnabled = true;\n    Observable.setArrayObserverFactory((collection) => {\n        return new ArrayObserver(collection);\n    });\n    const proto = Array.prototype;\n    // Don't patch Array if it has already been patched\n    // by another copy of fast-element.\n    if (proto.$fastPatch) {\n        return;\n    }\n    Reflect.defineProperty(proto, \"$fastPatch\", {\n        value: 1,\n        enumerable: false,\n    });\n    const pop = proto.pop;\n    const push = proto.push;\n    const reverse = proto.reverse;\n    const shift = proto.shift;\n    const sort = proto.sort;\n    const splice = proto.splice;\n    const unshift = proto.unshift;\n    proto.pop = function () {\n        const notEmpty = this.length > 0;\n        const methodCallResult = pop.apply(this, arguments);\n        const o = this.$fastController;\n        if (o !== void 0 && notEmpty) {\n            o.addSplice(newSplice(this.length, [methodCallResult], 0));\n        }\n        return methodCallResult;\n    };\n    proto.push = function () {\n        const methodCallResult = push.apply(this, arguments);\n        const o = this.$fastController;\n        if (o !== void 0) {\n            o.addSplice(adjustIndex(newSplice(this.length - arguments.length, [], arguments.length), this));\n        }\n        return methodCallResult;\n    };\n    proto.reverse = function () {\n        let oldArray;\n        const o = this.$fastController;\n        if (o !== void 0) {\n            o.flush();\n            oldArray = this.slice();\n        }\n        const methodCallResult = reverse.apply(this, arguments);\n        if (o !== void 0) {\n            o.reset(oldArray);\n        }\n        return methodCallResult;\n    };\n    proto.shift = function () {\n        const notEmpty = this.length > 0;\n        const methodCallResult = shift.apply(this, arguments);\n        const o = this.$fastController;\n        if (o !== void 0 && notEmpty) {\n            o.addSplice(newSplice(0, [methodCallResult], 0));\n        }\n        return methodCallResult;\n    };\n    proto.sort = function () {\n        let oldArray;\n        const o = this.$fastController;\n        if (o !== void 0) {\n            o.flush();\n            oldArray = this.slice();\n        }\n        const methodCallResult = sort.apply(this, arguments);\n        if (o !== void 0) {\n            o.reset(oldArray);\n        }\n        return methodCallResult;\n    };\n    proto.splice = function () {\n        const methodCallResult = splice.apply(this, arguments);\n        const o = this.$fastController;\n        if (o !== void 0) {\n            o.addSplice(adjustIndex(newSplice(+arguments[0], methodCallResult, arguments.length > 2 ? arguments.length - 2 : 0), this));\n        }\n        return methodCallResult;\n    };\n    proto.unshift = function () {\n        const methodCallResult = unshift.apply(this, arguments);\n        const o = this.$fastController;\n        if (o !== void 0) {\n            o.addSplice(adjustIndex(newSplice(0, [], arguments.length), this));\n        }\n        return methodCallResult;\n    };\n}\n/* eslint-enable prefer-rest-params */\n/* eslint-enable @typescript-eslint/explicit-function-return-type */\n","/**\n * An implementation of {@link Notifier} that efficiently keeps track of\n * subscribers interested in a specific change notification on an\n * observable source.\n *\n * @remarks\n * This set is optimized for the most common scenario of 1 or 2 subscribers.\n * With this in mind, it can store a subscriber in an internal field, allowing it to avoid Array#push operations.\n * If the set ever exceeds two subscribers, it upgrades to an array automatically.\n * @public\n */\nexport class SubscriberSet {\n    /**\n     * Creates an instance of SubscriberSet for the specified source.\n     * @param source - The object source that subscribers will receive notifications from.\n     * @param initialSubscriber - An initial subscriber to changes.\n     */\n    constructor(source, initialSubscriber) {\n        this.sub1 = void 0;\n        this.sub2 = void 0;\n        this.spillover = void 0;\n        this.source = source;\n        this.sub1 = initialSubscriber;\n    }\n    /**\n     * Checks whether the provided subscriber has been added to this set.\n     * @param subscriber - The subscriber to test for inclusion in this set.\n     */\n    has(subscriber) {\n        return this.spillover === void 0\n            ? this.sub1 === subscriber || this.sub2 === subscriber\n            : this.spillover.indexOf(subscriber) !== -1;\n    }\n    /**\n     * Subscribes to notification of changes in an object's state.\n     * @param subscriber - The object that is subscribing for change notification.\n     */\n    subscribe(subscriber) {\n        const spillover = this.spillover;\n        if (spillover === void 0) {\n            if (this.has(subscriber)) {\n                return;\n            }\n            if (this.sub1 === void 0) {\n                this.sub1 = subscriber;\n                return;\n            }\n            if (this.sub2 === void 0) {\n                this.sub2 = subscriber;\n                return;\n            }\n            this.spillover = [this.sub1, this.sub2, subscriber];\n            this.sub1 = void 0;\n            this.sub2 = void 0;\n        }\n        else {\n            const index = spillover.indexOf(subscriber);\n            if (index === -1) {\n                spillover.push(subscriber);\n            }\n        }\n    }\n    /**\n     * Unsubscribes from notification of changes in an object's state.\n     * @param subscriber - The object that is unsubscribing from change notification.\n     */\n    unsubscribe(subscriber) {\n        const spillover = this.spillover;\n        if (spillover === void 0) {\n            if (this.sub1 === subscriber) {\n                this.sub1 = void 0;\n            }\n            else if (this.sub2 === subscriber) {\n                this.sub2 = void 0;\n            }\n        }\n        else {\n            const index = spillover.indexOf(subscriber);\n            if (index !== -1) {\n                spillover.splice(index, 1);\n            }\n        }\n    }\n    /**\n     * Notifies all subscribers.\n     * @param args - Data passed along to subscribers during notification.\n     */\n    notify(args) {\n        const spillover = this.spillover;\n        const source = this.source;\n        if (spillover === void 0) {\n            const sub1 = this.sub1;\n            const sub2 = this.sub2;\n            if (sub1 !== void 0) {\n                sub1.handleChange(source, args);\n            }\n            if (sub2 !== void 0) {\n                sub2.handleChange(source, args);\n            }\n        }\n        else {\n            for (let i = 0, ii = spillover.length; i < ii; ++i) {\n                spillover[i].handleChange(source, args);\n            }\n        }\n    }\n}\n/**\n * An implementation of Notifier that allows subscribers to be notified\n * of individual property changes on an object.\n * @public\n */\nexport class PropertyChangeNotifier {\n    /**\n     * Creates an instance of PropertyChangeNotifier for the specified source.\n     * @param source - The object source that subscribers will receive notifications from.\n     */\n    constructor(source) {\n        this.subscribers = {};\n        this.sourceSubscribers = null;\n        this.source = source;\n    }\n    /**\n     * Notifies all subscribers, based on the specified property.\n     * @param propertyName - The property name, passed along to subscribers during notification.\n     */\n    notify(propertyName) {\n        var _a;\n        const subscribers = this.subscribers[propertyName];\n        if (subscribers !== void 0) {\n            subscribers.notify(propertyName);\n        }\n        (_a = this.sourceSubscribers) === null || _a === void 0 ? void 0 : _a.notify(propertyName);\n    }\n    /**\n     * Subscribes to notification of changes in an object's state.\n     * @param subscriber - The object that is subscribing for change notification.\n     * @param propertyToWatch - The name of the property that the subscriber is interested in watching for changes.\n     */\n    subscribe(subscriber, propertyToWatch) {\n        var _a;\n        if (propertyToWatch) {\n            let subscribers = this.subscribers[propertyToWatch];\n            if (subscribers === void 0) {\n                this.subscribers[propertyToWatch] = subscribers = new SubscriberSet(this.source);\n            }\n            subscribers.subscribe(subscriber);\n        }\n        else {\n            this.sourceSubscribers =\n                (_a = this.sourceSubscribers) !== null && _a !== void 0 ? _a : new SubscriberSet(this.source);\n            this.sourceSubscribers.subscribe(subscriber);\n        }\n    }\n    /**\n     * Unsubscribes from notification of changes in an object's state.\n     * @param subscriber - The object that is unsubscribing from change notification.\n     * @param propertyToUnwatch - The name of the property that the subscriber is no longer interested in watching.\n     */\n    unsubscribe(subscriber, propertyToUnwatch) {\n        var _a;\n        if (propertyToUnwatch) {\n            const subscribers = this.subscribers[propertyToUnwatch];\n            if (subscribers !== void 0) {\n                subscribers.unsubscribe(subscriber);\n            }\n        }\n        else {\n            (_a = this.sourceSubscribers) === null || _a === void 0 ? void 0 : _a.unsubscribe(subscriber);\n        }\n    }\n}\n","import { DOM } from \"../dom.js\";\nimport { createMetadataLocator, FAST } from \"../platform.js\";\nimport { PropertyChangeNotifier, SubscriberSet } from \"./notifier.js\";\n/**\n * Common Observable APIs.\n * @public\n */\nexport const Observable = FAST.getById(2 /* observable */, () => {\n    const volatileRegex = /(:|&&|\\|\\||if)/;\n    const notifierLookup = new WeakMap();\n    const queueUpdate = DOM.queueUpdate;\n    let watcher = void 0;\n    let createArrayObserver = (array) => {\n        throw new Error(\"Must call enableArrayObservation before observing arrays.\");\n    };\n    function getNotifier(source) {\n        let found = source.$fastController || notifierLookup.get(source);\n        if (found === void 0) {\n            if (Array.isArray(source)) {\n                found = createArrayObserver(source);\n            }\n            else {\n                notifierLookup.set(source, (found = new PropertyChangeNotifier(source)));\n            }\n        }\n        return found;\n    }\n    const getAccessors = createMetadataLocator();\n    class DefaultObservableAccessor {\n        constructor(name) {\n            this.name = name;\n            this.field = `_${name}`;\n            this.callback = `${name}Changed`;\n        }\n        getValue(source) {\n            if (watcher !== void 0) {\n                watcher.watch(source, this.name);\n            }\n            return source[this.field];\n        }\n        setValue(source, newValue) {\n            const field = this.field;\n            const oldValue = source[field];\n            if (oldValue !== newValue) {\n                source[field] = newValue;\n                const callback = source[this.callback];\n                if (typeof callback === \"function\") {\n                    callback.call(source, oldValue, newValue);\n                }\n                getNotifier(source).notify(this.name);\n            }\n        }\n    }\n    class BindingObserverImplementation extends SubscriberSet {\n        constructor(binding, initialSubscriber, isVolatileBinding = false) {\n            super(binding, initialSubscriber);\n            this.binding = binding;\n            this.isVolatileBinding = isVolatileBinding;\n            this.needsRefresh = true;\n            this.needsQueue = true;\n            this.first = this;\n            this.last = null;\n            this.propertySource = void 0;\n            this.propertyName = void 0;\n            this.notifier = void 0;\n            this.next = void 0;\n        }\n        observe(source, context) {\n            if (this.needsRefresh && this.last !== null) {\n                this.disconnect();\n            }\n            const previousWatcher = watcher;\n            watcher = this.needsRefresh ? this : void 0;\n            this.needsRefresh = this.isVolatileBinding;\n            const result = this.binding(source, context);\n            watcher = previousWatcher;\n            return result;\n        }\n        disconnect() {\n            if (this.last !== null) {\n                let current = this.first;\n                while (current !== void 0) {\n                    current.notifier.unsubscribe(this, current.propertyName);\n                    current = current.next;\n                }\n                this.last = null;\n                this.needsRefresh = this.needsQueue = true;\n            }\n        }\n        watch(propertySource, propertyName) {\n            const prev = this.last;\n            const notifier = getNotifier(propertySource);\n            const current = prev === null ? this.first : {};\n            current.propertySource = propertySource;\n            current.propertyName = propertyName;\n            current.notifier = notifier;\n            notifier.subscribe(this, propertyName);\n            if (prev !== null) {\n                if (!this.needsRefresh) {\n                    // Declaring the variable prior to assignment below circumvents\n                    // a bug in Angular's optimization process causing infinite recursion\n                    // of this watch() method. Details https://github.com/microsoft/fast/issues/4969\n                    let prevValue;\n                    watcher = void 0;\n                    /* eslint-disable-next-line */\n                    prevValue = prev.propertySource[prev.propertyName];\n                    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n                    watcher = this;\n                    if (propertySource === prevValue) {\n                        this.needsRefresh = true;\n                    }\n                }\n                prev.next = current;\n            }\n            this.last = current;\n        }\n        handleChange() {\n            if (this.needsQueue) {\n                this.needsQueue = false;\n                queueUpdate(this);\n            }\n        }\n        call() {\n            if (this.last !== null) {\n                this.needsQueue = true;\n                this.notify(this);\n            }\n        }\n        records() {\n            let next = this.first;\n            return {\n                next: () => {\n                    const current = next;\n                    if (current === undefined) {\n                        return { value: void 0, done: true };\n                    }\n                    else {\n                        next = next.next;\n                        return {\n                            value: current,\n                            done: false,\n                        };\n                    }\n                },\n                [Symbol.iterator]: function () {\n                    return this;\n                },\n            };\n        }\n    }\n    return Object.freeze({\n        /**\n         * @internal\n         * @param factory - The factory used to create array observers.\n         */\n        setArrayObserverFactory(factory) {\n            createArrayObserver = factory;\n        },\n        /**\n         * Gets a notifier for an object or Array.\n         * @param source - The object or Array to get the notifier for.\n         */\n        getNotifier,\n        /**\n         * Records a property change for a source object.\n         * @param source - The object to record the change against.\n         * @param propertyName - The property to track as changed.\n         */\n        track(source, propertyName) {\n            if (watcher !== void 0) {\n                watcher.watch(source, propertyName);\n            }\n        },\n        /**\n         * Notifies watchers that the currently executing property getter or function is volatile\n         * with respect to its observable dependencies.\n         */\n        trackVolatile() {\n            if (watcher !== void 0) {\n                watcher.needsRefresh = true;\n            }\n        },\n        /**\n         * Notifies subscribers of a source object of changes.\n         * @param source - the object to notify of changes.\n         * @param args - The change args to pass to subscribers.\n         */\n        notify(source, args) {\n            getNotifier(source).notify(args);\n        },\n        /**\n         * Defines an observable property on an object or prototype.\n         * @param target - The target object to define the observable on.\n         * @param nameOrAccessor - The name of the property to define as observable;\n         * or a custom accessor that specifies the property name and accessor implementation.\n         */\n        defineProperty(target, nameOrAccessor) {\n            if (typeof nameOrAccessor === \"string\") {\n                nameOrAccessor = new DefaultObservableAccessor(nameOrAccessor);\n            }\n            getAccessors(target).push(nameOrAccessor);\n            Reflect.defineProperty(target, nameOrAccessor.name, {\n                enumerable: true,\n                get: function () {\n                    return nameOrAccessor.getValue(this);\n                },\n                set: function (newValue) {\n                    nameOrAccessor.setValue(this, newValue);\n                },\n            });\n        },\n        /**\n         * Finds all the observable accessors defined on the target,\n         * including its prototype chain.\n         * @param target - The target object to search for accessor on.\n         */\n        getAccessors,\n        /**\n         * Creates a {@link BindingObserver} that can watch the\n         * provided {@link Binding} for changes.\n         * @param binding - The binding to observe.\n         * @param initialSubscriber - An initial subscriber to changes in the binding value.\n         * @param isVolatileBinding - Indicates whether the binding's dependency list must be re-evaluated on every value evaluation.\n         */\n        binding(binding, initialSubscriber, isVolatileBinding = this.isVolatileBinding(binding)) {\n            return new BindingObserverImplementation(binding, initialSubscriber, isVolatileBinding);\n        },\n        /**\n         * Determines whether a binding expression is volatile and needs to have its dependency list re-evaluated\n         * on every evaluation of the value.\n         * @param binding - The binding to inspect.\n         */\n        isVolatileBinding(binding) {\n            return volatileRegex.test(binding.toString());\n        },\n    });\n});\n/**\n * Decorator: Defines an observable property on the target.\n * @param target - The target to define the observable on.\n * @param nameOrAccessor - The property name or accessor to define the observable as.\n * @public\n */\nexport function observable(target, nameOrAccessor) {\n    Observable.defineProperty(target, nameOrAccessor);\n}\n/**\n * Decorator: Marks a property getter as having volatile observable dependencies.\n * @param target - The target that the property is defined on.\n * @param name - The property name.\n * @param name - The existing descriptor.\n * @public\n */\nexport function volatile(target, name, descriptor) {\n    return Object.assign({}, descriptor, {\n        get: function () {\n            Observable.trackVolatile();\n            return descriptor.get.apply(this);\n        },\n    });\n}\nconst contextEvent = FAST.getById(3 /* contextEvent */, () => {\n    let current = null;\n    return {\n        get() {\n            return current;\n        },\n        set(event) {\n            current = event;\n        },\n    };\n});\n/**\n * Provides additional contextual information available to behaviors and expressions.\n * @public\n */\nexport class ExecutionContext {\n    constructor() {\n        /**\n         * The index of the current item within a repeat context.\n         */\n        this.index = 0;\n        /**\n         * The length of the current collection within a repeat context.\n         */\n        this.length = 0;\n        /**\n         * The parent data object within a repeat context.\n         */\n        this.parent = null;\n        /**\n         * The parent execution context when in nested context scenarios.\n         */\n        this.parentContext = null;\n    }\n    /**\n     * The current event within an event handler.\n     */\n    get event() {\n        return contextEvent.get();\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * has an even index.\n     */\n    get isEven() {\n        return this.index % 2 === 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * has an odd index.\n     */\n    get isOdd() {\n        return this.index % 2 !== 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is the first item in the collection.\n     */\n    get isFirst() {\n        return this.index === 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is somewhere in the middle of the collection.\n     */\n    get isInMiddle() {\n        return !this.isFirst && !this.isLast;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is the last item in the collection.\n     */\n    get isLast() {\n        return this.index === this.length - 1;\n    }\n    /**\n     * Sets the event for the current execution context.\n     * @param event - The event to set.\n     * @internal\n     */\n    static setEvent(event) {\n        contextEvent.set(event);\n    }\n}\nObservable.defineProperty(ExecutionContext.prototype, \"index\");\nObservable.defineProperty(ExecutionContext.prototype, \"length\");\n/**\n * The default execution context used in binding expressions.\n * @public\n */\nexport const defaultExecutionContext = Object.seal(new ExecutionContext());\n","/**\n * A reference to globalThis, with support\n * for browsers that don't yet support the spec.\n * @public\n */\nexport const $global = (function () {\n    if (typeof globalThis !== \"undefined\") {\n        // We're running in a modern environment.\n        return globalThis;\n    }\n    if (typeof global !== \"undefined\") {\n        // We're running in NodeJS\n        return global;\n    }\n    if (typeof self !== \"undefined\") {\n        // We're running in a worker.\n        return self;\n    }\n    if (typeof window !== \"undefined\") {\n        // We're running in the browser's main thread.\n        return window;\n    }\n    try {\n        // Hopefully we never get here...\n        // Not all environments allow eval and Function. Use only as a last resort:\n        // eslint-disable-next-line no-new-func\n        return new Function(\"return this\")();\n    }\n    catch (_a) {\n        // If all fails, give up and create an object.\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        return {};\n    }\n})();\n// API-only Polyfill for trustedTypes\nif ($global.trustedTypes === void 0) {\n    $global.trustedTypes = { createPolicy: (n, r) => r };\n}\nconst propConfig = {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n};\nif ($global.FAST === void 0) {\n    Reflect.defineProperty($global, \"FAST\", Object.assign({ value: Object.create(null) }, propConfig));\n}\n/**\n * The FAST global.\n * @internal\n */\nexport const FAST = $global.FAST;\nif (FAST.getById === void 0) {\n    const storage = Object.create(null);\n    Reflect.defineProperty(FAST, \"getById\", Object.assign({ value(id, initialize) {\n            let found = storage[id];\n            if (found === void 0) {\n                found = initialize ? (storage[id] = initialize()) : null;\n            }\n            return found;\n        } }, propConfig));\n}\n/**\n * A readonly, empty array.\n * @remarks\n * Typically returned by APIs that return arrays when there are\n * no actual items to return.\n * @internal\n */\nexport const emptyArray = Object.freeze([]);\n/**\n * Creates a function capable of locating metadata associated with a type.\n * @returns A metadata locator function.\n * @internal\n */\nexport function createMetadataLocator() {\n    const metadataLookup = new WeakMap();\n    return function (target) {\n        let metadata = metadataLookup.get(target);\n        if (metadata === void 0) {\n            let currentTarget = Reflect.getPrototypeOf(target);\n            while (metadata === void 0 && currentTarget !== null) {\n                metadata = metadataLookup.get(currentTarget);\n                currentTarget = Reflect.getPrototypeOf(currentTarget);\n            }\n            metadata = metadata === void 0 ? [] : metadata.slice(0);\n            metadataLookup.set(target, metadata);\n        }\n        return metadata;\n    };\n}\n","/**\n * Directive for use in {@link css}.\n *\n * @public\n */\nexport class CSSDirective {\n    /**\n     * Creates a CSS fragment to interpolate into the CSS document.\n     * @returns - the string to interpolate into CSS\n     */\n    createCSS() {\n        return \"\";\n    }\n    /**\n     * Creates a behavior to bind to the host element.\n     * @returns - the behavior to bind to the host element, or undefined.\n     */\n    createBehavior() {\n        return undefined;\n    }\n}\n","import { CSSDirective } from \"./css-directive.js\";\nimport { ElementStyles } from \"./element-styles.js\";\nfunction collectStyles(strings, values) {\n    const styles = [];\n    let cssString = \"\";\n    const behaviors = [];\n    for (let i = 0, ii = strings.length - 1; i < ii; ++i) {\n        cssString += strings[i];\n        let value = values[i];\n        if (value instanceof CSSDirective) {\n            const behavior = value.createBehavior();\n            value = value.createCSS();\n            if (behavior) {\n                behaviors.push(behavior);\n            }\n        }\n        if (value instanceof ElementStyles || value instanceof CSSStyleSheet) {\n            if (cssString.trim() !== \"\") {\n                styles.push(cssString);\n                cssString = \"\";\n            }\n            styles.push(value);\n        }\n        else {\n            cssString += value;\n        }\n    }\n    cssString += strings[strings.length - 1];\n    if (cssString.trim() !== \"\") {\n        styles.push(cssString);\n    }\n    return {\n        styles,\n        behaviors,\n    };\n}\n/**\n * Transforms a template literal string into styles.\n * @param strings - The string fragments that are interpolated with the values.\n * @param values - The values that are interpolated with the string fragments.\n * @remarks\n * The css helper supports interpolation of strings and ElementStyle instances.\n * @public\n */\nexport function css(strings, ...values) {\n    const { styles, behaviors } = collectStyles(strings, values);\n    const elementStyles = ElementStyles.create(styles);\n    if (behaviors.length) {\n        elementStyles.withBehaviors(...behaviors);\n    }\n    return elementStyles;\n}\nclass CSSPartial extends CSSDirective {\n    constructor(styles, behaviors) {\n        super();\n        this.behaviors = behaviors;\n        this.css = \"\";\n        const stylesheets = styles.reduce((accumulated, current) => {\n            if (typeof current === \"string\") {\n                this.css += current;\n            }\n            else {\n                accumulated.push(current);\n            }\n            return accumulated;\n        }, []);\n        if (stylesheets.length) {\n            this.styles = ElementStyles.create(stylesheets);\n        }\n    }\n    createBehavior() {\n        return this;\n    }\n    createCSS() {\n        return this.css;\n    }\n    bind(el) {\n        if (this.styles) {\n            el.$fastController.addStyles(this.styles);\n        }\n        if (this.behaviors.length) {\n            el.$fastController.addBehaviors(this.behaviors);\n        }\n    }\n    unbind(el) {\n        if (this.styles) {\n            el.$fastController.removeStyles(this.styles);\n        }\n        if (this.behaviors.length) {\n            el.$fastController.removeBehaviors(this.behaviors);\n        }\n    }\n}\n/**\n * Transforms a template literal string into partial CSS.\n * @param strings - The string fragments that are interpolated with the values.\n * @param values - The values that are interpolated with the string fragments.\n * @public\n */\nexport function cssPartial(strings, ...values) {\n    const { styles, behaviors } = collectStyles(strings, values);\n    return new CSSPartial(styles, behaviors);\n}\n","import { DOM } from \"../dom.js\";\n/**\n * Represents styles that can be applied to a custom element.\n * @public\n */\nexport class ElementStyles {\n    constructor() {\n        this.targets = new WeakSet();\n    }\n    /** @internal */\n    addStylesTo(target) {\n        this.targets.add(target);\n    }\n    /** @internal */\n    removeStylesFrom(target) {\n        this.targets.delete(target);\n    }\n    /** @internal */\n    isAttachedTo(target) {\n        return this.targets.has(target);\n    }\n    /**\n     * Associates behaviors with this set of styles.\n     * @param behaviors - The behaviors to associate.\n     */\n    withBehaviors(...behaviors) {\n        this.behaviors =\n            this.behaviors === null ? behaviors : this.behaviors.concat(behaviors);\n        return this;\n    }\n}\n/**\n * Create ElementStyles from ComposableStyles.\n */\nElementStyles.create = (() => {\n    if (DOM.supportsAdoptedStyleSheets) {\n        const styleSheetCache = new Map();\n        return (styles) => \n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        new AdoptedStyleSheetsStyles(styles, styleSheetCache);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return (styles) => new StyleElementStyles(styles);\n})();\nfunction reduceStyles(styles) {\n    return styles\n        .map((x) => x instanceof ElementStyles ? reduceStyles(x.styles) : [x])\n        .reduce((prev, curr) => prev.concat(curr), []);\n}\nfunction reduceBehaviors(styles) {\n    return styles\n        .map((x) => (x instanceof ElementStyles ? x.behaviors : null))\n        .reduce((prev, curr) => {\n        if (curr === null) {\n            return prev;\n        }\n        if (prev === null) {\n            prev = [];\n        }\n        return prev.concat(curr);\n    }, null);\n}\n/**\n * https://wicg.github.io/construct-stylesheets/\n * https://developers.google.com/web/updates/2019/02/constructable-stylesheets\n *\n * @internal\n */\nexport class AdoptedStyleSheetsStyles extends ElementStyles {\n    constructor(styles, styleSheetCache) {\n        super();\n        this.styles = styles;\n        this.styleSheetCache = styleSheetCache;\n        this._styleSheets = void 0;\n        this.behaviors = reduceBehaviors(styles);\n    }\n    get styleSheets() {\n        if (this._styleSheets === void 0) {\n            const styles = this.styles;\n            const styleSheetCache = this.styleSheetCache;\n            this._styleSheets = reduceStyles(styles).map((x) => {\n                if (x instanceof CSSStyleSheet) {\n                    return x;\n                }\n                let sheet = styleSheetCache.get(x);\n                if (sheet === void 0) {\n                    sheet = new CSSStyleSheet();\n                    sheet.replaceSync(x);\n                    styleSheetCache.set(x, sheet);\n                }\n                return sheet;\n            });\n        }\n        return this._styleSheets;\n    }\n    addStylesTo(target) {\n        target.adoptedStyleSheets = [...target.adoptedStyleSheets, ...this.styleSheets];\n        super.addStylesTo(target);\n    }\n    removeStylesFrom(target) {\n        const sourceSheets = this.styleSheets;\n        target.adoptedStyleSheets = target.adoptedStyleSheets.filter((x) => sourceSheets.indexOf(x) === -1);\n        super.removeStylesFrom(target);\n    }\n}\nlet styleClassId = 0;\nfunction getNextStyleClass() {\n    return `fast-style-class-${++styleClassId}`;\n}\n/**\n * @internal\n */\nexport class StyleElementStyles extends ElementStyles {\n    constructor(styles) {\n        super();\n        this.styles = styles;\n        this.behaviors = null;\n        this.behaviors = reduceBehaviors(styles);\n        this.styleSheets = reduceStyles(styles);\n        this.styleClass = getNextStyleClass();\n    }\n    addStylesTo(target) {\n        const styleSheets = this.styleSheets;\n        const styleClass = this.styleClass;\n        target = this.normalizeTarget(target);\n        for (let i = 0; i < styleSheets.length; i++) {\n            const element = document.createElement(\"style\");\n            element.innerHTML = styleSheets[i];\n            element.className = styleClass;\n            target.append(element);\n        }\n        super.addStylesTo(target);\n    }\n    removeStylesFrom(target) {\n        target = this.normalizeTarget(target);\n        const styles = target.querySelectorAll(`.${this.styleClass}`);\n        for (let i = 0, ii = styles.length; i < ii; ++i) {\n            target.removeChild(styles[i]);\n        }\n        super.removeStylesFrom(target);\n    }\n    isAttachedTo(target) {\n        return super.isAttachedTo(this.normalizeTarget(target));\n    }\n    normalizeTarget(target) {\n        return target === document ? document.body : target;\n    }\n}\n","import { DOM } from \"../dom.js\";\nimport { ExecutionContext, Observable, } from \"../observation/observable.js\";\nimport { TargetedHTMLDirective } from \"./html-directive.js\";\nfunction normalBind(source, context) {\n    this.source = source;\n    this.context = context;\n    if (this.bindingObserver === null) {\n        this.bindingObserver = Observable.binding(this.binding, this, this.isBindingVolatile);\n    }\n    this.updateTarget(this.bindingObserver.observe(source, context));\n}\nfunction triggerBind(source, context) {\n    this.source = source;\n    this.context = context;\n    this.target.addEventListener(this.targetName, this);\n}\nfunction normalUnbind() {\n    this.bindingObserver.disconnect();\n    this.source = null;\n    this.context = null;\n}\nfunction contentUnbind() {\n    this.bindingObserver.disconnect();\n    this.source = null;\n    this.context = null;\n    const view = this.target.$fastView;\n    if (view !== void 0 && view.isComposed) {\n        view.unbind();\n        view.needsBindOnly = true;\n    }\n}\nfunction triggerUnbind() {\n    this.target.removeEventListener(this.targetName, this);\n    this.source = null;\n    this.context = null;\n}\nfunction updateAttributeTarget(value) {\n    DOM.setAttribute(this.target, this.targetName, value);\n}\nfunction updateBooleanAttributeTarget(value) {\n    DOM.setBooleanAttribute(this.target, this.targetName, value);\n}\nfunction updateContentTarget(value) {\n    // If there's no actual value, then this equates to the\n    // empty string for the purposes of content bindings.\n    if (value === null || value === undefined) {\n        value = \"\";\n    }\n    // If the value has a \"create\" method, then it's a template-like.\n    if (value.create) {\n        this.target.textContent = \"\";\n        let view = this.target.$fastView;\n        // If there's no previous view that we might be able to\n        // reuse then create a new view from the template.\n        if (view === void 0) {\n            view = value.create();\n        }\n        else {\n            // If there is a previous view, but it wasn't created\n            // from the same template as the new value, then we\n            // need to remove the old view if it's still in the DOM\n            // and create a new view from the template.\n            if (this.target.$fastTemplate !== value) {\n                if (view.isComposed) {\n                    view.remove();\n                    view.unbind();\n                }\n                view = value.create();\n            }\n        }\n        // It's possible that the value is the same as the previous template\n        // and that there's actually no need to compose it.\n        if (!view.isComposed) {\n            view.isComposed = true;\n            view.bind(this.source, this.context);\n            view.insertBefore(this.target);\n            this.target.$fastView = view;\n            this.target.$fastTemplate = value;\n        }\n        else if (view.needsBindOnly) {\n            view.needsBindOnly = false;\n            view.bind(this.source, this.context);\n        }\n    }\n    else {\n        const view = this.target.$fastView;\n        // If there is a view and it's currently composed into\n        // the DOM, then we need to remove it.\n        if (view !== void 0 && view.isComposed) {\n            view.isComposed = false;\n            view.remove();\n            if (view.needsBindOnly) {\n                view.needsBindOnly = false;\n            }\n            else {\n                view.unbind();\n            }\n        }\n        this.target.textContent = value;\n    }\n}\nfunction updatePropertyTarget(value) {\n    this.target[this.targetName] = value;\n}\nfunction updateClassTarget(value) {\n    const classVersions = this.classVersions || Object.create(null);\n    const target = this.target;\n    let version = this.version || 0;\n    // Add the classes, tracking the version at which they were added.\n    if (value !== null && value !== undefined && value.length) {\n        const names = value.split(/\\s+/);\n        for (let i = 0, ii = names.length; i < ii; ++i) {\n            const currentName = names[i];\n            if (currentName === \"\") {\n                continue;\n            }\n            classVersions[currentName] = version;\n            target.classList.add(currentName);\n        }\n    }\n    this.classVersions = classVersions;\n    this.version = version + 1;\n    // If this is the first call to add classes, there's no need to remove old ones.\n    if (version === 0) {\n        return;\n    }\n    // Remove classes from the previous version.\n    version -= 1;\n    for (const name in classVersions) {\n        if (classVersions[name] === version) {\n            target.classList.remove(name);\n        }\n    }\n}\n/**\n * A directive that configures data binding to element content and attributes.\n * @public\n */\nexport class HTMLBindingDirective extends TargetedHTMLDirective {\n    /**\n     * Creates an instance of BindingDirective.\n     * @param binding - A binding that returns the data used to update the DOM.\n     */\n    constructor(binding) {\n        super();\n        this.binding = binding;\n        this.bind = normalBind;\n        this.unbind = normalUnbind;\n        this.updateTarget = updateAttributeTarget;\n        this.isBindingVolatile = Observable.isVolatileBinding(this.binding);\n    }\n    /**\n     * Gets/sets the name of the attribute or property that this\n     * binding is targeting.\n     */\n    get targetName() {\n        return this.originalTargetName;\n    }\n    set targetName(value) {\n        this.originalTargetName = value;\n        if (value === void 0) {\n            return;\n        }\n        switch (value[0]) {\n            case \":\":\n                this.cleanedTargetName = value.substr(1);\n                this.updateTarget = updatePropertyTarget;\n                if (this.cleanedTargetName === \"innerHTML\") {\n                    const binding = this.binding;\n                    this.binding = (s, c) => DOM.createHTML(binding(s, c));\n                }\n                break;\n            case \"?\":\n                this.cleanedTargetName = value.substr(1);\n                this.updateTarget = updateBooleanAttributeTarget;\n                break;\n            case \"@\":\n                this.cleanedTargetName = value.substr(1);\n                this.bind = triggerBind;\n                this.unbind = triggerUnbind;\n                break;\n            default:\n                this.cleanedTargetName = value;\n                if (value === \"class\") {\n                    this.updateTarget = updateClassTarget;\n                }\n                break;\n        }\n    }\n    /**\n     * Makes this binding target the content of an element rather than\n     * a particular attribute or property.\n     */\n    targetAtContent() {\n        this.updateTarget = updateContentTarget;\n        this.unbind = contentUnbind;\n    }\n    /**\n     * Creates the runtime BindingBehavior instance based on the configuration\n     * information stored in the BindingDirective.\n     * @param target - The target node that the binding behavior should attach to.\n     */\n    createBehavior(target) {\n        /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n        return new BindingBehavior(target, this.binding, this.isBindingVolatile, this.bind, this.unbind, this.updateTarget, this.cleanedTargetName);\n    }\n}\n/**\n * A behavior that updates content and attributes based on a configured\n * BindingDirective.\n * @public\n */\nexport class BindingBehavior {\n    /**\n     * Creates an instance of BindingBehavior.\n     * @param target - The target of the data updates.\n     * @param binding - The binding that returns the latest value for an update.\n     * @param isBindingVolatile - Indicates whether the binding has volatile dependencies.\n     * @param bind - The operation to perform during binding.\n     * @param unbind - The operation to perform during unbinding.\n     * @param updateTarget - The operation to perform when updating.\n     * @param targetName - The name of the target attribute or property to update.\n     */\n    constructor(target, binding, isBindingVolatile, bind, unbind, updateTarget, targetName) {\n        /** @internal */\n        this.source = null;\n        /** @internal */\n        this.context = null;\n        /** @internal */\n        this.bindingObserver = null;\n        this.target = target;\n        this.binding = binding;\n        this.isBindingVolatile = isBindingVolatile;\n        this.bind = bind;\n        this.unbind = unbind;\n        this.updateTarget = updateTarget;\n        this.targetName = targetName;\n    }\n    /** @internal */\n    handleChange() {\n        this.updateTarget(this.bindingObserver.observe(this.source, this.context));\n    }\n    /** @internal */\n    handleEvent(event) {\n        ExecutionContext.setEvent(event);\n        const result = this.binding(this.source, this.context);\n        ExecutionContext.setEvent(null);\n        if (result !== true) {\n            event.preventDefault();\n        }\n    }\n}\n","import { _interpolationEnd, _interpolationStart, DOM } from \"../dom.js\";\nimport { HTMLBindingDirective } from \"./binding.js\";\nlet sharedContext = null;\nclass CompilationContext {\n    addFactory(factory) {\n        factory.targetIndex = this.targetIndex;\n        this.behaviorFactories.push(factory);\n    }\n    captureContentBinding(directive) {\n        directive.targetAtContent();\n        this.addFactory(directive);\n    }\n    reset() {\n        this.behaviorFactories = [];\n        this.targetIndex = -1;\n    }\n    release() {\n        /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n        sharedContext = this;\n    }\n    static borrow(directives) {\n        const shareable = sharedContext || new CompilationContext();\n        shareable.directives = directives;\n        shareable.reset();\n        sharedContext = null;\n        return shareable;\n    }\n}\nfunction createAggregateBinding(parts) {\n    if (parts.length === 1) {\n        return parts[0];\n    }\n    let targetName;\n    const partCount = parts.length;\n    const finalParts = parts.map((x) => {\n        if (typeof x === \"string\") {\n            return () => x;\n        }\n        targetName = x.targetName || targetName;\n        return x.binding;\n    });\n    const binding = (scope, context) => {\n        let output = \"\";\n        for (let i = 0; i < partCount; ++i) {\n            output += finalParts[i](scope, context);\n        }\n        return output;\n    };\n    const directive = new HTMLBindingDirective(binding);\n    directive.targetName = targetName;\n    return directive;\n}\nconst interpolationEndLength = _interpolationEnd.length;\nfunction parseContent(context, value) {\n    const valueParts = value.split(_interpolationStart);\n    if (valueParts.length === 1) {\n        return null;\n    }\n    const bindingParts = [];\n    for (let i = 0, ii = valueParts.length; i < ii; ++i) {\n        const current = valueParts[i];\n        const index = current.indexOf(_interpolationEnd);\n        let literal;\n        if (index === -1) {\n            literal = current;\n        }\n        else {\n            const directiveIndex = parseInt(current.substring(0, index));\n            bindingParts.push(context.directives[directiveIndex]);\n            literal = current.substring(index + interpolationEndLength);\n        }\n        if (literal !== \"\") {\n            bindingParts.push(literal);\n        }\n    }\n    return bindingParts;\n}\nfunction compileAttributes(context, node, includeBasicValues = false) {\n    const attributes = node.attributes;\n    for (let i = 0, ii = attributes.length; i < ii; ++i) {\n        const attr = attributes[i];\n        const attrValue = attr.value;\n        const parseResult = parseContent(context, attrValue);\n        let result = null;\n        if (parseResult === null) {\n            if (includeBasicValues) {\n                result = new HTMLBindingDirective(() => attrValue);\n                result.targetName = attr.name;\n            }\n        }\n        else {\n            result = createAggregateBinding(parseResult);\n        }\n        if (result !== null) {\n            node.removeAttributeNode(attr);\n            i--;\n            ii--;\n            context.addFactory(result);\n        }\n    }\n}\nfunction compileContent(context, node, walker) {\n    const parseResult = parseContent(context, node.textContent);\n    if (parseResult !== null) {\n        let lastNode = node;\n        for (let i = 0, ii = parseResult.length; i < ii; ++i) {\n            const currentPart = parseResult[i];\n            const currentNode = i === 0\n                ? node\n                : lastNode.parentNode.insertBefore(document.createTextNode(\"\"), lastNode.nextSibling);\n            if (typeof currentPart === \"string\") {\n                currentNode.textContent = currentPart;\n            }\n            else {\n                currentNode.textContent = \" \";\n                context.captureContentBinding(currentPart);\n            }\n            lastNode = currentNode;\n            context.targetIndex++;\n            if (currentNode !== node) {\n                walker.nextNode();\n            }\n        }\n        context.targetIndex--;\n    }\n}\n/**\n * Compiles a template and associated directives into a raw compilation\n * result which include a cloneable DocumentFragment and factories capable\n * of attaching runtime behavior to nodes within the fragment.\n * @param template - The template to compile.\n * @param directives - The directives referenced by the template.\n * @remarks\n * The template that is provided for compilation is altered in-place\n * and cannot be compiled again. If the original template must be preserved,\n * it is recommended that you clone the original and pass the clone to this API.\n * @public\n */\nexport function compileTemplate(template, directives) {\n    const fragment = template.content;\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1111864\n    document.adoptNode(fragment);\n    const context = CompilationContext.borrow(directives);\n    compileAttributes(context, template, true);\n    const hostBehaviorFactories = context.behaviorFactories;\n    context.reset();\n    const walker = DOM.createTemplateWalker(fragment);\n    let node;\n    while ((node = walker.nextNode())) {\n        context.targetIndex++;\n        switch (node.nodeType) {\n            case 1: // element node\n                compileAttributes(context, node);\n                break;\n            case 3: // text node\n                compileContent(context, node, walker);\n                break;\n            case 8: // comment\n                if (DOM.isMarker(node)) {\n                    context.addFactory(directives[DOM.extractDirectiveIndexFromMarker(node)]);\n                }\n        }\n    }\n    let targetOffset = 0;\n    if (\n    // If the first node in a fragment is a marker, that means it's an unstable first node,\n    // because something like a when, repeat, etc. could add nodes before the marker.\n    // To mitigate this, we insert a stable first node. However, if we insert a node,\n    // that will alter the result of the TreeWalker. So, we also need to offset the target index.\n    DOM.isMarker(fragment.firstChild) ||\n        // Or if there is only one node and a directive, it means the template's content\n        // is *only* the directive. In that case, HTMLView.dispose() misses any nodes inserted by\n        // the directive. Inserting a new node ensures proper disposal of nodes added by the directive.\n        (fragment.childNodes.length === 1 && directives.length)) {\n        fragment.insertBefore(document.createComment(\"\"), fragment.firstChild);\n        targetOffset = -1;\n    }\n    const viewBehaviorFactories = context.behaviorFactories;\n    context.release();\n    return {\n        fragment,\n        viewBehaviorFactories,\n        hostBehaviorFactories,\n        targetOffset,\n    };\n}\n","import { DOM } from \"../dom.js\";\n/**\n * Instructs the template engine to apply behavior to a node.\n * @public\n */\nexport class HTMLDirective {\n    constructor() {\n        /**\n         * The index of the DOM node to which the created behavior will apply.\n         */\n        this.targetIndex = 0;\n    }\n}\n/**\n * A {@link HTMLDirective} that targets a named attribute or property on a node.\n * @public\n */\nexport class TargetedHTMLDirective extends HTMLDirective {\n    constructor() {\n        super(...arguments);\n        /**\n         * Creates a placeholder string based on the directive's index within the template.\n         * @param index - The index of the directive within the template.\n         */\n        this.createPlaceholder = DOM.createInterpolationPlaceholder;\n    }\n}\n/**\n * A directive that attaches special behavior to an element via a custom attribute.\n * @public\n */\nexport class AttachedBehaviorHTMLDirective extends HTMLDirective {\n    /**\n     *\n     * @param name - The name of the behavior; used as a custom attribute on the element.\n     * @param behavior - The behavior to instantiate and attach to the element.\n     * @param options - Options to pass to the behavior during creation.\n     */\n    constructor(name, behavior, options) {\n        super();\n        this.name = name;\n        this.behavior = behavior;\n        this.options = options;\n    }\n    /**\n     * Creates a placeholder string based on the directive's index within the template.\n     * @param index - The index of the directive within the template.\n     * @remarks\n     * Creates a custom attribute placeholder.\n     */\n    createPlaceholder(index) {\n        return DOM.createCustomAttributePlaceholder(this.name, index);\n    }\n    /**\n     * Creates a behavior for the provided target node.\n     * @param target - The node instance to create the behavior for.\n     * @remarks\n     * Creates an instance of the `behavior` type this directive was constructed with\n     * and passes the target and options to that `behavior`'s constructor.\n     */\n    createBehavior(target) {\n        return new this.behavior(target, this.options);\n    }\n}\n","import { DOM } from \"../dom.js\";\nimport { Observable, } from \"../observation/observable.js\";\nimport { enableArrayObservation } from \"../observation/array-observer.js\";\nimport { emptyArray } from \"../platform.js\";\nimport { HTMLDirective } from \"./html-directive.js\";\nimport { HTMLView } from \"./view.js\";\nconst defaultRepeatOptions = Object.freeze({\n    positioning: false,\n    recycle: true,\n});\nfunction bindWithoutPositioning(view, items, index, context) {\n    view.bind(items[index], context);\n}\nfunction bindWithPositioning(view, items, index, context) {\n    const childContext = Object.create(context);\n    childContext.index = index;\n    childContext.length = items.length;\n    view.bind(items[index], childContext);\n}\n/**\n * A behavior that renders a template for each item in an array.\n * @public\n */\nexport class RepeatBehavior {\n    /**\n     * Creates an instance of RepeatBehavior.\n     * @param location - The location in the DOM to render the repeat.\n     * @param itemsBinding - The array to render.\n     * @param isItemsBindingVolatile - Indicates whether the items binding has volatile dependencies.\n     * @param templateBinding - The template to render for each item.\n     * @param isTemplateBindingVolatile - Indicates whether the template binding has volatile dependencies.\n     * @param options - Options used to turn on special repeat features.\n     */\n    constructor(location, itemsBinding, isItemsBindingVolatile, templateBinding, isTemplateBindingVolatile, options) {\n        this.location = location;\n        this.itemsBinding = itemsBinding;\n        this.templateBinding = templateBinding;\n        this.options = options;\n        this.source = null;\n        this.views = [];\n        this.items = null;\n        this.itemsObserver = null;\n        this.originalContext = void 0;\n        this.childContext = void 0;\n        this.bindView = bindWithoutPositioning;\n        this.itemsBindingObserver = Observable.binding(itemsBinding, this, isItemsBindingVolatile);\n        this.templateBindingObserver = Observable.binding(templateBinding, this, isTemplateBindingVolatile);\n        if (options.positioning) {\n            this.bindView = bindWithPositioning;\n        }\n    }\n    /**\n     * Bind this behavior to the source.\n     * @param source - The source to bind to.\n     * @param context - The execution context that the binding is operating within.\n     */\n    bind(source, context) {\n        this.source = source;\n        this.originalContext = context;\n        this.childContext = Object.create(context);\n        this.childContext.parent = source;\n        this.childContext.parentContext = this.originalContext;\n        this.items = this.itemsBindingObserver.observe(source, this.originalContext);\n        this.template = this.templateBindingObserver.observe(source, this.originalContext);\n        this.observeItems(true);\n        this.refreshAllViews();\n    }\n    /**\n     * Unbinds this behavior from the source.\n     * @param source - The source to unbind from.\n     */\n    unbind() {\n        this.source = null;\n        this.items = null;\n        if (this.itemsObserver !== null) {\n            this.itemsObserver.unsubscribe(this);\n        }\n        this.unbindAllViews();\n        this.itemsBindingObserver.disconnect();\n        this.templateBindingObserver.disconnect();\n    }\n    /** @internal */\n    handleChange(source, args) {\n        if (source === this.itemsBinding) {\n            this.items = this.itemsBindingObserver.observe(this.source, this.originalContext);\n            this.observeItems();\n            this.refreshAllViews();\n        }\n        else if (source === this.templateBinding) {\n            this.template = this.templateBindingObserver.observe(this.source, this.originalContext);\n            this.refreshAllViews(true);\n        }\n        else {\n            this.updateViews(args);\n        }\n    }\n    observeItems(force = false) {\n        if (!this.items) {\n            this.items = emptyArray;\n            return;\n        }\n        const oldObserver = this.itemsObserver;\n        const newObserver = (this.itemsObserver = Observable.getNotifier(this.items));\n        const hasNewObserver = oldObserver !== newObserver;\n        if (hasNewObserver && oldObserver !== null) {\n            oldObserver.unsubscribe(this);\n        }\n        if (hasNewObserver || force) {\n            newObserver.subscribe(this);\n        }\n    }\n    updateViews(splices) {\n        const childContext = this.childContext;\n        const views = this.views;\n        const bindView = this.bindView;\n        const items = this.items;\n        const template = this.template;\n        const recycle = this.options.recycle;\n        const leftoverViews = [];\n        let leftoverIndex = 0;\n        let availableViews = 0;\n        for (let i = 0, ii = splices.length; i < ii; ++i) {\n            const splice = splices[i];\n            const removed = splice.removed;\n            let removeIndex = 0;\n            let addIndex = splice.index;\n            const end = addIndex + splice.addedCount;\n            const removedViews = views.splice(splice.index, removed.length);\n            const totalAvailableViews = (availableViews =\n                leftoverViews.length + removedViews.length);\n            for (; addIndex < end; ++addIndex) {\n                const neighbor = views[addIndex];\n                const location = neighbor ? neighbor.firstChild : this.location;\n                let view;\n                if (recycle && availableViews > 0) {\n                    if (removeIndex <= totalAvailableViews && removedViews.length > 0) {\n                        view = removedViews[removeIndex];\n                        removeIndex++;\n                    }\n                    else {\n                        view = leftoverViews[leftoverIndex];\n                        leftoverIndex++;\n                    }\n                    availableViews--;\n                }\n                else {\n                    view = template.create();\n                }\n                views.splice(addIndex, 0, view);\n                bindView(view, items, addIndex, childContext);\n                view.insertBefore(location);\n            }\n            if (removedViews[removeIndex]) {\n                leftoverViews.push(...removedViews.slice(removeIndex));\n            }\n        }\n        for (let i = leftoverIndex, ii = leftoverViews.length; i < ii; ++i) {\n            leftoverViews[i].dispose();\n        }\n        if (this.options.positioning) {\n            for (let i = 0, ii = views.length; i < ii; ++i) {\n                const currentContext = views[i].context;\n                currentContext.length = ii;\n                currentContext.index = i;\n            }\n        }\n    }\n    refreshAllViews(templateChanged = false) {\n        const items = this.items;\n        const childContext = this.childContext;\n        const template = this.template;\n        const location = this.location;\n        const bindView = this.bindView;\n        let itemsLength = items.length;\n        let views = this.views;\n        let viewsLength = views.length;\n        if (itemsLength === 0 || templateChanged || !this.options.recycle) {\n            // all views need to be removed\n            HTMLView.disposeContiguousBatch(views);\n            viewsLength = 0;\n        }\n        if (viewsLength === 0) {\n            // all views need to be created\n            this.views = views = new Array(itemsLength);\n            for (let i = 0; i < itemsLength; ++i) {\n                const view = template.create();\n                bindView(view, items, i, childContext);\n                views[i] = view;\n                view.insertBefore(location);\n            }\n        }\n        else {\n            // attempt to reuse existing views with new data\n            let i = 0;\n            for (; i < itemsLength; ++i) {\n                if (i < viewsLength) {\n                    const view = views[i];\n                    bindView(view, items, i, childContext);\n                }\n                else {\n                    const view = template.create();\n                    bindView(view, items, i, childContext);\n                    views.push(view);\n                    view.insertBefore(location);\n                }\n            }\n            const removed = views.splice(i, viewsLength - i);\n            for (i = 0, itemsLength = removed.length; i < itemsLength; ++i) {\n                removed[i].dispose();\n            }\n        }\n    }\n    unbindAllViews() {\n        const views = this.views;\n        for (let i = 0, ii = views.length; i < ii; ++i) {\n            views[i].unbind();\n        }\n    }\n}\n/**\n * A directive that configures list rendering.\n * @public\n */\nexport class RepeatDirective extends HTMLDirective {\n    /**\n     * Creates an instance of RepeatDirective.\n     * @param itemsBinding - The binding that provides the array to render.\n     * @param templateBinding - The template binding used to obtain a template to render for each item in the array.\n     * @param options - Options used to turn on special repeat features.\n     */\n    constructor(itemsBinding, templateBinding, options) {\n        super();\n        this.itemsBinding = itemsBinding;\n        this.templateBinding = templateBinding;\n        this.options = options;\n        /**\n         * Creates a placeholder string based on the directive's index within the template.\n         * @param index - The index of the directive within the template.\n         */\n        this.createPlaceholder = DOM.createBlockPlaceholder;\n        enableArrayObservation();\n        this.isItemsBindingVolatile = Observable.isVolatileBinding(itemsBinding);\n        this.isTemplateBindingVolatile = Observable.isVolatileBinding(templateBinding);\n    }\n    /**\n     * Creates a behavior for the provided target node.\n     * @param target - The node instance to create the behavior for.\n     */\n    createBehavior(target) {\n        return new RepeatBehavior(target, this.itemsBinding, this.isItemsBindingVolatile, this.templateBinding, this.isTemplateBindingVolatile, this.options);\n    }\n}\n/**\n * A directive that enables list rendering.\n * @param itemsBinding - The array to render.\n * @param templateOrTemplateBinding - The template or a template binding used obtain a template\n * to render for each item in the array.\n * @param options - Options used to turn on special repeat features.\n * @public\n */\nexport function repeat(itemsBinding, templateOrTemplateBinding, options = defaultRepeatOptions) {\n    const templateBinding = typeof templateOrTemplateBinding === \"function\"\n        ? templateOrTemplateBinding\n        : () => templateOrTemplateBinding;\n    return new RepeatDirective(itemsBinding, templateBinding, Object.assign(Object.assign({}, defaultRepeatOptions), options));\n}\n","import { DOM } from \"../dom.js\";\nimport { defaultExecutionContext } from \"../observation/observable.js\";\nimport { compileTemplate } from \"./compiler.js\";\nimport { HTMLView } from \"./view.js\";\nimport { HTMLDirective, TargetedHTMLDirective, } from \"./html-directive.js\";\nimport { HTMLBindingDirective } from \"./binding.js\";\n/**\n * A template capable of creating HTMLView instances or rendering directly to DOM.\n * @public\n */\n/* eslint-disable-next-line @typescript-eslint/no-unused-vars */\nexport class ViewTemplate {\n    /**\n     * Creates an instance of ViewTemplate.\n     * @param html - The html representing what this template will instantiate, including placeholders for directives.\n     * @param directives - The directives that will be connected to placeholders in the html.\n     */\n    constructor(html, directives) {\n        this.behaviorCount = 0;\n        this.hasHostBehaviors = false;\n        this.fragment = null;\n        this.targetOffset = 0;\n        this.viewBehaviorFactories = null;\n        this.hostBehaviorFactories = null;\n        this.html = html;\n        this.directives = directives;\n    }\n    /**\n     * Creates an HTMLView instance based on this template definition.\n     * @param hostBindingTarget - The element that host behaviors will be bound to.\n     */\n    create(hostBindingTarget) {\n        if (this.fragment === null) {\n            let template;\n            const html = this.html;\n            if (typeof html === \"string\") {\n                template = document.createElement(\"template\");\n                template.innerHTML = DOM.createHTML(html);\n                const fec = template.content.firstElementChild;\n                if (fec !== null && fec.tagName === \"TEMPLATE\") {\n                    template = fec;\n                }\n            }\n            else {\n                template = html;\n            }\n            const result = compileTemplate(template, this.directives);\n            this.fragment = result.fragment;\n            this.viewBehaviorFactories = result.viewBehaviorFactories;\n            this.hostBehaviorFactories = result.hostBehaviorFactories;\n            this.targetOffset = result.targetOffset;\n            this.behaviorCount =\n                this.viewBehaviorFactories.length + this.hostBehaviorFactories.length;\n            this.hasHostBehaviors = this.hostBehaviorFactories.length > 0;\n        }\n        const fragment = this.fragment.cloneNode(true);\n        const viewFactories = this.viewBehaviorFactories;\n        const behaviors = new Array(this.behaviorCount);\n        const walker = DOM.createTemplateWalker(fragment);\n        let behaviorIndex = 0;\n        let targetIndex = this.targetOffset;\n        let node = walker.nextNode();\n        for (let ii = viewFactories.length; behaviorIndex < ii; ++behaviorIndex) {\n            const factory = viewFactories[behaviorIndex];\n            const factoryIndex = factory.targetIndex;\n            while (node !== null) {\n                if (targetIndex === factoryIndex) {\n                    behaviors[behaviorIndex] = factory.createBehavior(node);\n                    break;\n                }\n                else {\n                    node = walker.nextNode();\n                    targetIndex++;\n                }\n            }\n        }\n        if (this.hasHostBehaviors) {\n            const hostFactories = this.hostBehaviorFactories;\n            for (let i = 0, ii = hostFactories.length; i < ii; ++i, ++behaviorIndex) {\n                behaviors[behaviorIndex] = hostFactories[i].createBehavior(hostBindingTarget);\n            }\n        }\n        return new HTMLView(fragment, behaviors);\n    }\n    /**\n     * Creates an HTMLView from this template, binds it to the source, and then appends it to the host.\n     * @param source - The data source to bind the template to.\n     * @param host - The Element where the template will be rendered.\n     * @param hostBindingTarget - An HTML element to target the host bindings at if different from the\n     * host that the template is being attached to.\n     */\n    render(source, host, hostBindingTarget) {\n        if (typeof host === \"string\") {\n            host = document.getElementById(host);\n        }\n        if (hostBindingTarget === void 0) {\n            hostBindingTarget = host;\n        }\n        const view = this.create(hostBindingTarget);\n        view.bind(source, defaultExecutionContext);\n        view.appendTo(host);\n        return view;\n    }\n}\n// Much thanks to LitHTML for working this out!\nconst lastAttributeNameRegex = \n/* eslint-disable-next-line no-control-regex */\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n/**\n * Transforms a template literal string into a renderable ViewTemplate.\n * @param strings - The string fragments that are interpolated with the values.\n * @param values - The values that are interpolated with the string fragments.\n * @remarks\n * The html helper supports interpolation of strings, numbers, binding expressions,\n * other template instances, and Directive instances.\n * @public\n */\nexport function html(strings, ...values) {\n    const directives = [];\n    let html = \"\";\n    for (let i = 0, ii = strings.length - 1; i < ii; ++i) {\n        const currentString = strings[i];\n        let value = values[i];\n        html += currentString;\n        if (value instanceof ViewTemplate) {\n            const template = value;\n            value = () => template;\n        }\n        if (typeof value === \"function\") {\n            value = new HTMLBindingDirective(value);\n        }\n        if (value instanceof TargetedHTMLDirective) {\n            const match = lastAttributeNameRegex.exec(currentString);\n            if (match !== null) {\n                value.targetName = match[2];\n            }\n        }\n        if (value instanceof HTMLDirective) {\n            // Since not all values are directives, we can't use i\n            // as the index for the placeholder. Instead, we need to\n            // use directives.length to get the next index.\n            html += value.createPlaceholder(directives.length);\n            directives.push(value);\n        }\n        else {\n            html += value;\n        }\n    }\n    html += strings[strings.length - 1];\n    return new ViewTemplate(html, directives);\n}\n","// A singleton Range instance used to efficiently remove ranges of DOM nodes.\n// See the implementation of HTMLView below for further details.\nconst range = document.createRange();\n/**\n * The standard View implementation, which also implements ElementView and SyntheticView.\n * @public\n */\nexport class HTMLView {\n    /**\n     * Constructs an instance of HTMLView.\n     * @param fragment - The html fragment that contains the nodes for this view.\n     * @param behaviors - The behaviors to be applied to this view.\n     */\n    constructor(fragment, behaviors) {\n        this.fragment = fragment;\n        this.behaviors = behaviors;\n        /**\n         * The data that the view is bound to.\n         */\n        this.source = null;\n        /**\n         * The execution context the view is running within.\n         */\n        this.context = null;\n        this.firstChild = fragment.firstChild;\n        this.lastChild = fragment.lastChild;\n    }\n    /**\n     * Appends the view's DOM nodes to the referenced node.\n     * @param node - The parent node to append the view's DOM nodes to.\n     */\n    appendTo(node) {\n        node.appendChild(this.fragment);\n    }\n    /**\n     * Inserts the view's DOM nodes before the referenced node.\n     * @param node - The node to insert the view's DOM before.\n     */\n    insertBefore(node) {\n        if (this.fragment.hasChildNodes()) {\n            node.parentNode.insertBefore(this.fragment, node);\n        }\n        else {\n            const end = this.lastChild;\n            if (node.previousSibling === end)\n                return;\n            const parentNode = node.parentNode;\n            let current = this.firstChild;\n            let next;\n            while (current !== end) {\n                next = current.nextSibling;\n                parentNode.insertBefore(current, node);\n                current = next;\n            }\n            parentNode.insertBefore(end, node);\n        }\n    }\n    /**\n     * Removes the view's DOM nodes.\n     * The nodes are not disposed and the view can later be re-inserted.\n     */\n    remove() {\n        const fragment = this.fragment;\n        const end = this.lastChild;\n        let current = this.firstChild;\n        let next;\n        while (current !== end) {\n            next = current.nextSibling;\n            fragment.appendChild(current);\n            current = next;\n        }\n        fragment.appendChild(end);\n    }\n    /**\n     * Removes the view and unbinds its behaviors, disposing of DOM nodes afterward.\n     * Once a view has been disposed, it cannot be inserted or bound again.\n     */\n    dispose() {\n        const parent = this.firstChild.parentNode;\n        const end = this.lastChild;\n        let current = this.firstChild;\n        let next;\n        while (current !== end) {\n            next = current.nextSibling;\n            parent.removeChild(current);\n            current = next;\n        }\n        parent.removeChild(end);\n        const behaviors = this.behaviors;\n        const oldSource = this.source;\n        for (let i = 0, ii = behaviors.length; i < ii; ++i) {\n            behaviors[i].unbind(oldSource);\n        }\n    }\n    /**\n     * Binds a view's behaviors to its binding source.\n     * @param source - The binding source for the view's binding behaviors.\n     * @param context - The execution context to run the behaviors within.\n     */\n    bind(source, context) {\n        const behaviors = this.behaviors;\n        if (this.source === source) {\n            return;\n        }\n        else if (this.source !== null) {\n            const oldSource = this.source;\n            this.source = source;\n            this.context = context;\n            for (let i = 0, ii = behaviors.length; i < ii; ++i) {\n                const current = behaviors[i];\n                current.unbind(oldSource);\n                current.bind(source, context);\n            }\n        }\n        else {\n            this.source = source;\n            this.context = context;\n            for (let i = 0, ii = behaviors.length; i < ii; ++i) {\n                behaviors[i].bind(source, context);\n            }\n        }\n    }\n    /**\n     * Unbinds a view's behaviors from its binding source.\n     */\n    unbind() {\n        if (this.source === null) {\n            return;\n        }\n        const behaviors = this.behaviors;\n        const oldSource = this.source;\n        for (let i = 0, ii = behaviors.length; i < ii; ++i) {\n            behaviors[i].unbind(oldSource);\n        }\n        this.source = null;\n    }\n    /**\n     * Efficiently disposes of a contiguous range of synthetic view instances.\n     * @param views - A contiguous range of views to be disposed.\n     */\n    static disposeContiguousBatch(views) {\n        if (views.length === 0) {\n            return;\n        }\n        range.setStartBefore(views[0].firstChild);\n        range.setEndAfter(views[views.length - 1].lastChild);\n        range.deleteContents();\n        for (let i = 0, ii = views.length; i < ii; ++i) {\n            const view = views[i];\n            const behaviors = view.behaviors;\n            const oldSource = view.source;\n            for (let j = 0, jj = behaviors.length; j < jj; ++j) {\n                behaviors[j].unbind(oldSource);\n            }\n        }\n    }\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.push(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.push(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","export { __decorate as default } from 'tslib'\n","export { __metadata as default } from 'tslib'\n","import './tree';\n\n\nconst root = document.getElementById('root') as HTMLElement;\nroot.append(document.createElement('f-animation'));\n","import { Observable } from '@microsoft/fast-element';\n\nexport function observe<T>(target: T, ...props: Array<keyof T>) {\n  props.forEach((key) => {\n    if (typeof key !== 'string') return;\n    let temp = target[key];\n    delete target[key];\n    Object.defineProperty(target, key, {\n      get() {\n        Observable.track(target, key);\n        return temp;\n      },\n      set(v) {\n        temp = v;\n        Observable.notify(target, key);\n      },\n    })\n  });\n}\n","import { FASTElement, customElement, html } from '@microsoft/fast-element';\nimport { observe } from './observe';\n\nconst TARGET_SIZE = 25;\n\n/**\n * ------------------------------------------------------------------------------------------\n * The Dot Component\n * ------------------------------------------------------------------------------------------\n */\n@customElement({\n  name: 'f-dot',\n  template: html`\n    <div style=${x => x.boxStyle()}\n      @mouseenter=${x => { x.hover = true }}\n      @mouseleave=${x => { x.hover = false }}>\n      ${x => x.hover ? `*${x.text}*` : x.text}\n    </div>\n  `,\n})\nexport class Dot extends FASTElement {\n  public hover = false;\n  public x = 0;\n  public y = 0;\n  public size = 1;\n  public text = '';\n\n  constructor() {\n    super();\n    observe(this, 'hover', 'x', 'y', 'size', 'text');\n  }\n\n  public boxStyle() {\n    const { hover, size, x, y } = this;\n    const s = size * 1.3;\n    return `\n      position: absolute;\n      text-align: center;\n      cursor: pointer;\n      width: ${s}px;\n      height: ${s}px;\n      left: ${x}px;\n      top: ${y}px;\n      border-radius: ${s / 2}px;\n      line-height: ${s}px;\n      background: ${hover ? '#ff0' : '#61dafb'};\n    `;\n  }\n}\n\n\n/**\n * ------------------------------------------------------------------------------------------\n * The Triangle Component\n * ------------------------------------------------------------------------------------------\n */\n@customElement({\n  name: 'f-triangle',\n  template: html`${(e: Triangle) => {\n    const { x, y, text } = e;\n    let s = e.s;\n    if (s <= TARGET_SIZE) {\n      const half = TARGET_SIZE / 2;\n      return html`\n        <f-dot :x=${() => x - half} :y=${() => y - half} :size=${() => TARGET_SIZE} :text=${() => text}></f-dot>\n      `;\n    }\n    s /= 2;\n    const half = s / 2;\n    return html`\n      <f-triangle :x=${() => x} :y=${() => y - half} :s=${() => s} :text=${() => text}></f-triangle>\n      <f-triangle :x=${() => x - s} :y=${() => y + half} :s=${() => s} :text=${() => text}></f-triangle>\n      <f-triangle :x=${() => x + s} :y=${() => y + half} :s=${() => s} :text=${() => text}></f-triangle>\n    `;\n  }}`,\n})\nexport class Triangle extends FASTElement {\n  public x = 0;\n  public y = 0;\n  public s = 1;\n  public text = '';\n\n  constructor() {\n    super();\n    observe(this, 'x', 'y', 's', 'text');\n  }\n}\n\n\n/**\n * ------------------------------------------------------------------------------------------\n * The Tree Component\n * ------------------------------------------------------------------------------------------\n */\n@customElement({\n  name: 'f-tree',\n  template: html`\n    <div style=${x => x.boxStyle()}>\n      <f-triangle :s=${() => 1000} :text=${x => x.seconds}></f-triangle>\n    </div>\n  `,\n})\nexport class Tree extends FASTElement {\n  public seconds = 0;\n  public elapsed = 0;\n  private timer = -1;\n\n  constructor() {\n    super();\n    observe(this, 'seconds', 'elapsed');\n  }\n\n  public boxStyle() {\n    const t = (this.elapsed / 1000) % 10;\n    const scale = 1 + (t > 5 ? 10 - t : t) / 10;\n    return `\n      position: absolute;\n      transform: scaleX(${scale / 2.1}) scaleY(0.7) translateZ(0.1px);\n      left: 50%;\n      top: 50%;\n    `;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.timer = window.setInterval(() => {\n      this.seconds = (this.seconds % 10) + 1;\n    }, 1000);\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    clearInterval(this.timer);\n  }\n}\n\n/**\n * ------------------------------------------------------------------------------------------\n * The Animiation Component\n * ------------------------------------------------------------------------------------------\n */\n@customElement({\n  name: 'f-animation',\n  template: html`\n    <f-tree :elapsed=${x => x.time}></f-tree>\n  `,\n})\nexport class Animation extends FASTElement {\n  private start = Date.now();\n  private unmounted = false;\n  public time = 0;\n\n  constructor() {\n    super();\n    observe(this, 'time');\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    const update = () => {\n      if (this.unmounted) return;\n      this.time = Date.now() - this.start;\n      requestAnimationFrame(update);\n    };\n    requestAnimationFrame(update);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.unmounted = true;\n  }\n}\n"],"names":["booleanConverter","AttributeDefinition","AttributeConfiguration","Object","freeze","locate","createMetadataLocator","toView","value","fromView","constructor","Owner","name","attribute","toLowerCase","mode","converter","guards","Set","fieldName","callbackName","hasCallback","prototype","setValue","source","newValue","oldValue","tryReflectToAttribute","$fastController","notify","getValue","Observable","track","onAttributeChangedCallback","element","has","add","delete","DOM","queueUpdate","latestValue","setAttribute","setBooleanAttribute","collect","attributeLists","attributes","push","i","ii","length","list","j","jj","config","property","Controller","shadowRoots","WeakMap","defaultEventOptions","bubbles","composed","cancelable","getShadowRoot","shadowRoot","get","PropertyChangeNotifier","definition","boundObservables","behaviors","needsInitialization","_template","_styles","_isConnected","view","shadowOptions","attachShadow","set","accessors","getAccessors","create","propertyName","isConnected","setIsConnected","template","renderTemplate","styles","removeStyles","addStyles","target","getRootNode","HTMLStyleElement","append","isAttachedTo","sourceBehaviors","addStylesTo","addBehaviors","removeChild","removeStylesFrom","removeBehaviors","targetBehaviors","Map","behaviorsToBind","behavior","bind","defaultExecutionContext","force","behaviorsToUnbind","count","unbind","onConnectedCallback","finishInitialization","onDisconnectedCallback","attrDef","attributeLookup","emit","type","detail","options","dispatchEvent","CustomEvent","assign","propertyNames","keys","resolveTemplate","resolveStyles","host","dispose","removeChildNodes","render","forCustomElement","controller","FASTElementDefinition","forType","Error","defaultShadowOptions","defaultElementOptions","fastRegistry","FAST","getById","typeToDefinition","register","getByType","key","nameOrConfig","observedAttributes","Array","propertyLookup","current","elementOptions","isArray","ElementStyles","isDefined","define","registry","customElements","proto","defineProperty","Reflect","enumerable","FASTElement","customElement","createFASTElement","BaseType","$emit","connectedCallback","disconnectedCallback","attributeChangedCallback","HTMLElement","from","nameOrDef","_interpolationStart","_interpolationEnd","updateQueue","tasks","pendingErrors","throwFirstError","shift","process","index","tryRunTask","task","call","error","setTimeout","scan","newLength","enqueue","callable","requestAnimationFrame","fastHTMLPolicy","trustedTypes","createPolicy","createHTML","html","htmlPolicy","marker","Math","random","toString","substring","supportsAdoptedStyleSheets","document","adoptedStyleSheets","CSSStyleSheet","setHTMLPolicy","policy","isMarker","node","nodeType","data","startsWith","extractDirectiveIndexFromMarker","parseInt","replace","createInterpolationPlaceholder","createCustomAttributePlaceholder","attributeName","createBlockPlaceholder","processUpdates","nextUpdate","Promise","removeAttribute","parent","child","firstChild","createTemplateWalker","fragment","createTreeWalker","css","newSplice","calcSplices","projectArraySplices","removed","addedCount","currentStart","currentEnd","old","oldStart","oldEnd","splice","prefixCount","suffixCount","minLength","min","sharedPrefix","searchLength","sharedSuffix","index1","index2","emptyArray","ops","spliceOperationsFromEditDistances","distances","edits","northWest","west","north","reverse","calcEditDistances","rowCount","columnCount","splices","oldIndex","$push","array","changeRecords","initialSplices","createInitialSplices","record","mergeSplice","inserted","insertionOffset","intersectCount","intersect","start1","end1","start2","end2","deleteCount","currentRemoved","prepend","slice","apply","offset","concat","enableArrayObservation","arrayObservationEnabled","adjustIndex","changeRecord","arrayLength","ArrayObserver","SubscriberSet","oldCollection","needsQueue","flush","subscribe","subscriber","addSplice","reset","finalSplices","setArrayObserverFactory","collection","$fastPatch","pop","sort","unshift","notEmpty","methodCallResult","arguments","o","oldArray","initialSubscriber","sub1","sub2","spillover","indexOf","unsubscribe","args","handleChange","subscribers","sourceSubscribers","_a","propertyToWatch","propertyToUnwatch","ExecutionContext","watcher","volatileRegex","notifierLookup","createArrayObserver","getNotifier","found","DefaultObservableAccessor","field","callback","watch","BindingObserverImplementation","binding","isVolatileBinding","needsRefresh","first","last","propertySource","notifier","next","observe","context","disconnect","previousWatcher","result","prev","prevValue","records","undefined","done","Symbol","iterator","factory","trackVolatile","nameOrAccessor","test","contextEvent","event","parentContext","isEven","isOdd","isFirst","isInMiddle","isLast","setEvent","seal","$global","globalThis","self","window","Function","n","r","propConfig","configurable","writable","storage","id","initialize","metadataLookup","metadata","currentTarget","getPrototypeOf","CSSDirective","createCSS","createBehavior","strings","values","collectStyles","cssString","trim","elementStyles","withBehaviors","targets","WeakSet","reduceStyles","map","x","reduce","curr","reduceBehaviors","styleSheetCache","AdoptedStyleSheetsStyles","StyleElementStyles","_styleSheets","styleSheets","sheet","replaceSync","sourceSheets","filter","styleClassId","styleClass","normalizeTarget","createElement","innerHTML","className","querySelectorAll","body","HTMLBindingDirective","BindingBehavior","normalBind","bindingObserver","isBindingVolatile","updateTarget","triggerBind","addEventListener","targetName","normalUnbind","contentUnbind","$fastView","isComposed","needsBindOnly","triggerUnbind","removeEventListener","updateAttributeTarget","updateBooleanAttributeTarget","updateContentTarget","textContent","$fastTemplate","remove","insertBefore","updatePropertyTarget","updateClassTarget","classVersions","version","names","split","currentName","classList","TargetedHTMLDirective","originalTargetName","cleanedTargetName","substr","s","c","targetAtContent","handleEvent","preventDefault","compileTemplate","sharedContext","CompilationContext","addFactory","targetIndex","behaviorFactories","captureContentBinding","directive","release","borrow","directives","shareable","interpolationEndLength","parseContent","valueParts","bindingParts","literal","directiveIndex","compileAttributes","includeBasicValues","attr","attrValue","parseResult","createAggregateBinding","parts","partCount","finalParts","scope","output","removeAttributeNode","content","adoptNode","hostBehaviorFactories","walker","nextNode","compileContent","lastNode","currentPart","currentNode","parentNode","createTextNode","nextSibling","targetOffset","childNodes","createComment","viewBehaviorFactories","HTMLDirective","createPlaceholder","RepeatBehavior","RepeatDirective","repeat","defaultRepeatOptions","positioning","recycle","bindWithoutPositioning","items","bindWithPositioning","childContext","location","itemsBinding","isItemsBindingVolatile","templateBinding","isTemplateBindingVolatile","views","itemsObserver","originalContext","bindView","itemsBindingObserver","templateBindingObserver","observeItems","refreshAllViews","unbindAllViews","updateViews","oldObserver","newObserver","hasNewObserver","leftoverViews","leftoverIndex","availableViews","removeIndex","addIndex","end","removedViews","totalAvailableViews","neighbor","currentContext","templateChanged","itemsLength","viewsLength","HTMLView","disposeContiguousBatch","templateOrTemplateBinding","ViewTemplate","behaviorCount","hasHostBehaviors","hostBindingTarget","fec","firstElementChild","tagName","cloneNode","viewFactories","behaviorIndex","factoryIndex","hostFactories","getElementById","appendTo","lastAttributeNameRegex","currentString","match","exec","range","createRange","lastChild","appendChild","hasChildNodes","previousSibling","oldSource","setStartBefore","setEndAfter","deleteContents","__decorate","__metadata","extendStatics","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","t","decorators","desc","getOwnPropertyDescriptor","decorate","metadataKey","metadataValue","root","props","forEach","temp","v","Dot","hover","y","size","text","boxStyle","Triangle","e","half","TARGET_SIZE","Tree","seconds","elapsed","timer","scale","setInterval","clearInterval","Animation","start","Date","now","unmounted","time","update"],"mappings":"0LAmBaA,iBAAgB,W,OAAhBA,C,EA4CAC,oBAAmB,W,OAAnBA,C,4CAxDAC,EAAyBC,OAAOC,MAAM,CAAC,CAIhDC,OAAQ,KAAAC,qBAAqB,AAArB,GACZ,GAOaN,EAAmB,CAC5BO,OAAAA,AAAOC,GACIA,EAAQ,OAAS,OAAO,CAEnCC,SAAAA,AAASD,GACL,MAAIA,GAEAA,AAAU,UAAVA,GACAA,AAAU,KAAVA,GACAA,AAAU,IAAVA,GAGG,EAEf,CA8BO,OAAMP,EAUTS,YAAYC,CAAK,CAAEC,CAAI,CAAEC,EAAYD,EAAKE,WAAW,EAAE,CAAEC,EAAO,SAAS,CAAEC,CAAS,CAAE,CAClF,IAAI,CAACC,MAAM,CAAG,IAAIC,IAClB,IAAI,CAACP,KAAK,CAAGA,EACb,IAAI,CAACC,IAAI,CAAGA,EACZ,IAAI,CAACC,SAAS,CAAGA,EACjB,IAAI,CAACE,IAAI,CAAGA,EACZ,IAAI,CAACC,SAAS,CAAGA,EACjB,IAAI,CAACG,SAAS,CAAG,CAAC,CAAC,EAAEP,EAAK,CAAC,CAC3B,IAAI,CAACQ,YAAY,CAAG,CAAC,EAAER,EAAK,OAAO,CAAC,CACpC,IAAI,CAACS,WAAW,CAAG,IAAI,CAACD,YAAY,IAAIT,EAAMW,SAAS,CAC1C,YAATP,GAAsBC,AAAc,KAAK,IAAnBA,GACtB,KAAI,CAACA,SAAS,CAAGhB,CAAe,CAExC,CAMAuB,SAASC,CAAM,CAAEC,CAAQ,CAAE,CACvB,IAAMC,EAAWF,CAAM,CAAC,IAAI,CAACL,SAAS,CAAC,CACjCH,EAAY,IAAI,CAACA,SAAS,AACd,MAAK,IAAnBA,GACAS,CAAAA,EAAWT,EAAUP,QAAQ,CAACgB,EAAQ,EAEtCC,IAAaD,IACbD,CAAM,CAAC,IAAI,CAACL,SAAS,CAAC,CAAGM,EACzB,IAAI,CAACE,qBAAqB,CAACH,GACvB,IAAI,CAACH,WAAW,EAChBG,CAAM,CAAC,IAAI,CAACJ,YAAY,CAAC,CAACM,EAAUD,GAExCD,EAAOI,eAAe,CAACC,MAAM,CAAC,IAAI,CAACjB,IAAI,EAE/C,CAKAkB,SAASN,CAAM,CAAE,CAEb,OADA,EAAAO,UAAU,CAACC,KAAK,CAACR,EAAQ,IAAI,CAACZ,IAAI,EAC3BY,CAAM,CAAC,IAAI,CAACL,SAAS,CAAC,AACjC,CAEAc,2BAA2BC,CAAO,CAAE1B,CAAK,CAAE,EACnC,IAAI,CAACS,MAAM,CAACkB,GAAG,CAACD,KAGpB,IAAI,CAACjB,MAAM,CAACmB,GAAG,CAACF,GAChB,IAAI,CAACX,QAAQ,CAACW,EAAS1B,GACvB,IAAI,CAACS,MAAM,CAACoB,MAAM,CAACH,GACvB,CACAP,sBAAsBO,CAAO,CAAE,CAC3B,IAAMnB,EAAO,IAAI,CAACA,IAAI,CAChBE,EAAS,IAAI,CAACA,MAAM,EACtBA,EAAOkB,GAAG,CAACD,IAAYnB,AAAS,aAATA,GAG3B,EAAAuB,GAAG,CAACC,WAAW,CAAC,IAAM,CAClBtB,EAAOmB,GAAG,CAACF,GACX,IAAMM,EAAcN,CAAO,CAAC,IAAI,CAACf,SAAS,CAAC,CAC3C,OAAQJ,GACJ,IAAK,UACD,IAAMC,EAAY,IAAI,CAACA,SAAS,CAChC,EAAAsB,GAAG,CAACG,YAAY,CAACP,EAAS,IAAI,CAACrB,SAAS,CAAEG,AAAc,KAAK,IAAnBA,EAAuBA,EAAUT,MAAM,CAACiC,GAAeA,CAAW,EAC5G,KAAM,AACV,KAAK,UACD,EAAAF,GAAG,CAACI,mBAAmB,CAACR,EAAS,IAAI,CAACrB,SAAS,CAAE2B,EAEzD,CACAvB,EAAOoB,MAAM,CAACH,EAClB,EACJ,CAOA,OAAOS,QAAQhC,CAAK,CAAE,GAAGiC,CAAc,CAAE,CACrC,IAAMC,EAAa,EAAE,CACrBD,EAAeE,IAAI,CAAC5C,EAAuBG,MAAM,CAACM,IAClD,IAAK,IAAIoC,EAAI,EAAGC,EAAKJ,EAAeK,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAAG,CACrD,IAAMG,EAAON,CAAc,CAACG,EAAE,CAC9B,GAAIG,AAAS,KAAK,IAAdA,EAGJ,IAAK,IAAIC,EAAI,EAAGC,EAAKF,EAAKD,MAAM,CAAEE,EAAIC,EAAI,EAAED,EAAG,CAC3C,IAAME,EAASH,CAAI,CAACC,EAAE,AAClB,CAAkB,UAAlB,OAAOE,EACPR,EAAWC,IAAI,CAAC,IAAI7C,EAAoBU,EAAO0C,IAG/CR,EAAWC,IAAI,CAAC,IAAI7C,EAAoBU,EAAO0C,EAAOC,QAAQ,CAAED,EAAOxC,SAAS,CAAEwC,EAAOtC,IAAI,CAAEsC,EAAOrC,SAAS,EAEvH,CAVa,AAWjB,CACA,OAAO6B,CACX,CACJ,C,2GC1Ja,c,oCAAAU,C,oDAbb,IAAMC,EAAc,IAAIC,QAClBC,EAAsB,CACxBC,QAAS,GACTC,SAAU,GACVC,WAAY,EAChB,EACA,SAASC,EAAc5B,CAAO,CAAE,CAC5B,OAAOA,EAAQ6B,UAAU,EAAIP,EAAYQ,GAAG,CAAC9B,IAAY,IAAI,AACjE,CAKO,MAAMqB,UAAmB,EAAAU,sBAAsB,CAQlDvD,YAAYwB,CAAO,CAAEgC,CAAU,CAAE,CAC7B,KAAK,CAAChC,GACN,IAAI,CAACiC,gBAAgB,CAAG,IAAI,CAC5B,IAAI,CAACC,SAAS,CAAG,IAAI,CACrB,IAAI,CAACC,mBAAmB,CAAG,GAC3B,IAAI,CAACC,SAAS,CAAG,IAAI,CACrB,IAAI,CAACC,OAAO,CAAG,IAAI,CACnB,IAAI,CAACC,YAAY,CAAG,GASpB,IAAI,CAAC5C,eAAe,CAAG,IAAI,CAM3B,IAAI,CAAC6C,IAAI,CAAG,IAAI,CAChB,IAAI,CAACvC,OAAO,CAAGA,EACf,IAAI,CAACgC,UAAU,CAAGA,EAClB,IAAMQ,EAAgBR,EAAWQ,aAAa,CAC9C,GAAIA,AAAkB,KAAK,IAAvBA,EAA0B,CAC1B,IAAMX,EAAa7B,EAAQyC,YAAY,CAACD,GACb,WAAvBA,EAAc3D,IAAI,EAClByC,EAAYoB,GAAG,CAAC1C,EAAS6B,EAEjC,CAAC,AAKD,IAAMc,EAAY,EAAA9C,UAAU,CAAC+C,YAAY,CAAC5C,GAC1C,GAAI2C,EAAU5B,MAAM,CAAG,EAAG,CACtB,IAAMkB,EAAoB,IAAI,CAACA,gBAAgB,CAAGhE,OAAO4E,MAAM,CAAC,IAAI,EACpE,IAAK,IAAIhC,EAAI,EAAGC,EAAK6B,EAAU5B,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAAG,CAChD,IAAMiC,EAAeH,CAAS,CAAC9B,EAAE,CAACnC,IAAI,CAChCJ,EAAQ0B,CAAO,CAAC8C,EAAa,AACrB,MAAK,IAAfxE,IACA,OAAO0B,CAAO,CAAC8C,EAAa,CAC5Bb,CAAgB,CAACa,EAAa,CAAGxE,EAEzC,CACJ,CAAC,AACL,CAKA,IAAIyE,aAAc,CAEd,OADA,EAAAlD,UAAU,CAACC,KAAK,CAAC,IAAI,CAAE,eAChB,IAAI,CAACwC,YAAY,AAC5B,CACAU,eAAe1E,CAAK,CAAE,CAClB,IAAI,CAACgE,YAAY,CAAGhE,EACpB,EAAAuB,UAAU,CAACF,MAAM,CAAC,IAAI,CAAE,cAC5B,CAMA,IAAIsD,UAAW,CACX,OAAO,IAAI,CAACb,SAAS,AACzB,CACA,IAAIa,SAAS3E,CAAK,CAAE,CACZ,IAAI,CAAC8D,SAAS,GAAK9D,IAGvB,IAAI,CAAC8D,SAAS,CAAG9D,EACb,CAAC,IAAI,CAAC6D,mBAAmB,EACzB,IAAI,CAACe,cAAc,CAAC5E,GAE5B,CAMA,IAAI6E,QAAS,CACT,OAAO,IAAI,CAACd,OAAO,AACvB,CACA,IAAIc,OAAO7E,CAAK,CAAE,CACV,IAAI,CAAC+D,OAAO,GAAK/D,IAGA,IAAI,GAArB,IAAI,CAAC+D,OAAO,EACZ,IAAI,CAACe,YAAY,CAAC,IAAI,CAACf,OAAO,EAElC,IAAI,CAACA,OAAO,CAAG/D,EACX,CAAC,IAAI,CAAC6D,mBAAmB,EAAI7D,AAAU,IAAI,GAAdA,GAC7B,IAAI,CAAC+E,SAAS,CAAC/E,GAEvB,CAKA+E,UAAUF,CAAM,CAAE,CACd,IAAMG,EAAS1B,EAAc,IAAI,CAAC5B,OAAO,GACrC,IAAI,CAACA,OAAO,CAACuD,WAAW,GAC5B,GAAIJ,aAAkBK,iBAClBF,EAAOG,MAAM,CAACN,QAEb,GAAI,CAACA,EAAOO,YAAY,CAACJ,GAAS,CACnC,IAAMK,EAAkBR,EAAOjB,SAAS,CACxCiB,EAAOS,WAAW,CAACN,GACK,IAAI,GAAxBK,GACA,IAAI,CAACE,YAAY,CAACF,EAE1B,CAAC,AACL,CAKAP,aAAaD,CAAM,CAAE,CACjB,IAAMG,EAAS1B,EAAc,IAAI,CAAC5B,OAAO,GACrC,IAAI,CAACA,OAAO,CAACuD,WAAW,GAC5B,GAAIJ,aAAkBK,iBAClBF,EAAOQ,WAAW,CAACX,QAElB,GAAIA,EAAOO,YAAY,CAACJ,GAAS,CAClC,IAAMK,EAAkBR,EAAOjB,SAAS,CACxCiB,EAAOY,gBAAgB,CAACT,GACA,IAAI,GAAxBK,GACA,IAAI,CAACK,eAAe,CAACL,EAE7B,CAAC,AACL,CAKAE,aAAa3B,CAAS,CAAE,CACpB,IAAM+B,EAAkB,IAAI,CAAC/B,SAAS,EAAK,KAAI,CAACA,SAAS,CAAG,IAAIgC,GAAI,EAC9DnD,EAASmB,EAAUnB,MAAM,CACzBoD,EAAkB,EAAE,CAC1B,IAAK,IAAItD,EAAI,EAAGA,EAAIE,EAAQ,EAAEF,EAAG,CAC7B,IAAMuD,EAAWlC,CAAS,CAACrB,EAAE,CACzBoD,EAAgBhE,GAAG,CAACmE,GACpBH,EAAgBvB,GAAG,CAAC0B,EAAUH,EAAgBnC,GAAG,CAACsC,GAAY,IAG9DH,EAAgBvB,GAAG,CAAC0B,EAAU,GAC9BD,EAAgBvD,IAAI,CAACwD,GAE7B,CACA,GAAI,IAAI,CAAC9B,YAAY,CAAE,CACnB,IAAMtC,EAAU,IAAI,CAACA,OAAO,CAC5B,IAAK,IAAIa,EAAI,EAAGA,EAAIsD,EAAgBpD,MAAM,CAAE,EAAEF,EAC1CsD,CAAe,CAACtD,EAAE,CAACwD,IAAI,CAACrE,EAAS,EAAAsE,uBAAuB,CAEhE,CAAC,AACL,CAMAN,gBAAgB9B,CAAS,CAAEqC,EAAQ,EAAK,CAAE,CACtC,IAAMN,EAAkB,IAAI,CAAC/B,SAAS,CACtC,GAAI+B,AAAoB,IAAI,GAAxBA,EACA,MAAO,CAEX,IAAMlD,EAASmB,EAAUnB,MAAM,CACzByD,EAAoB,EAAE,CAC5B,IAAK,IAAI3D,EAAI,EAAGA,EAAIE,EAAQ,EAAEF,EAAG,CAC7B,IAAMuD,EAAWlC,CAAS,CAACrB,EAAE,CAC7B,GAAIoD,EAAgBhE,GAAG,CAACmE,GAAW,CAC/B,IAAMK,EAAQR,EAAgBnC,GAAG,CAACsC,GAAY,CAC9CK,CAAU,IAAVA,GAAeF,EACTN,EAAgB9D,MAAM,CAACiE,IAAaI,EAAkB5D,IAAI,CAACwD,GAC3DH,EAAgBvB,GAAG,CAAC0B,EAAUK,EAAM,AAC9C,CAAC,AACL,CACA,GAAI,IAAI,CAACnC,YAAY,CAAE,CACnB,IAAMtC,EAAU,IAAI,CAACA,OAAO,CAC5B,IAAK,IAAIa,EAAI,EAAGA,EAAI2D,EAAkBzD,MAAM,CAAE,EAAEF,EAC5C2D,CAAiB,CAAC3D,EAAE,CAAC6D,MAAM,CAAC1E,EAEpC,CAAC,AACL,CAIA2E,qBAAsB,CAClB,GAAI,IAAI,CAACrC,YAAY,CACjB,MAAO,CAEX,IAAMtC,EAAU,IAAI,CAACA,OAAO,AACxB,KAAI,CAACmC,mBAAmB,CACxB,IAAI,CAACyC,oBAAoB,GAEN,IAAI,GAAlB,IAAI,CAACrC,IAAI,EACd,IAAI,CAACA,IAAI,CAAC8B,IAAI,CAACrE,EAAS,EAAAsE,uBAAuB,EAEnD,IAAMpC,EAAY,IAAI,CAACA,SAAS,CAChC,GAAIA,AAAc,IAAI,GAAlBA,EACA,IAAK,GAAM,CAACkC,EAAS,GAAIlC,EACrBkC,EAASC,IAAI,CAACrE,EAAS,EAAAsE,uBAAuB,CAAE,CAGxD,IAAI,CAACtB,cAAc,CAAC,GACxB,CAIA6B,wBAAyB,CACrB,GAAI,CAAC,IAAI,CAACvC,YAAY,CAClB,MAAO,CAEX,IAAI,CAACU,cAAc,CAAC,IACpB,IAAMT,EAAO,IAAI,CAACA,IAAI,CACT,IAAI,GAAbA,GACAA,EAAKmC,MAAM,GAEf,IAAMxC,EAAY,IAAI,CAACA,SAAS,CAChC,GAAIA,AAAc,IAAI,GAAlBA,EAAoB,CACpB,IAAMlC,EAAU,IAAI,CAACA,OAAO,CAC5B,IAAK,GAAM,CAACoE,EAAS,GAAIlC,EACrBkC,EAASM,MAAM,CAAC1E,EAExB,CAAC,AACL,CAOAD,2BAA2BrB,CAAI,CAAEc,CAAQ,CAAED,CAAQ,CAAE,CACjD,IAAMuF,EAAU,IAAI,CAAC9C,UAAU,CAAC+C,eAAe,CAACrG,EAAK,AACrC,MAAK,IAAjBoG,GACAA,EAAQ/E,0BAA0B,CAAC,IAAI,CAACC,OAAO,CAAET,EAEzD,CASAyF,KAAKC,CAAI,CAAEC,CAAM,CAAEC,CAAO,CAAE,OACxB,EAAI,IAAI,CAAC7C,YAAY,EACV,IAAI,CAACtC,OAAO,CAACoF,aAAa,CAAC,IAAIC,YAAYJ,EAAMhH,OAAOqH,MAAM,CAACrH,OAAOqH,MAAM,CAAC,CAAEJ,OAAAA,CAAO,EAAG1D,GAAsB2D,IAG9H,CACAP,sBAAuB,CACnB,IAAM5E,EAAU,IAAI,CAACA,OAAO,CACtBiC,EAAmB,IAAI,CAACA,gBAAgB,CAE9C,GAAIA,AAAqB,IAAI,GAAzBA,EAA2B,CAC3B,IAAMsD,EAAgBtH,OAAOuH,IAAI,CAACvD,GAClC,IAAK,IAAIpB,EAAI,EAAGC,EAAKyE,EAAcxE,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAAG,CACpD,IAAMiC,EAAeyC,CAAa,CAAC1E,EAAE,AACrCb,CAAAA,CAAO,CAAC8C,EAAa,CAAGb,CAAgB,CAACa,EAAa,AAC1D,CACA,IAAI,CAACb,gBAAgB,CAAG,IAAI,AAChC,CAAC,AACD,IAAMD,EAAa,IAAI,CAACA,UAAU,CAEX,IAAI,GAAvB,IAAI,CAACI,SAAS,GACV,IAAI,CAACpC,OAAO,CAACyF,eAAe,CAE5B,IAAI,CAACrD,SAAS,CAAG,IAAI,CAACpC,OAAO,CAACyF,eAAe,GAExCzD,EAAWiB,QAAQ,EAExB,KAAI,CAACb,SAAS,CAAGJ,EAAWiB,QAAQ,EAAI,IAAI,AAAD,GAM5B,IAAI,GAAvB,IAAI,CAACb,SAAS,EACd,IAAI,CAACc,cAAc,CAAC,IAAI,CAACd,SAAS,EAGjB,IAAI,GAArB,IAAI,CAACC,OAAO,GACR,IAAI,CAACrC,OAAO,CAAC0F,aAAa,CAE1B,IAAI,CAACrD,OAAO,CAAG,IAAI,CAACrC,OAAO,CAAC0F,aAAa,GAEpC1D,EAAWmB,MAAM,EAEtB,KAAI,CAACd,OAAO,CAAGL,EAAWmB,MAAM,EAAI,IAAI,AAAD,GAI1B,IAAI,GAArB,IAAI,CAACd,OAAO,EACZ,IAAI,CAACgB,SAAS,CAAC,IAAI,CAAChB,OAAO,EAE/B,IAAI,CAACF,mBAAmB,CAAG,EAC/B,CACAe,eAAeD,CAAQ,CAAE,CACrB,IAAMjD,EAAU,IAAI,CAACA,OAAO,CAItB2F,EAAO/D,EAAc5B,IAAYA,CACnC,CAAc,IAAI,GAAlB,IAAI,CAACuC,IAAI,EAET,IAAI,CAACA,IAAI,CAACqD,OAAO,GACjB,IAAI,CAACrD,IAAI,CAAG,IAAI,EAEX,CAAC,IAAI,CAACJ,mBAAmB,EAE9B,EAAA/B,GAAG,CAACyF,gBAAgB,CAACF,GAErB1C,GAEA,KAAI,CAACV,IAAI,CAAGU,EAAS6C,MAAM,CAAC9F,EAAS2F,EAAM3F,EAAO,CAE1D,CASA,OAAO+F,iBAAiB/F,CAAO,CAAE,CAC7B,IAAMgG,EAAahG,EAAQN,eAAe,CAC1C,GAAIsG,AAAe,KAAK,IAApBA,EACA,OAAOA,CAAW,CAEtB,IAAMhE,EAAa,EAAAiE,qBAAqB,CAACC,OAAO,CAAClG,EAAQxB,WAAW,EACpE,GAAIwD,AAAe,KAAK,IAApBA,EACA,MAAM,AAAImE,MAAM,kCAAmC,CAEvD,OAAQnG,EAAQN,eAAe,CAAG,IAAI2B,EAAWrB,EAASgC,EAC9D,CACJ,C,4GCrVa,yB,oCAAAiE,C,kDArBb,IAAMG,EAAuB,CAAEvH,KAAM,MAAO,EACtCwH,EAAwB,CAAC,EACzBC,EAAe,EAAAC,IAAI,CAACC,OAAO,CAAC,EAAyB,IAAM,CAC7D,IAAMC,EAAmB,IAAIvC,IAC7B,OAAOjG,OAAOC,MAAM,CAAC,CACjBwI,SAAAA,AAAS1E,GACL,CAAIyE,EAAiBxG,GAAG,CAAC+B,EAAWiD,IAAI,IAGxCwB,EAAiB/D,GAAG,CAACV,EAAWiD,IAAI,CAAEjD,GAC/B,IAEX2E,UAAAA,AAAUC,GACCH,EAAiB3E,GAAG,CAAC8E,EAEpC,EACJ,EAKO,OAAMX,EAOTzH,YAAYyG,CAAI,CAAE4B,EAAe5B,EAAKjD,UAAU,CAAE,CAClB,UAAxB,OAAO6E,GACPA,CAAAA,EAAe,CAAEnI,KAAMmI,CAAa,GAExC,IAAI,CAAC5B,IAAI,CAAGA,EACZ,IAAI,CAACvG,IAAI,CAAGmI,EAAanI,IAAI,CAC7B,IAAI,CAACuE,QAAQ,CAAG4D,EAAa5D,QAAQ,CACrC,IAAMtC,EAAa,EAAA5C,mBAAmB,CAAC0C,OAAO,CAACwE,EAAM4B,EAAalG,UAAU,EACtEmG,EAAqB,AAAIC,MAAMpG,EAAWI,MAAM,EAChDiG,EAAiB,CAAC,EAClBjC,EAAkB,CAAC,EACzB,IAAK,IAAIlE,EAAI,EAAGC,EAAKH,EAAWI,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAAG,CACjD,IAAMoG,EAAUtG,CAAU,CAACE,EAAE,AAC7BiG,CAAAA,CAAkB,CAACjG,EAAE,CAAGoG,EAAQtI,SAAS,CACzCqI,CAAc,CAACC,EAAQvI,IAAI,CAAC,CAAGuI,EAC/BlC,CAAe,CAACkC,EAAQtI,SAAS,CAAC,CAAGsI,CACzC,CACA,IAAI,CAACtG,UAAU,CAAGA,EAClB,IAAI,CAACmG,kBAAkB,CAAGA,EAC1B,IAAI,CAACE,cAAc,CAAGA,EACtB,IAAI,CAACjC,eAAe,CAAGA,EACvB,IAAI,CAACvC,aAAa,CACdqE,AAA+B,KAAK,IAApCA,EAAarE,aAAa,CACpB4D,EACAS,AAA+B,IAAI,GAAnCA,EAAarE,aAAa,CACtB,KAAK,EACLvE,OAAOqH,MAAM,CAACrH,OAAOqH,MAAM,CAAC,CAAC,EAAGc,GAAuBS,EAAarE,aAAa,CAAC,CAChG,IAAI,CAAC0E,cAAc,CACfL,AAAgC,KAAK,IAArCA,EAAaK,cAAc,CACrBb,EACApI,OAAOqH,MAAM,CAACrH,OAAOqH,MAAM,CAAC,CAAC,EAAGe,GAAwBQ,EAAaK,cAAc,CAAC,CAC9F,IAAI,CAAC/D,MAAM,CACP0D,AAAwB,KAAK,IAA7BA,EAAa1D,MAAM,CACb,KAAK,EACL4D,MAAMI,OAAO,CAACN,EAAa1D,MAAM,EAC7B,EAAAiE,aAAa,CAACvE,MAAM,CAACgE,EAAa1D,MAAM,EACxC0D,EAAa1D,MAAM,YAAY,EAAAiE,aAAa,CACxCP,EAAa1D,MAAM,CACnB,EAAAiE,aAAa,CAACvE,MAAM,CAAC,CAACgE,EAAa1D,MAAM,CAAC,CAAC,AACjE,CAIA,IAAIkE,WAAY,CACZ,MAAO,CAAC,CAACf,EAAaK,SAAS,CAAC,IAAI,CAAC1B,IAAI,CAC7C,CAKAqC,OAAOC,EAAWC,cAAc,CAAE,CAC9B,IAAMvC,EAAO,IAAI,CAACA,IAAI,CACtB,GAAIqB,EAAaI,QAAQ,CAAC,IAAI,EAAG,CAC7B,IAAM/F,EAAa,IAAI,CAACA,UAAU,CAC5B8G,EAAQxC,EAAK7F,SAAS,CAC5B,IAAK,IAAIyB,EAAI,EAAGC,EAAKH,EAAWI,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAC9C,EAAAhB,UAAU,CAAC6H,cAAc,CAACD,EAAO9G,CAAU,CAACE,EAAE,EAElD8G,QAAQD,cAAc,CAACzC,EAAM,qBAAsB,CAC/C3G,MAAO,IAAI,CAACwI,kBAAkB,CAC9Bc,WAAY,EAChB,EACJ,CAAC,AAID,MAHI,CAACL,EAASzF,GAAG,CAAC,IAAI,CAACpD,IAAI,GACvB6I,EAASD,MAAM,CAAC,IAAI,CAAC5I,IAAI,CAAEuG,EAAM,IAAI,CAACiC,cAAc,EAEjD,IAAI,AACf,CACJ,CAKAjB,EAAsBC,OAAO,CAAGI,EAAaK,SAAS,A,0KC5EzCkB,YAAW,W,OAAXA,C,EAyBGC,cAAa,W,OAAbA,C,6BAnDhB,SAASC,EAAkBC,CAAQ,CAAE,CACjC,OAAO,cAAcA,EACjBxJ,aAAc,CAEV,KAAK,GACL,EAAA6C,UAAU,CAAC0E,gBAAgB,CAAC,IAAI,CACpC,CACAkC,MAAMhD,CAAI,CAAEC,CAAM,CAAEC,CAAO,CAAE,CACzB,OAAO,IAAI,CAACzF,eAAe,CAACsF,IAAI,CAACC,EAAMC,EAAQC,EACnD,CACA+C,mBAAoB,CAChB,IAAI,CAACxI,eAAe,CAACiF,mBAAmB,EAC5C,CACAwD,sBAAuB,CACnB,IAAI,CAACzI,eAAe,CAACmF,sBAAsB,EAC/C,CACAuD,yBAAyB1J,CAAI,CAAEc,CAAQ,CAAED,CAAQ,CAAE,CAC/C,IAAI,CAACG,eAAe,CAACK,0BAA0B,CAACrB,EAAMc,EAAUD,EACpE,CACJ,CACJ,CAMO,IAAMsI,EAAc5J,OAAOqH,MAAM,CAACyC,EAAkBM,aAAc,CAMrEC,KAAAA,AAAKN,GACMD,EAAkBC,GAQ7BV,OAAAA,CAAOrC,EAAMsD,IACF,IAAI,EAAAtC,qBAAqB,CAAChB,EAAMsD,GAAWjB,MAAM,GAAGrC,IAAI,AAEvE,GAOO,SAAS6C,EAAcS,CAAS,CAAE,CAErC,OAAO,SAAUtD,CAAI,CAAE,CACnB,IAAI,EAAAgB,qBAAqB,CAAChB,EAAMsD,GAAWjB,MAAM,EACrD,CACJ,C,0KCCa,oBAAmB,W,OAAnBkB,C,EAEA,kBAAiB,W,OAAjBC,C,EAKArI,IAAG,W,OAAHA,C,kBAlEb,IAAMsI,EAAc,SAAO,CAACnC,IAAI,CAACC,OAAO,CAAC,EAAqB,IAAM,CAChE,IAAMmC,EAAQ,EAAE,CACVC,EAAgB,EAAE,CACxB,SAASC,GAAkB,CACvB,GAAID,EAAc7H,MAAM,CACpB,MAAM6H,EAAcE,KAAK,EAAG,AAEpC,CAUA,SAASC,GAAU,CAEf,IAAIC,EAAQ,EACZ,KAAOA,EAAQL,EAAM5H,MAAM,EAQvB,IAPAkI,AAbR,SAAoBC,CAAI,CAAE,CACtB,GAAI,CACAA,EAAKC,IAAI,EACb,CACA,MAAOC,EAAO,CACVR,EAAchI,IAAI,CAACwI,GACnBC,WAAWR,EAAiB,EAChC,CACJ,EAKmBF,CAAK,CAACK,EAAM,EAOnBA,EAAAA,EAVS,KAUS,CAGlB,IAAK,IAAIM,EAAO,EAAGC,EAAYZ,EAAM5H,MAAM,CAAGiI,EAAOM,EAAOC,EAAWD,IACnEX,CAAK,CAACW,EAAK,CAAGX,CAAK,CAACW,EAAON,EAAM,AAErCL,CAAAA,EAAM5H,MAAM,EAAIiI,EAChBA,EAAQ,CACZ,CAAC,AAELL,EAAM5H,MAAM,CAAG,CACnB,CAOA,OAAO9C,OAAOC,MAAM,CAAC,CACjBsL,QAPJ,SAAiBC,CAAQ,CAAE,CACnBd,EAAM5H,MAAM,CAAG,GACf,SAAO,CAAC2I,qBAAqB,CAACX,GAElCJ,EAAM/H,IAAI,CAAC6I,EACf,EAGIV,QAAAA,CACJ,EACJ,GAEMY,EAAiB,SAAO,CAACC,YAAY,CAACC,YAAY,CAAC,YAAa,CAClEC,WAAY,AAAAC,GAAQA,CACxB,GAEIC,EAAaL,EACXM,EAAS,CAAC,KAAK,EAAEC,KAAKC,MAAM,GAAGC,QAAQ,CAAC,IAAIC,SAAS,CAAC,EAAG,GAAG,CAAC,CAEtD7B,EAAsB,CAAC,EAAEyB,EAAO,CAAC,CAAC,CAElCxB,EAAoB,CAAC,CAAC,EAAEwB,EAAO,CAAC,CAKhC7J,EAAMnC,OAAOC,MAAM,CAAC,CAI7BoM,2BAA4BvD,MAAMI,OAAO,CAACoD,SAASC,kBAAkB,GACjE,YAAaC,cAAcrL,SAAS,CAQxCsL,cAAcC,CAAM,CAAE,CAClB,GAAIX,IAAeL,EACf,MAAM,AAAIxD,MAAM,wCAAyC,CAE7D6D,EAAaW,CACjB,EAQAb,WAAAA,AAAWC,GACAC,EAAWF,UAAU,CAACC,GAMjCa,SAAAA,AAASC,GACEA,GAAQA,AAAkB,IAAlBA,EAAKC,QAAQ,EAAUD,EAAKE,IAAI,CAACC,UAAU,CAACf,GAM/DgB,gCAAAA,AAAgCJ,GACrBK,SAASL,EAAKE,IAAI,CAACI,OAAO,CAAC,CAAC,EAAElB,EAAO,CAAC,CAAC,CAAE,KASpDmB,+BAAAA,AAA+BpC,GACpB,CAAC,EAAER,EAAoB,EAAEQ,EAAM,EAAEP,EAAkB,CAAC,CAU/D4C,iCAAiCC,CAAa,CAAEtC,CAAK,CAAE,CACnD,MAAO,CAAC,EAAEsC,EAAc,EAAE,EAAE,IAAI,CAACF,8BAA8B,CAACpC,GAAO,CAAC,CAAC,AAC7E,EAOAuC,uBAAAA,AAAuBvC,GACZ,CAAC,IAAI,EAAEiB,EAAO,CAAC,EAAEjB,EAAM,GAAG,CAAC,CAMtC3I,YAAaqI,EAAYc,OAAO,CAQhCgC,eAAgB9C,EAAYK,OAAO,CAInC0C,WAAAA,IACW,IAAIC,QAAQhD,EAAYc,OAAO,EAW1CjJ,aAAaP,CAAO,CAAEsL,CAAa,CAAEhN,CAAK,CAAE,CACpCA,MAAAA,EACA0B,EAAQ2L,eAAe,CAACL,GAGxBtL,EAAQO,YAAY,CAAC+K,EAAehN,EAE5C,EASAkC,oBAAoBR,CAAO,CAAEsL,CAAa,CAAEhN,CAAK,CAAE,CAC/CA,EACM0B,EAAQO,YAAY,CAAC+K,EAAe,IACpCtL,EAAQ2L,eAAe,CAACL,EAAc,AAChD,EAKAzF,iBAAiB+F,CAAM,CAAE,CACrB,IAAK,IAAIC,EAAQD,EAAOE,UAAU,CAAED,AAAU,IAAI,GAAdA,EAAgBA,EAAQD,EAAOE,UAAU,CACzEF,EAAO9H,WAAW,CAAC+H,EAE3B,EAKAE,qBAAAA,AAAqBC,GACVzB,SAAS0B,gBAAgB,CAACD,EAAU,IAC3C,IAAI,CAAE,GAEd,E,4GCtMS,O,oCAAA,EAAAE,GAAG,A,WARE,S,OACA,U,OACA,U,OAEA,S,OACA,S,OACA,U,QAEkB,O,OAElB,U,OACA,U,OACA,U,OAIA,U,OACA,S,OAGA,S,0KClBEC,UAAS,W,OAATA,C,EA0KAC,YAAW,W,OAAXA,C,EA2IAC,oBAAmB,W,OAAnBA,C,kBArTT,SAASF,EAAUnD,CAAK,CAAEsD,CAAO,CAAEC,CAAU,CAAE,CAClD,MAAO,CACHvD,MAAOA,EACPsD,QAASA,EACTC,WAAYA,CAChB,CACJ,CAoKO,SAASH,EAAYnF,CAAO,CAAEuF,CAAY,CAAEC,CAAU,CAAEC,CAAG,CAAEC,CAAQ,CAAEC,CAAM,CAAE,CAClF,IA4BIC,EA5BAC,EAAc,EACdC,EAAc,EACZC,EAAY9C,KAAK+C,GAAG,CAACR,EAAaD,EAAcI,EAASD,GAW/D,GAVqB,IAAjBH,GAAsBG,AAAa,IAAbA,GACtBG,CAAAA,EAAcI,AArEtB,SAAsBjG,CAAO,CAAEyF,CAAG,CAAES,CAAY,CAAE,CAC9C,IAAK,IAAItM,EAAI,EAAGA,EAAIsM,EAAc,EAAEtM,EAChC,GAAIoG,CAAO,CAACpG,EAAE,GAAK6L,CAAG,CAAC7L,EAAE,CACrB,OAAOA,CAAE,CAGjB,OAAOsM,CACX,EA8DmClG,EAASyF,EAAKM,EAAS,EAElDP,IAAexF,EAAQlG,MAAM,EAAI6L,IAAWF,EAAI3L,MAAM,EACtDgM,CAAAA,EAAcK,AAhEtB,SAAsBnG,CAAO,CAAEyF,CAAG,CAAES,CAAY,CAAE,CAC9C,IAAIE,EAASpG,EAAQlG,MAAM,CACvBuM,EAASZ,EAAI3L,MAAM,CACnB0D,EAAQ,EACZ,KAAOA,EAAQ0I,GAAgBlG,CAAO,CAAC,EAAEoG,EAAO,GAAKX,CAAG,CAAC,EAAEY,EAAO,EAC9D7I,IAEJ,OAAOA,CACX,EAwDmCwC,EAASyF,EAAKM,EAAYF,EAAW,EAEpEN,GAAgBM,EAChBH,GAAYG,EACZL,GAAcM,EACdH,GAAUG,EACNN,EAAaD,GAAiB,GAAKI,EAASD,GAAa,EACzD,OAAO,EAAAY,UAAU,AAAC,CAEtB,GAAIf,IAAiBC,EAAY,CAC7B,IAAMI,EAASV,EAAUK,EAAc,EAAE,CAAE,GAC3C,KAAOG,EAAWC,GACdC,EAAOP,OAAO,CAAC1L,IAAI,CAAC8L,CAAG,CAACC,IAAW,EAEvC,MAAO,CAACE,EAAO,AACnB,CAEoE,AAD/D,GAAIF,IAAaC,EAClB,MAAO,CAACT,EAAUK,EAAc,EAAE,CAAEC,EAAaD,GAAc,AAAC,CAEpE,IAAMgB,EAAMC,AA9IhB,SAA2CC,CAAS,CAAE,CAClD,IAAI7M,EAAI6M,EAAU3M,MAAM,CAAG,EACvBE,EAAIyM,CAAS,CAAC,EAAE,CAAC3M,MAAM,CAAG,EAC1BkG,EAAUyG,CAAS,CAAC7M,EAAE,CAACI,EAAE,CACvB0M,EAAQ,EAAE,CAChB,KAAO9M,EAAI,GAAKI,EAAI,GAAG,KAcfgM,EAbJ,GAAIpM,AAAM,IAANA,EAAS,CACT8M,EAAM/M,IAAI,CArDL,GAsDLK,IACA,QAAS,AACb,CAAC,AACD,GAAIA,AAAM,IAANA,EAAS,CACT0M,EAAM/M,IAAI,CAzDF,GA0DRC,IACA,QAAS,AACb,CAAC,AACD,IAAM+M,EAAYF,CAAS,CAAC7M,EAAI,EAAE,CAACI,EAAI,EAAE,CACnC4M,EAAOH,CAAS,CAAC7M,EAAI,EAAE,CAACI,EAAE,CAC1B6M,EAAQJ,CAAS,CAAC7M,EAAE,CAACI,EAAI,EAAE,AAQ7BgM,EALAA,EADAY,EAAOC,EACDD,EAAOD,EAAYC,EAAOD,CAAS,CAGnCE,EAAQF,EAAYE,EAAQF,CAAS,IAEnCA,GACJA,IAAc3G,EACd0G,EAAM/M,IAAI,CA5EP,IA+EH+M,EAAM/M,IAAI,CA9EN,GA+EJqG,EAAU2G,GAEd/M,IACAI,KAEKgM,IAAQY,GACbF,EAAM/M,IAAI,CAnFF,GAoFRC,IACAoG,EAAU4G,IAGVF,EAAM/M,IAAI,CAzFL,GA0FLK,IACAgG,EAAU6G,EAElB,CAEA,OADAH,EAAMI,OAAO,GACNJ,CACX,EA4FkDK,AA/KlD,SAA2B/G,CAAO,CAAEuF,CAAY,CAAEC,CAAU,CAAEC,CAAG,CAAEC,CAAQ,CAAEC,CAAM,CAAE,KAK7EkB,EACAD,EAJJ,IAAMI,EAAWrB,EAASD,EAAW,EAC/BuB,EAAczB,EAAaD,EAAe,EAC1CkB,EAAY,AAAI3G,MAAMkH,GAI5B,IAAK,IAAIpN,EAAI,EAAGA,EAAIoN,EAAU,EAAEpN,EAC5B6M,CAAS,CAAC7M,EAAE,CAAG,AAAIkG,MAAMmH,GACzBR,CAAS,CAAC7M,EAAE,CAAC,EAAE,CAAGA,EAGtB,IAAK,IAAII,EAAI,EAAGA,EAAIiN,EAAa,EAAEjN,EAC/ByM,CAAS,CAAC,EAAE,CAACzM,EAAE,CAAGA,EAEtB,IAAK,IAAIJ,EAAI,EAAGA,EAAIoN,EAAU,EAAEpN,EAC5B,IAAK,IAAII,EAAI,EAAGA,EAAIiN,EAAa,EAAEjN,EAC3BgG,CAAO,CAACuF,EAAevL,EAAI,EAAE,GAAKyL,CAAG,CAACC,EAAW9L,EAAI,EAAE,CACvD6M,CAAS,CAAC7M,EAAE,CAACI,EAAE,CAAGyM,CAAS,CAAC7M,EAAI,EAAE,CAACI,EAAI,EAAE,EAGzC6M,EAAQJ,CAAS,CAAC7M,EAAI,EAAE,CAACI,EAAE,CAAG,EAC9B4M,EAAOH,CAAS,CAAC7M,EAAE,CAACI,EAAI,EAAE,CAAG,EAC7ByM,CAAS,CAAC7M,EAAE,CAACI,EAAE,CAAG6M,EAAQD,EAAOC,EAAQD,CAAI,EAIzD,OAAOH,CACX,EAkJoEzG,EAASuF,EAAcC,EAAYC,EAAKC,EAAUC,IAC5GuB,EAAU,EAAE,CAElB,IAAInF,EAAQwD,EACR4B,EAAWzB,EACf,IAAK,IAAI9L,EAAI,EAAGA,EAAI2M,EAAIzM,MAAM,CAAE,EAAEF,EAC9B,OAAQ2M,CAAG,CAAC3M,EAAE,EACV,KArMO,EAsMY,KAAK,IAAhBgM,IACAsB,EAAQvN,IAAI,CAACiM,GACbA,EAAS,KAAK,GAElB7D,IACAoF,IACA,KAAM,AACV,MA5MQ,EA6MW,KAAK,IAAhBvB,GACAA,CAAAA,EAASV,EAAUnD,EAAO,EAAE,CAAE,EAAC,EAEnC6D,EAAON,UAAU,GACjBvD,IACA6D,EAAOP,OAAO,CAAC1L,IAAI,CAAC8L,CAAG,CAAC0B,EAAS,EACjCA,IACA,KAAM,AACV,MApNK,EAqNc,KAAK,IAAhBvB,GACAA,CAAAA,EAASV,EAAUnD,EAAO,EAAE,CAAE,EAAC,EAEnC6D,EAAON,UAAU,GACjBvD,IACA,KAAM,AACV,MA1NQ,EA2NW,KAAK,IAAhB6D,GACAA,CAAAA,EAASV,EAAUnD,EAAO,EAAE,CAAE,EAAC,EAEnC6D,EAAOP,OAAO,CAAC1L,IAAI,CAAC8L,CAAG,CAAC0B,EAAS,EACjCA,GAGR,CAKJ,OAHe,KAAK,IAAhBvB,GACAsB,EAAQvN,IAAI,CAACiM,GAEVsB,CACX,CACA,IAAME,EAAQtH,MAAM3H,SAAS,CAACwB,IAAI,CAkE3B,SAASyL,EAAoBiC,CAAK,CAAEC,CAAa,CAAE,CACtD,IAAIJ,EAAU,EAAE,CACVK,EAAiBC,AAX3B,SAA8BF,CAAa,CAAE,CACzC,IAAMJ,EAAU,EAAE,CAClB,IAAK,IAAItN,EAAI,EAAGC,EAAKyN,EAAcxN,MAAM,CAAEF,EAAIC,EAAID,IAAK,CACpD,IAAM6N,EAASH,CAAa,CAAC1N,EAAE,EAC/B8N,AA5DR,SAAqBR,CAAO,CAAEnF,CAAK,CAAEsD,CAAO,CAAEC,CAAU,CAAE,CACtD,IAAMM,EAASV,EAAUnD,EAAOsD,EAASC,GACrCqC,EAAW,GACXC,EAAkB,EACtB,IAAK,IAAIhO,EAAI,EAAGA,EAAIsN,EAAQpN,MAAM,CAAEF,IAAK,CACrC,IAAMoG,EAAUkH,CAAO,CAACtN,EAAE,CAE1B,GADAoG,EAAQ+B,KAAK,EAAI6F,EACbD,EACA,QAAS,CAEb,IAAME,EAAiBC,AAnI/B,SAAmBC,CAAM,CAAEC,CAAI,CAAEC,CAAM,CAAEC,CAAI,CAAE,CAE3C,GAAIF,EAAOC,GAAUC,EAAOH,EACxB,OAAO,EAAG,CAGd,GAAIC,IAASC,GAAUC,IAASH,EAC5B,OAAO,CAAE,CAGb,GAAIA,EAASE,SACT,AAAID,EAAOE,EACAF,EAAOC,EAEXC,EAAOD,CAFW,AAG5B,QAED,AAAIC,EAAOF,EACAE,EAAOH,EAEXC,EAAOD,CAFW,AAG7B,EA8GyCnC,EAAO7D,KAAK,CAAE6D,EAAO7D,KAAK,CAAG6D,EAAOP,OAAO,CAACvL,MAAM,CAAEkG,EAAQ+B,KAAK,CAAE/B,EAAQ+B,KAAK,CAAG/B,EAAQsF,UAAU,EACtI,GAAIuC,GAAkB,EAAG,CAErBX,EAAQtB,MAAM,CAAChM,EAAG,GAClBA,IACAgO,GAAmB5H,EAAQsF,UAAU,CAAGtF,EAAQqF,OAAO,CAACvL,MAAM,CAC9D8L,EAAON,UAAU,EAAItF,EAAQsF,UAAU,CAAGuC,EAC1C,IAAMM,EAAcvC,EAAOP,OAAO,CAACvL,MAAM,CAAGkG,EAAQqF,OAAO,CAACvL,MAAM,CAAG+N,EACrE,GAAI,AAACjC,EAAON,UAAU,EAAK6C,EAItB,CACD,IAAIC,EAAiBpI,EAAQqF,OAAO,CACpC,GAAIO,EAAO7D,KAAK,CAAG/B,EAAQ+B,KAAK,CAAE,CAE9B,IAAMsG,EAAUzC,EAAOP,OAAO,CAACiD,KAAK,CAAC,EAAGtI,EAAQ+B,KAAK,CAAG6D,EAAO7D,KAAK,EACpEqF,EAAMmB,KAAK,CAACF,EAASD,GACrBA,EAAiBC,CACrB,CAAC,AACD,GAAIzC,EAAO7D,KAAK,CAAG6D,EAAOP,OAAO,CAACvL,MAAM,CACpCkG,EAAQ+B,KAAK,CAAG/B,EAAQsF,UAAU,CAAE,CAEpC,IAAM9I,EAASoJ,EAAOP,OAAO,CAACiD,KAAK,CAACtI,EAAQ+B,KAAK,CAAG/B,EAAQsF,UAAU,CAAGM,EAAO7D,KAAK,EACrFqF,EAAMmB,KAAK,CAACH,EAAgB5L,EAChC,CAAC,AACDoJ,EAAOP,OAAO,CAAG+C,EACbpI,EAAQ+B,KAAK,CAAG6D,EAAO7D,KAAK,EAC5B6D,CAAAA,EAAO7D,KAAK,CAAG/B,EAAQ+B,KAAK,AAAD,CAEnC,MApBI4F,EAAW,EAoBd,AACL,MACK,GAAI/B,EAAO7D,KAAK,CAAG/B,EAAQ+B,KAAK,CAAE,CAEnC4F,EAAW,GACXT,EAAQtB,MAAM,CAAChM,EAAG,EAAGgM,GACrBhM,IACA,IAAM4O,EAAS5C,EAAON,UAAU,CAAGM,EAAOP,OAAO,CAACvL,MAAM,AACxDkG,CAAAA,EAAQ+B,KAAK,EAAIyG,EACjBZ,GAAmBY,CACvB,CAAC,AACL,CACI,CAACb,GACDT,EAAQvN,IAAI,CAACiM,EAErB,EAKoBsB,EAASO,EAAO1F,KAAK,CAAE0F,EAAOpC,OAAO,CAAEoC,EAAOnC,UAAU,CACxE,CACA,OAAO4B,CACX,EAIgDI,GAC5C,IAAK,IAAI1N,EAAI,EAAGC,EAAK0N,EAAezN,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAAG,CACrD,IAAMgM,EAAS2B,CAAc,CAAC3N,EAAE,CAChC,GAAIgM,AAAsB,IAAtBA,EAAON,UAAU,EAAUM,AAA0B,IAA1BA,EAAOP,OAAO,CAACvL,MAAM,CAAQ,CACpD8L,EAAOP,OAAO,CAAC,EAAE,GAAKgC,CAAK,CAACzB,EAAO7D,KAAK,CAAC,EACzCmF,EAAQvN,IAAI,CAACiM,GAEjB,QAAS,AACb,CAAC,AACDsB,EAAUA,EAAQuB,MAAM,CAACtD,EAAYkC,EAAOzB,EAAO7D,KAAK,CAAE6D,EAAO7D,KAAK,CAAG6D,EAAON,UAAU,CAAEM,EAAOP,OAAO,CAAE,EAAGO,EAAOP,OAAO,CAACvL,MAAM,EACxI,CACA,OAAOoN,CACX,C,4GCpPgB,0B,oCAAAwB,C,oDA7EhB,IAAIC,EAA0B,GAC9B,SAASC,EAAYC,CAAY,CAAExB,CAAK,CAAE,CACtC,IAAItF,EAAQ8G,EAAa9G,KAAK,CACxB+G,EAAczB,EAAMvN,MAAM,CAYhC,OAXIiI,EAAQ+G,EACR/G,EAAQ+G,EAAcD,EAAavD,UAAU,CAExCvD,EAAQ,GACbA,CAAAA,EACI+G,EAAcD,EAAaxD,OAAO,CAACvL,MAAM,CAAGiI,EAAQ8G,EAAavD,UAAU,AAAD,EAE9EvD,EAAQ,GACRA,CAAAA,EAAQ,GAEZ8G,EAAa9G,KAAK,CAAGA,EACd8G,CACX,CACA,MAAME,UAAsB,EAAAC,aAAa,CACrCzR,YAAYc,CAAM,CAAE,CAChB,KAAK,CAACA,GACN,IAAI,CAAC4Q,aAAa,CAAG,KAAK,EAC1B,IAAI,CAAC/B,OAAO,CAAG,KAAK,EACpB,IAAI,CAACgC,UAAU,CAAG,GAClB,IAAI,CAAChH,IAAI,CAAG,IAAI,CAACiH,KAAK,CACtBzI,QAAQD,cAAc,CAACpI,EAAQ,kBAAmB,CAC9ChB,MAAO,IAAI,CACXsJ,WAAY,EAChB,EACJ,CACAyI,UAAUC,CAAU,CAAE,CAClB,IAAI,CAACF,KAAK,GACV,KAAK,CAACC,SAAS,CAACC,EACpB,CACAC,UAAU1D,CAAM,CAAE,CACV,AAAiB,KAAK,IAAtB,IAAI,CAACsB,OAAO,CACZ,IAAI,CAACA,OAAO,CAAG,CAACtB,EAAO,CAGvB,IAAI,CAACsB,OAAO,CAACvN,IAAI,CAACiM,GAElB,IAAI,CAACsD,UAAU,GACf,IAAI,CAACA,UAAU,CAAG,GAClB,EAAA/P,GAAG,CAACC,WAAW,CAAC,IAAI,EAE5B,CACAmQ,MAAMN,CAAa,CAAE,CACjB,IAAI,CAACA,aAAa,CAAGA,EACjB,IAAI,CAACC,UAAU,GACf,IAAI,CAACA,UAAU,CAAG,GAClB,EAAA/P,GAAG,CAACC,WAAW,CAAC,IAAI,EAE5B,CACA+P,OAAQ,CACJ,IAAMjC,EAAU,IAAI,CAACA,OAAO,CACtB+B,EAAgB,IAAI,CAACA,aAAa,CACxC,GAAI/B,AAAY,KAAK,IAAjBA,GAAsB+B,AAAkB,KAAK,IAAvBA,EACtB,MAAO,AAEX,KAAI,CAACC,UAAU,CAAG,GAClB,IAAI,CAAChC,OAAO,CAAG,KAAK,EACpB,IAAI,CAAC+B,aAAa,CAAG,KAAK,EAC1B,IAAMO,EAAeP,AAAkB,KAAK,IAAvBA,EACf,KAAA7D,mBAAmB,AAAnB,EAAoB,IAAI,CAAC/M,MAAM,CAAE6O,GACjC,KAAA/B,WAAW,AAAX,EAAY,IAAI,CAAC9M,MAAM,CAAE,EAAG,IAAI,CAACA,MAAM,CAACyB,MAAM,CAAEmP,EAAe,EAAGA,EAAcnP,MAAM,CAAC,CAC7F,IAAI,CAACpB,MAAM,CAAC8Q,EAChB,CACJ,CAWO,SAASd,GAAyB,CACrC,GAAIC,EACA,MAAO,CAEXA,EAA0B,GAC1B,EAAA/P,UAAU,CAAC6Q,uBAAuB,CAAC,AAACC,GACzB,IAAIX,EAAcW,IAE7B,IAAMlJ,EAAQV,MAAM3H,SAAS,CAG7B,GAAIqI,EAAMmJ,UAAU,CAChB,MAAO,CAEXjJ,QAAQD,cAAc,CAACD,EAAO,aAAc,CACxCnJ,MAAO,EACPsJ,WAAY,EAChB,GACA,IAAMiJ,EAAMpJ,EAAMoJ,GAAG,CACfjQ,EAAO6G,EAAM7G,IAAI,CACjBmN,EAAUtG,EAAMsG,OAAO,CACvBjF,EAAQrB,EAAMqB,KAAK,CACnBgI,EAAOrJ,EAAMqJ,IAAI,CACjBjE,EAASpF,EAAMoF,MAAM,CACrBkE,EAAUtJ,EAAMsJ,OAAO,AAC7BtJ,CAAAA,EAAMoJ,GAAG,CAAG,UAAY,CACpB,IAAMG,EAAW,IAAI,CAACjQ,MAAM,CAAG,EACzBkQ,EAAmBJ,EAAIrB,KAAK,CAAC,IAAI,CAAE0B,WACnCC,EAAI,IAAI,CAACzR,eAAe,CAI9B,OAHU,KAAK,IAAXyR,GAAgBH,GAChBG,EAAEZ,SAAS,CAAC,KAAApE,SAAS,AAAT,EAAU,IAAI,CAACpL,MAAM,CAAE,CAACkQ,EAAiB,CAAE,IAEpDA,CACX,EACAxJ,EAAM7G,IAAI,CAAG,UAAY,CACrB,IAAMqQ,EAAmBrQ,EAAK4O,KAAK,CAAC,IAAI,CAAE0B,WACpCC,EAAI,IAAI,CAACzR,eAAe,CAI9B,OAHU,KAAK,IAAXyR,GACAA,EAAEZ,SAAS,CAACV,EAAY,KAAA1D,SAAS,AAAT,EAAU,IAAI,CAACpL,MAAM,CAAGmQ,UAAUnQ,MAAM,CAAE,EAAE,CAAEmQ,UAAUnQ,MAAM,EAAG,IAAI,GAE1FkQ,CACX,EACAxJ,EAAMsG,OAAO,CAAG,UAAY,KACpBqD,EACJ,IAAMD,EAAI,IAAI,CAACzR,eAAe,AACpB,MAAK,IAAXyR,IACAA,EAAEf,KAAK,GACPgB,EAAW,IAAI,CAAC7B,KAAK,IAEzB,IAAM0B,EAAmBlD,EAAQyB,KAAK,CAAC,IAAI,CAAE0B,WAI7C,OAHU,KAAK,IAAXC,GACAA,EAAEX,KAAK,CAACY,GAELH,CACX,EACAxJ,EAAMqB,KAAK,CAAG,UAAY,CACtB,IAAMkI,EAAW,IAAI,CAACjQ,MAAM,CAAG,EACzBkQ,EAAmBnI,EAAM0G,KAAK,CAAC,IAAI,CAAE0B,WACrCC,EAAI,IAAI,CAACzR,eAAe,CAI9B,OAHU,KAAK,IAAXyR,GAAgBH,GAChBG,EAAEZ,SAAS,CAAC,KAAApE,SAAS,AAAT,EAAU,EAAG,CAAC8E,EAAiB,CAAE,IAE1CA,CACX,EACAxJ,EAAMqJ,IAAI,CAAG,UAAY,KACjBM,EACJ,IAAMD,EAAI,IAAI,CAACzR,eAAe,AACpB,MAAK,IAAXyR,IACAA,EAAEf,KAAK,GACPgB,EAAW,IAAI,CAAC7B,KAAK,IAEzB,IAAM0B,EAAmBH,EAAKtB,KAAK,CAAC,IAAI,CAAE0B,WAI1C,OAHU,KAAK,IAAXC,GACAA,EAAEX,KAAK,CAACY,GAELH,CACX,EACAxJ,EAAMoF,MAAM,CAAG,UAAY,CACvB,IAAMoE,EAAmBpE,EAAO2C,KAAK,CAAC,IAAI,CAAE0B,WACtCC,EAAI,IAAI,CAACzR,eAAe,CAI9B,OAHU,KAAK,IAAXyR,GACAA,EAAEZ,SAAS,CAACV,EAAY,KAAA1D,SAAS,AAAT,EAAU,CAAC+E,SAAS,CAAC,EAAE,CAAED,EAAkBC,UAAUnQ,MAAM,CAAG,EAAImQ,UAAUnQ,MAAM,CAAG,EAAI,CAAC,EAAG,IAAI,GAEtHkQ,CACX,EACAxJ,EAAMsJ,OAAO,CAAG,UAAY,CACxB,IAAME,EAAmBF,EAAQvB,KAAK,CAAC,IAAI,CAAE0B,WACvCC,EAAI,IAAI,CAACzR,eAAe,CAI9B,OAHU,KAAK,IAAXyR,GACAA,EAAEZ,SAAS,CAACV,EAAY,KAAA1D,SAAS,AAAT,EAAU,EAAG,EAAE,CAAE+E,UAAUnQ,MAAM,EAAG,IAAI,GAE7DkQ,CACX,CACJ,C,0KCnKahB,cAAa,W,OAAbA,C,EAqGAlO,uBAAsB,W,OAAtBA,C,GArGN,OAAMkO,EAMTzR,YAAYc,CAAM,CAAE+R,CAAiB,CAAE,CACnC,IAAI,CAACC,IAAI,CAAG,KAAK,EACjB,IAAI,CAACC,IAAI,CAAG,KAAK,EACjB,IAAI,CAACC,SAAS,CAAG,KAAK,EACtB,IAAI,CAAClS,MAAM,CAAGA,EACd,IAAI,CAACgS,IAAI,CAAGD,CAChB,CAKApR,IAAIqQ,CAAU,CAAE,CACZ,OAAO,AAAmB,KAAK,IAAxB,IAAI,CAACkB,SAAS,CACf,IAAI,CAACF,IAAI,GAAKhB,GAAc,IAAI,CAACiB,IAAI,GAAKjB,EAC1C,AAAuC,KAAvC,IAAI,CAACkB,SAAS,CAACC,OAAO,CAACnB,EAAkB,AACnD,CAKAD,UAAUC,CAAU,CAAE,CAClB,IAAMkB,EAAY,IAAI,CAACA,SAAS,CAChC,GAAIA,AAAc,KAAK,IAAnBA,EAAsB,CACtB,GAAI,IAAI,CAACvR,GAAG,CAACqQ,GACT,MAAO,CAEX,GAAI,AAAc,KAAK,IAAnB,IAAI,CAACgB,IAAI,CAAa,CACtB,IAAI,CAACA,IAAI,CAAGhB,EACZ,MACJ,CAAC,AACD,GAAI,AAAc,KAAK,IAAnB,IAAI,CAACiB,IAAI,CAAa,CACtB,IAAI,CAACA,IAAI,CAAGjB,EACZ,MACJ,CAAC,AACD,IAAI,CAACkB,SAAS,CAAG,CAAC,IAAI,CAACF,IAAI,CAAE,IAAI,CAACC,IAAI,CAAEjB,EAAW,CACnD,IAAI,CAACgB,IAAI,CAAG,KAAK,EACjB,IAAI,CAACC,IAAI,CAAG,KAAK,CACrB,KACK,CACD,IAAMvI,EAAQwI,EAAUC,OAAO,CAACnB,GAClB,KAAVtH,GACAwI,EAAU5Q,IAAI,CAAC0P,EAEvB,CAAC,AACL,CAKAoB,YAAYpB,CAAU,CAAE,CACpB,IAAMkB,EAAY,IAAI,CAACA,SAAS,CAChC,GAAIA,AAAc,KAAK,IAAnBA,EACI,IAAI,CAACF,IAAI,GAAKhB,EACd,IAAI,CAACgB,IAAI,CAAG,KAAK,EAEZ,IAAI,CAACC,IAAI,GAAKjB,GACnB,KAAI,CAACiB,IAAI,CAAG,KAAK,OAGpB,CACD,IAAMvI,EAAQwI,EAAUC,OAAO,CAACnB,GAClB,KAAVtH,GACAwI,EAAU3E,MAAM,CAAC7D,EAAO,EAEhC,CAAC,AACL,CAKArJ,OAAOgS,CAAI,CAAE,CACT,IAAMH,EAAY,IAAI,CAACA,SAAS,CAC1BlS,EAAS,IAAI,CAACA,MAAM,CAC1B,GAAIkS,AAAc,KAAK,IAAnBA,EAAsB,CACtB,IAAMF,EAAO,IAAI,CAACA,IAAI,CAChBC,EAAO,IAAI,CAACA,IAAI,AACT,MAAK,IAAdD,GACAA,EAAKM,YAAY,CAACtS,EAAQqS,GAEjB,KAAK,IAAdJ,GACAA,EAAKK,YAAY,CAACtS,EAAQqS,EAElC,MAEI,IAAK,IAAI9Q,EAAI,EAAGC,EAAK0Q,EAAUzQ,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAC7C2Q,CAAS,CAAC3Q,EAAE,CAAC+Q,YAAY,CAACtS,EAAQqS,EAAM,AAGpD,CACJ,CAMO,MAAM5P,EAKTvD,YAAYc,CAAM,CAAE,CAChB,IAAI,CAACuS,WAAW,CAAG,CAAC,EACpB,IAAI,CAACC,iBAAiB,CAAG,IAAI,CAC7B,IAAI,CAACxS,MAAM,CAAGA,CAClB,CAKAK,OAAOmD,CAAY,CAAE,CACjB,IAAIiP,EACJ,IAAMF,EAAc,IAAI,CAACA,WAAW,CAAC/O,EAAa,AAC9B,MAAK,IAArB+O,GACAA,EAAYlS,MAAM,CAACmD,GAEtB,AAAiC,IAAI,GAArCiP,CAAAA,EAAK,IAAI,CAACD,iBAAgB,GAAeC,AAAO,KAAK,IAAZA,GAAyBA,EAAGpS,MAAM,CAACmD,EACjF,CAMAuN,UAAUC,CAAU,CAAE0B,CAAe,CAAE,CACnC,IAAID,EACJ,GAAIC,EAAiB,CACjB,IAAIH,EAAc,IAAI,CAACA,WAAW,CAACG,EAAgB,AAC/B,MAAK,IAArBH,GACA,KAAI,CAACA,WAAW,CAACG,EAAgB,CAAGH,EAAc,IAAI5B,EAAc,IAAI,CAAC3Q,MAAM,GAEnFuS,EAAYxB,SAAS,CAACC,EAC1B,MAEI,IAAI,CAACwB,iBAAiB,CACjB,AAAiC,IAAI,GAArCC,CAAAA,EAAK,IAAI,CAACD,iBAAgB,GAAeC,AAAO,KAAK,IAAZA,EAAgBA,EAAK,IAAI9B,EAAc,IAAI,CAAC3Q,MAAM,CAAC,CACjG,IAAI,CAACwS,iBAAiB,CAACzB,SAAS,CAACC,EACpC,AACL,CAMAoB,YAAYpB,CAAU,CAAE2B,CAAiB,CAAE,CACvC,IAAIF,EACJ,GAAIE,EAAmB,CACnB,IAAMJ,EAAc,IAAI,CAACA,WAAW,CAACI,EAAkB,AACnC,MAAK,IAArBJ,GACAA,EAAYH,WAAW,CAACpB,EAEhC,MAEK,AAAiC,IAAI,GAArCyB,CAAAA,EAAK,IAAI,CAACD,iBAAgB,GAAeC,AAAO,KAAK,IAAZA,GAAyBA,EAAGL,WAAW,CAACpB,EAAY,AAEtG,CACJ,C,0KCpKazQ,WAAU,W,OAAVA,C,EA6QAqS,iBAAgB,W,OAAhBA,C,EA2EA5N,wBAAuB,W,OAAvBA,C,wCAxVN,IAAMzE,EAAa,EAAA0G,IAAI,CAACC,OAAO,CAAC,EAAoB,IAAM,CAC7D,IAGI2L,EAHEC,EAAgB,iBAChBC,EAAiB,IAAI9Q,QACrBlB,EAAc,EAAAD,GAAG,CAACC,WAAW,CAEnC,IAAIiS,EAAsB,AAAChE,GAAU,CACjC,MAAM,AAAInI,MAAM,4DAA6D,AACjF,EACA,SAASoM,EAAYjT,CAAM,CAAE,CACzB,IAAIkT,EAAQlT,EAAOI,eAAe,EAAI2S,EAAevQ,GAAG,CAACxC,GASzD,OARc,KAAK,IAAfkT,IACIzL,MAAMI,OAAO,CAAC7H,GACdkT,EAAQF,EAAoBhT,GAG5B+S,EAAe3P,GAAG,CAACpD,EAASkT,EAAQ,IAAI,EAAAzQ,sBAAsB,CAACzC,KAGhEkT,CACX,CACA,IAAM5P,EAAe,KAAAxE,qBAAqB,AAArB,GACrB,OAAMqU,EACFjU,YAAYE,CAAI,CAAE,CACd,IAAI,CAACA,IAAI,CAAGA,EACZ,IAAI,CAACgU,KAAK,CAAG,CAAC,CAAC,EAAEhU,EAAK,CAAC,CACvB,IAAI,CAACiU,QAAQ,CAAG,CAAC,EAAEjU,EAAK,OAAO,CAAC,AACpC,CACAkB,SAASN,CAAM,CAAE,CAIb,OAHgB,KAAK,IAAjB6S,GACAA,EAAQS,KAAK,CAACtT,EAAQ,IAAI,CAACZ,IAAI,EAE5BY,CAAM,CAAC,IAAI,CAACoT,KAAK,CAAC,AAC7B,CACArT,SAASC,CAAM,CAAEC,CAAQ,CAAE,CACvB,IAAMmT,EAAQ,IAAI,CAACA,KAAK,CAClBlT,EAAWF,CAAM,CAACoT,EAAM,CAC9B,GAAIlT,IAAaD,EAAU,CACvBD,CAAM,CAACoT,EAAM,CAAGnT,EAChB,IAAMoT,EAAWrT,CAAM,CAAC,IAAI,CAACqT,QAAQ,CAAC,CACd,YAApB,OAAOA,GACPA,EAASxJ,IAAI,CAAC7J,EAAQE,EAAUD,GAEpCgT,EAAYjT,GAAQK,MAAM,CAAC,IAAI,CAACjB,IAAI,CACxC,CAAC,AACL,CACJ,CACA,MAAMmU,UAAsC,EAAA5C,aAAa,CACrDzR,YAAYsU,CAAO,CAAEzB,CAAiB,CAAE0B,EAAoB,EAAK,CAAE,CAC/D,KAAK,CAACD,EAASzB,GACf,IAAI,CAACyB,OAAO,CAAGA,EACf,IAAI,CAACC,iBAAiB,CAAGA,EACzB,IAAI,CAACC,YAAY,CAAG,GACpB,IAAI,CAAC7C,UAAU,CAAG,GAClB,IAAI,CAAC8C,KAAK,CAAG,IAAI,CACjB,IAAI,CAACC,IAAI,CAAG,IAAI,CAChB,IAAI,CAACC,cAAc,CAAG,KAAK,EAC3B,IAAI,CAACrQ,YAAY,CAAG,KAAK,EACzB,IAAI,CAACsQ,QAAQ,CAAG,KAAK,EACrB,IAAI,CAACC,IAAI,CAAG,KAAK,CACrB,CACAC,QAAQhU,CAAM,CAAEiU,CAAO,CAAE,CACjB,IAAI,CAACP,YAAY,EAAI,AAAc,IAAI,GAAlB,IAAI,CAACE,IAAI,EAC9B,IAAI,CAACM,UAAU,GAEnB,IAAMC,EAAkBtB,EACxBA,EAAU,IAAI,CAACa,YAAY,CAAG,IAAI,CAAG,KAAK,CAAC,CAC3C,IAAI,CAACA,YAAY,CAAG,IAAI,CAACD,iBAAiB,CAC1C,IAAMW,EAAS,IAAI,CAACZ,OAAO,CAACxT,EAAQiU,GAEpC,OADApB,EAAUsB,EACHC,CACX,CACAF,YAAa,CACT,GAAI,AAAc,IAAI,GAAlB,IAAI,CAACN,IAAI,CAAW,CACpB,IAAIjM,EAAU,IAAI,CAACgM,KAAK,CACxB,KAAOhM,AAAY,KAAK,IAAjBA,GACHA,EAAQmM,QAAQ,CAAC1B,WAAW,CAAC,IAAI,CAAEzK,EAAQnE,YAAY,EACvDmE,EAAUA,EAAQoM,IAAI,AAE1B,KAAI,CAACH,IAAI,CAAG,IAAI,CAChB,IAAI,CAACF,YAAY,CAAG,IAAI,CAAC7C,UAAU,CAAG,EAC1C,CAAC,AACL,CACAyC,MAAMO,CAAc,CAAErQ,CAAY,CAAE,CAChC,IAAM6Q,EAAO,IAAI,CAACT,IAAI,CAChBE,EAAWb,EAAYY,GACvBlM,EAAU0M,AAAS,IAAI,GAAbA,EAAgB,IAAI,CAACV,KAAK,CAAG,CAAC,CAAC,CAK/C,GAJAhM,EAAQkM,cAAc,CAAGA,EACzBlM,EAAQnE,YAAY,CAAGA,EACvBmE,EAAQmM,QAAQ,CAAGA,EACnBA,EAAS/C,SAAS,CAAC,IAAI,CAAEvN,GACrB6Q,AAAS,IAAI,GAAbA,EAAe,CACf,GAAI,CAAC,IAAI,CAACX,YAAY,CAAE,CAIpB,IAAIY,EACJzB,EAAU,KAAK,EAEfyB,EAAYD,EAAKR,cAAc,CAACQ,EAAK7Q,YAAY,CAAC,CAElDqP,EAAU,IAAI,CACVgB,IAAmBS,GACnB,KAAI,CAACZ,YAAY,CAAG,EAAG,CAE/B,CAAC,AACDW,EAAKN,IAAI,CAAGpM,CAChB,CAAC,AACD,IAAI,CAACiM,IAAI,CAAGjM,CAChB,CACA2K,cAAe,CACP,IAAI,CAACzB,UAAU,GACf,IAAI,CAACA,UAAU,CAAG,GAClB9P,EAAY,IAAI,EAExB,CACA8I,MAAO,CACe,IAAI,GAAlB,IAAI,CAAC+J,IAAI,GACT,IAAI,CAAC/C,UAAU,CAAG,GAClB,IAAI,CAACxQ,MAAM,CAAC,IAAI,EAExB,CACAkU,SAAU,CACN,IAAIR,EAAO,IAAI,CAACJ,KAAK,CACrB,MAAO,CACHI,KAAM,IAAM,CACR,IAAMpM,EAAUoM,SAChB,AAAIpM,AAAY6M,KAAAA,IAAZ7M,EACO,CAAE3I,MAAO,KAAK,EAAGyV,KAAM,EAAK,GAGnCV,EAAOA,EAAKA,IAAI,CACT,CACH/U,MAAO2I,EACP8M,KAAM,EACV,EACH,AACL,EACA,CAACC,OAAOC,QAAQ,CAAC,CAAE,UAAY,CAC3B,OAAO,IAAI,AACf,CACJ,CACJ,CACJ,CACA,OAAOhW,OAAOC,MAAM,CAAC,CAKjBwS,wBAAwBwD,CAAO,CAAE,CAC7B5B,EAAsB4B,CAC1B,EAKA3B,YAAAA,EAMAzS,MAAMR,CAAM,CAAEwD,CAAY,CAAE,CACR,KAAK,IAAjBqP,GACAA,EAAQS,KAAK,CAACtT,EAAQwD,EAE9B,EAKAqR,eAAgB,CACI,KAAK,IAAjBhC,GACAA,CAAAA,EAAQa,YAAY,CAAG,EAAG,CAElC,EAMArT,OAAOL,CAAM,CAAEqS,CAAI,CAAE,CACjBY,EAAYjT,GAAQK,MAAM,CAACgS,EAC/B,EAOAjK,eAAepE,CAAM,CAAE8Q,CAAc,CAAE,CACL,UAA1B,OAAOA,GACPA,CAAAA,EAAiB,IAAI3B,EAA0B2B,EAAc,EAEjExR,EAAaU,GAAQ1C,IAAI,CAACwT,GAC1BzM,QAAQD,cAAc,CAACpE,EAAQ8Q,EAAe1V,IAAI,CAAE,CAChDkJ,WAAY,GACZ9F,IAAK,UAAY,CACb,OAAOsS,EAAexU,QAAQ,CAAC,IAAI,CACvC,EACA8C,IAAK,SAAUnD,CAAQ,CAAE,CACrB6U,EAAe/U,QAAQ,CAAC,IAAI,CAAEE,EAClC,CACJ,EACJ,EAMAqD,aAAAA,EAQAkQ,QAAAA,CAAQA,EAASzB,EAAmB0B,EAAoB,IAAI,CAACA,iBAAiB,CAACD,EAAQ,GAC5E,IAAID,EAA8BC,EAASzB,EAAmB0B,GAOzEA,kBAAAA,AAAkBD,GACPV,EAAciC,IAAI,CAACvB,EAAQ1I,QAAQ,GAElD,EACJ,GAyBMkK,EAAe,EAAA/N,IAAI,CAACC,OAAO,CAAC,EAAsB,IAAM,CAC1D,IAAIS,EAAU,IAAI,CAClB,MAAO,CACHnF,IAAAA,IACWmF,EAEXvE,IAAI6R,CAAK,CAAE,CACPtN,EAAUsN,CACd,CACJ,CACJ,EAKO,OAAMrC,EACT1T,aAAc,CAIV,IAAI,CAACwK,KAAK,CAAG,EAIb,IAAI,CAACjI,MAAM,CAAG,EAId,IAAI,CAAC6K,MAAM,CAAG,IAAI,CAIlB,IAAI,CAAC4I,aAAa,CAAG,IAAI,AAC7B,CAIA,IAAID,OAAQ,CACR,OAAOD,EAAaxS,GAAG,EAC3B,CAKA,IAAI2S,QAAS,CACT,OAAO,IAAI,CAACzL,KAAK,CAAG,GAAM,CAC9B,CAKA,IAAI0L,OAAQ,CACR,OAAO,IAAI,CAAC1L,KAAK,CAAG,GAAM,CAC9B,CAKA,IAAI2L,SAAU,CACV,OAAO,AAAe,IAAf,IAAI,CAAC3L,KAAK,AACrB,CAKA,IAAI4L,YAAa,CACb,MAAO,CAAC,IAAI,CAACD,OAAO,EAAI,CAAC,IAAI,CAACE,MAAM,AACxC,CAKA,IAAIA,QAAS,CACT,OAAO,IAAI,CAAC7L,KAAK,GAAK,IAAI,CAACjI,MAAM,CAAG,CACxC,CAMA,OAAO+T,SAASP,CAAK,CAAE,CACnBD,EAAa5R,GAAG,CAAC6R,EACrB,CACJ,CACA1U,EAAW6H,cAAc,CAACwK,EAAiB9S,SAAS,CAAE,SACtDS,EAAW6H,cAAc,CAACwK,EAAiB9S,SAAS,CAAE,UAK/C,IAAMkF,EAA0BrG,OAAO8W,IAAI,CAAC,IAAI7C,E,yKC1V1C,QAAO,W,OAAP8C,C,EA6CAzO,KAAI,W,OAAJA,C,EAkBAgH,WAAU,W,OAAVA,C,EAMGnP,sBAAqB,W,OAArBA,C,IArET,IAAM4W,EAAW,UAAY,CAChC,GAAI,AAAsB,aAAtB,OAAOC,WAEP,OAAOA,UAAW,CAEtB,GAAI,AAAkB,SAAX,EAAP,EAEA,OAAO,EAAP,EAEJ,GAAI,AAAgB,aAAhB,OAAOC,KAEP,OAAOA,IAAK,CAEhB,GAAI,AAAkB,aAAlB,OAAOC,OAEP,OAAOA,MAAO,CAElB,GAAI,CAIA,OAAO,AAAIC,SAAS,gBACxB,CACA,MAAOrD,EAAI,CAGP,MAAO,CAAC,CACZ,CACJ,GAE6B,MAAK,IAA9BiD,EAAQpL,YAAY,EACpBoL,CAAAA,EAAQpL,YAAY,CAAG,CAAEC,aAAc,CAACwL,EAAGC,IAAMA,CAAE,GAEvD,IAAMC,EAAa,CACfC,aAAc,GACd5N,WAAY,GACZ6N,SAAU,EACd,CACqB,MAAK,IAAtBT,EAAQzO,IAAI,EACZoB,QAAQD,cAAc,CAACsN,EAAS,OAAQ/W,OAAOqH,MAAM,CAAC,CAAEhH,MAAOL,OAAO4E,MAAM,CAAC,IAAI,CAAE,EAAG0S,IAMnF,IAAMhP,EAAOyO,EAAQzO,IAAI,CAChC,GAAIA,AAAiB,KAAK,IAAtBA,EAAKC,OAAO,CAAa,CACzB,IAAMkP,EAAUzX,OAAO4E,MAAM,CAAC,IAAI,EAClC8E,QAAQD,cAAc,CAACnB,EAAM,UAAWtI,OAAOqH,MAAM,CAAC,CAAEhH,MAAMqX,CAAE,CAAEC,CAAU,CAAE,CACtE,IAAIpD,EAAQkD,CAAO,CAACC,EAAG,CAIvB,OAHc,KAAK,IAAfnD,GACAA,CAAAA,EAAQoD,EAAcF,CAAO,CAACC,EAAG,CAAGC,IAAgB,IAAI,AAAD,EAEpDpD,CACX,CAAE,EAAG+C,GACb,CAAC,AAQM,IAAMhI,EAAatP,OAAOC,MAAM,CAAC,EAAE,EAMnC,SAASE,GAAwB,CACpC,IAAMyX,EAAiB,IAAItU,QAC3B,OAAO,SAAU+B,CAAM,CAAE,CACrB,IAAIwS,EAAWD,EAAe/T,GAAG,CAACwB,GAClC,GAAIwS,AAAa,KAAK,IAAlBA,EAAqB,CACrB,IAAIC,EAAgBpO,QAAQqO,cAAc,CAAC1S,GAC3C,KAAOwS,AAAa,KAAK,IAAlBA,GAAuBC,AAAkB,IAAI,GAAtBA,GAC1BD,EAAWD,EAAe/T,GAAG,CAACiU,GAC9BA,EAAgBpO,QAAQqO,cAAc,CAACD,GAE3CD,EAAWA,AAAa,KAAK,IAAlBA,EAAsB,EAAE,CAAGA,EAASvG,KAAK,CAAC,EAAE,CACvDsG,EAAenT,GAAG,CAACY,EAAQwS,EAC/B,CAAC,AACD,OAAOA,CACX,CACJ,C,4GCpFa,gB,oCAAAG,C,GAAN,OAAMA,EAKTC,WAAY,CACR,MAAO,EACX,CAKAC,gBAAiB,CAEjB,CACJ,C,4GCwBgB,O,oCAAAjK,C,8BAAT,SAASA,EAAIkK,CAAO,CAAE,GAAGC,CAAM,CAAE,CACpC,GAAM,CAAElT,OAAAA,CAAM,CAAEjB,UAAAA,CAAS,CAAE,CAAGoU,AA3ClC,SAAuBF,CAAO,CAAEC,CAAM,CAAE,CACpC,IAAMlT,EAAS,EAAE,CACboT,EAAY,GACVrU,EAAY,EAAE,CACpB,IAAK,IAAIrB,EAAI,EAAGC,EAAKsV,EAAQrV,MAAM,CAAG,EAAGF,EAAIC,EAAI,EAAED,EAAG,CAClD0V,GAAaH,CAAO,CAACvV,EAAE,CACvB,IAAIvC,EAAQ+X,CAAM,CAACxV,EAAE,CACrB,GAAIvC,aAAiB,EAAA2X,YAAY,CAAE,CAC/B,IAAM7R,EAAW9F,EAAM6X,cAAc,GACrC7X,EAAQA,EAAM4X,SAAS,GACnB9R,GACAlC,EAAUtB,IAAI,CAACwD,EAEvB,CAAC,AACG9F,aAAiB,EAAA8I,aAAa,EAAI9I,aAAiBmM,eAC1B,KAArB8L,EAAUC,IAAI,KACdrT,EAAOvC,IAAI,CAAC2V,GACZA,EAAY,IAEhBpT,EAAOvC,IAAI,CAACtC,IAGZiY,GAAajY,CAErB,CAKA,MAHyB,KAArBiY,AADJA,CAAAA,GAAaH,CAAO,CAACA,EAAQrV,MAAM,CAAG,EAAE,AAAD,EACzByV,IAAI,IACdrT,EAAOvC,IAAI,CAAC2V,GAET,CACHpT,OAAAA,EACAjB,UAAAA,CACJ,CACJ,EAUgDkU,EAASC,GAC/CI,EAAgB,EAAArP,aAAa,CAACvE,MAAM,CAACM,GAI3C,OAHIjB,EAAUnB,MAAM,EAChB0V,EAAcC,aAAa,IAAIxU,GAE5BuU,CACX,C,4GC9Ca,iB,oCAAArP,C,kBAAN,OAAMA,EACT5I,aAAc,CACV,IAAI,CAACmY,OAAO,CAAG,IAAIC,OACvB,CAEAhT,YAAYN,CAAM,CAAE,CAChB,IAAI,CAACqT,OAAO,CAACzW,GAAG,CAACoD,EACrB,CAEAS,iBAAiBT,CAAM,CAAE,CACrB,IAAI,CAACqT,OAAO,CAACxW,MAAM,CAACmD,EACxB,CAEAI,aAAaJ,CAAM,CAAE,CACjB,OAAO,IAAI,CAACqT,OAAO,CAAC1W,GAAG,CAACqD,EAC5B,CAKAoT,cAAc,GAAGxU,CAAS,CAAE,CAGxB,OAFA,IAAI,CAACA,SAAS,CACV,AAAmB,IAAI,GAAvB,IAAI,CAACA,SAAS,CAAYA,EAAY,IAAI,CAACA,SAAS,CAACwN,MAAM,CAACxN,EAAU,CACnE,IAAI,AACf,CACJ,CAcA,SAAS2U,EAAa1T,CAAM,CAAE,CAC1B,OAAOA,EACF2T,GAAG,CAAC,AAACC,GAAMA,aAAa3P,EAAgByP,EAAaE,EAAE5T,MAAM,EAAI,CAAC4T,EAAE,EACpEC,MAAM,CAAC,CAACrD,EAAMsD,IAAStD,EAAKjE,MAAM,CAACuH,GAAO,EAAE,CACrD,CACA,SAASC,EAAgB/T,CAAM,CAAE,CAC7B,OAAOA,EACF2T,GAAG,CAAC,AAACC,GAAOA,aAAa3P,EAAgB2P,EAAE7U,SAAS,CAAG,IAAI,EAC3D8U,MAAM,CAAC,CAACrD,EAAMsD,IACf,AAAIA,AAAS,IAAI,GAAbA,EACOtD,GAEE,IAAI,GAAbA,GACAA,CAAAA,EAAO,EAAE,AAAD,EAELA,EAAKjE,MAAM,CAACuH,GALH,CAMjB,IAAI,CACX,CA3BA7P,EAAcvE,MAAM,CAAI,AAAC,KAAK,CAC1B,GAAI,EAAAzC,GAAG,CAACkK,0BAA0B,CAAE,CAChC,IAAM6M,EAAkB,IAAIjT,IAC5B,OAAO,AAACf,GAER,IAAIiU,EAAyBjU,EAAQgU,EACzC,CAAC,AAED,OAAO,AAAChU,GAAW,IAAIkU,EAAmBlU,EAC9C,I,OAyBaiU,UAAiChQ,EAC1C5I,YAAY2E,CAAM,CAAEgU,CAAe,CAAE,CACjC,KAAK,GACL,IAAI,CAAChU,MAAM,CAAGA,EACd,IAAI,CAACgU,eAAe,CAAGA,EACvB,IAAI,CAACG,YAAY,CAAG,KAAK,EACzB,IAAI,CAACpV,SAAS,CAAGgV,EAAgB/T,EACrC,CACA,IAAIoU,aAAc,CACd,GAAI,AAAsB,KAAK,IAA3B,IAAI,CAACD,YAAY,CAAa,CAC9B,IAAMnU,EAAS,IAAI,CAACA,MAAM,CACpBgU,EAAkB,IAAI,CAACA,eAAe,AAC5C,KAAI,CAACG,YAAY,CAAGT,EAAa1T,GAAQ2T,GAAG,CAAC,AAACC,GAAM,CAChD,GAAIA,aAAatM,cACb,OAAOsM,CAAE,CAEb,IAAIS,EAAQL,EAAgBrV,GAAG,CAACiV,GAMhC,OALc,KAAK,IAAfS,IAEAA,AADAA,CAAAA,EAAQ,IAAI/M,aAAc,EACpBgN,WAAW,CAACV,GAClBI,EAAgBzU,GAAG,CAACqU,EAAGS,IAEpBA,CACX,EACJ,CAAC,AACD,OAAO,IAAI,CAACF,YAAY,AAC5B,CACA1T,YAAYN,CAAM,CAAE,CAChBA,EAAOkH,kBAAkB,CAAG,IAAIlH,EAAOkH,kBAAkB,IAAK,IAAI,CAAC+M,WAAW,CAAC,CAC/E,KAAK,CAAC3T,WAAW,CAACN,EACtB,CACAS,iBAAiBT,CAAM,CAAE,CACrB,IAAMoU,EAAe,IAAI,CAACH,WAAW,AACrCjU,CAAAA,EAAOkH,kBAAkB,CAAGlH,EAAOkH,kBAAkB,CAACmN,MAAM,CAAC,AAACZ,GAAMW,AAA4B,KAA5BA,EAAajG,OAAO,CAACsF,IACzF,KAAK,CAAChT,gBAAgB,CAACT,EAC3B,C,CAEJ,IAAIsU,EAAe,C,OAONP,UAA2BjQ,EACpC5I,YAAY2E,CAAM,CAAE,CAChB,KAAK,GACL,IAAI,CAACA,MAAM,CAAGA,EACd,IAAI,CAACjB,SAAS,CAAG,IAAI,CACrB,IAAI,CAACA,SAAS,CAAGgV,EAAgB/T,GACjC,IAAI,CAACoU,WAAW,CAAGV,EAAa1T,GAChC,IAAI,CAAC0U,UAAU,CAZZ,CAAC,iBAAiB,EAAE,EAAED,EAAa,CAAC,AAa3C,CACAhU,YAAYN,CAAM,CAAE,CAChB,IAAMiU,EAAc,IAAI,CAACA,WAAW,CAC9BM,EAAa,IAAI,CAACA,UAAU,CAClCvU,EAAS,IAAI,CAACwU,eAAe,CAACxU,GAC9B,IAAK,IAAIzC,EAAI,EAAGA,EAAI0W,EAAYxW,MAAM,CAAEF,IAAK,CACzC,IAAMb,EAAUuK,SAASwN,aAAa,CAAC,QACvC/X,CAAAA,EAAQgY,SAAS,CAAGT,CAAW,CAAC1W,EAAE,CAClCb,EAAQiY,SAAS,CAAGJ,EACpBvU,EAAOG,MAAM,CAACzD,EAClB,CACA,KAAK,CAAC4D,WAAW,CAACN,EACtB,CACAS,iBAAiBT,CAAM,CAAE,CACrBA,EAAS,IAAI,CAACwU,eAAe,CAACxU,GAC9B,IAAMH,EAASG,EAAO4U,gBAAgB,CAAC,CAAC,CAAC,EAAE,IAAI,CAACL,UAAU,CAAC,CAAC,EAC5D,IAAK,IAAIhX,EAAI,EAAGC,EAAKqC,EAAOpC,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAC1CyC,EAAOQ,WAAW,CAACX,CAAM,CAACtC,EAAE,EAEhC,KAAK,CAACkD,gBAAgB,CAACT,EAC3B,CACAI,aAAaJ,CAAM,CAAE,CACjB,OAAO,KAAK,CAACI,YAAY,CAAC,IAAI,CAACoU,eAAe,CAACxU,GACnD,CACAwU,gBAAgBxU,CAAM,CAAE,CACpB,OAAOA,IAAWiH,SAAWA,SAAS4N,IAAI,CAAG7U,CAAM,AACvD,C,2KCRS8U,qBAAoB,W,OAApBA,C,EA0EAC,gBAAe,W,OAAfA,C,wCAjNb,SAASC,EAAWhZ,CAAM,CAAEiU,CAAO,CAAE,CACjC,IAAI,CAACjU,MAAM,CAAGA,EACd,IAAI,CAACiU,OAAO,CAAGA,EACc,IAAI,GAA7B,IAAI,CAACgF,eAAe,EACpB,KAAI,CAACA,eAAe,CAAG,EAAA1Y,UAAU,CAACiT,OAAO,CAAC,IAAI,CAACA,OAAO,CAAE,IAAI,CAAE,IAAI,CAAC0F,iBAAiB,GAExF,IAAI,CAACC,YAAY,CAAC,IAAI,CAACF,eAAe,CAACjF,OAAO,CAAChU,EAAQiU,GAC3D,CACA,SAASmF,EAAYpZ,CAAM,CAAEiU,CAAO,CAAE,CAClC,IAAI,CAACjU,MAAM,CAAGA,EACd,IAAI,CAACiU,OAAO,CAAGA,EACf,IAAI,CAACjQ,MAAM,CAACqV,gBAAgB,CAAC,IAAI,CAACC,UAAU,CAAE,IAAI,CACtD,CACA,SAASC,GAAe,CACpB,IAAI,CAACN,eAAe,CAAC/E,UAAU,GAC/B,IAAI,CAAClU,MAAM,CAAG,IAAI,CAClB,IAAI,CAACiU,OAAO,CAAG,IAAI,AACvB,CACA,SAASuF,GAAgB,CACrB,IAAI,CAACP,eAAe,CAAC/E,UAAU,GAC/B,IAAI,CAAClU,MAAM,CAAG,IAAI,CAClB,IAAI,CAACiU,OAAO,CAAG,IAAI,CACnB,IAAMhR,EAAO,IAAI,CAACe,MAAM,CAACyV,SAAS,AACrB,MAAK,IAAdxW,GAAmBA,EAAKyW,UAAU,GAClCzW,EAAKmC,MAAM,GACXnC,EAAK0W,aAAa,CAAG,GAE7B,CACA,SAASC,GAAgB,CACrB,IAAI,CAAC5V,MAAM,CAAC6V,mBAAmB,CAAC,IAAI,CAACP,UAAU,CAAE,IAAI,EACrD,IAAI,CAACtZ,MAAM,CAAG,IAAI,CAClB,IAAI,CAACiU,OAAO,CAAG,IAAI,AACvB,CACA,SAAS6F,EAAsB9a,CAAK,CAAE,CAClC,EAAA8B,GAAG,CAACG,YAAY,CAAC,IAAI,CAAC+C,MAAM,CAAE,IAAI,CAACsV,UAAU,CAAEta,EACnD,CACA,SAAS+a,EAA6B/a,CAAK,CAAE,CACzC,EAAA8B,GAAG,CAACI,mBAAmB,CAAC,IAAI,CAAC8C,MAAM,CAAE,IAAI,CAACsV,UAAU,CAAEta,EAC1D,CACA,SAASgb,EAAoBhb,CAAK,CAAE,CAOhC,SAJIA,GACAA,CAAAA,EAAQ,EAAC,EAGTA,EAAMuE,MAAM,CAAE,CACd,IAAI,CAACS,MAAM,CAACiW,WAAW,CAAG,GAC1B,IAAIhX,EAAO,IAAI,CAACe,MAAM,CAACyV,SAAS,AAG5BxW,AAAS,MAAK,IAAdA,EACAA,EAAOjE,EAAMuE,MAAM,GAOf,IAAI,CAACS,MAAM,CAACkW,aAAa,GAAKlb,IAC1BiE,EAAKyW,UAAU,GACfzW,EAAKkX,MAAM,GACXlX,EAAKmC,MAAM,IAEfnC,EAAOjE,EAAMuE,MAAM,IAKtBN,EAAKyW,UAAU,CAOXzW,EAAK0W,aAAa,GACvB1W,EAAK0W,aAAa,CAAG,GACrB1W,EAAK8B,IAAI,CAAC,IAAI,CAAC/E,MAAM,CAAE,IAAI,CAACiU,OAAO,IARnChR,EAAKyW,UAAU,CAAG,GAClBzW,EAAK8B,IAAI,CAAC,IAAI,CAAC/E,MAAM,CAAE,IAAI,CAACiU,OAAO,EACnChR,EAAKmX,YAAY,CAAC,IAAI,CAACpW,MAAM,EAC7B,IAAI,CAACA,MAAM,CAACyV,SAAS,CAAGxW,EACxB,IAAI,CAACe,MAAM,CAACkW,aAAa,CAAGlb,EAMpC,KACK,CACD,IAAMiE,EAAO,IAAI,CAACe,MAAM,CAACyV,SAAS,AAGrB,MAAK,IAAdxW,GAAmBA,EAAKyW,UAAU,GAClCzW,EAAKyW,UAAU,CAAG,GAClBzW,EAAKkX,MAAM,GACPlX,EAAK0W,aAAa,CAClB1W,EAAK0W,aAAa,CAAG,GAGrB1W,EAAKmC,MAAM,IAGnB,IAAI,CAACpB,MAAM,CAACiW,WAAW,CAAGjb,CAC9B,CAAC,AACL,CACA,SAASqb,EAAqBrb,CAAK,CAAE,CACjC,IAAI,CAACgF,MAAM,CAAC,IAAI,CAACsV,UAAU,CAAC,CAAGta,CACnC,CACA,SAASsb,EAAkBtb,CAAK,CAAE,CAC9B,IAAMub,EAAgB,IAAI,CAACA,aAAa,EAAI5b,OAAO4E,MAAM,CAAC,IAAI,EACxDS,EAAS,IAAI,CAACA,MAAM,CACtBwW,EAAU,IAAI,CAACA,OAAO,EAAI,EAE9B,GAAIxb,MAAAA,GAAyCA,EAAMyC,MAAM,CAAE,CACvD,IAAMgZ,EAAQzb,EAAM0b,KAAK,CAAC,OAC1B,IAAK,IAAInZ,EAAI,EAAGC,EAAKiZ,EAAMhZ,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAAG,CAC5C,IAAMoZ,EAAcF,CAAK,CAAClZ,EAAE,CACR,KAAhBoZ,IAGJJ,CAAa,CAACI,EAAY,CAAGH,EAC7BxW,EAAO4W,SAAS,CAACha,GAAG,CAAC+Z,GACzB,CACJ,CAAC,AAID,GAHA,IAAI,CAACJ,aAAa,CAAGA,EACrB,IAAI,CAACC,OAAO,CAAGA,EAAU,EAErBA,AAAY,IAAZA,EAKJ,IAAK,IAAMpb,KADXob,GAAW,EACQD,EACXA,CAAa,CAACnb,EAAK,GAAKob,GACxBxW,EAAO4W,SAAS,CAACT,MAAM,CAAC/a,EANrB,AASf,CAKO,MAAM0Z,UAA6B,EAAA+B,qBAAqB,CAK3D3b,YAAYsU,CAAO,CAAE,CACjB,KAAK,GACL,IAAI,CAACA,OAAO,CAAGA,EACf,IAAI,CAACzO,IAAI,CAAGiU,EACZ,IAAI,CAAC5T,MAAM,CAAGmU,EACd,IAAI,CAACJ,YAAY,CAAGW,EACpB,IAAI,CAACZ,iBAAiB,CAAG,EAAA3Y,UAAU,CAACkT,iBAAiB,CAAC,IAAI,CAACD,OAAO,CACtE,CAKA,IAAI8F,YAAa,CACb,OAAO,IAAI,CAACwB,kBAAkB,AAClC,CACA,IAAIxB,WAAWta,CAAK,CAAE,CAElB,GADA,IAAI,CAAC8b,kBAAkB,CAAG9b,EACtBA,AAAU,KAAK,IAAfA,EAGJ,OAAQA,CAAK,CAAC,EAAE,EACZ,IAAK,IAGD,GAFA,IAAI,CAAC+b,iBAAiB,CAAG/b,EAAMgc,MAAM,CAAC,GACtC,IAAI,CAAC7B,YAAY,CAAGkB,EAChB,AAA2B,cAA3B,IAAI,CAACU,iBAAiB,CAAkB,CACxC,IAAMvH,EAAU,IAAI,CAACA,OAAO,AAC5B,KAAI,CAACA,OAAO,CAAG,CAACyH,EAAGC,IAAM,EAAApa,GAAG,CAAC0J,UAAU,CAACgJ,EAAQyH,EAAGC,GACvD,CAAC,AACD,KAAM,AACV,KAAK,IACD,IAAI,CAACH,iBAAiB,CAAG/b,EAAMgc,MAAM,CAAC,GACtC,IAAI,CAAC7B,YAAY,CAAGY,EACpB,KAAM,AACV,KAAK,IACD,IAAI,CAACgB,iBAAiB,CAAG/b,EAAMgc,MAAM,CAAC,GACtC,IAAI,CAACjW,IAAI,CAAGqU,EACZ,IAAI,CAAChU,MAAM,CAAGwU,EACd,KAAM,AACV,SACI,IAAI,CAACmB,iBAAiB,CAAG/b,EACX,UAAVA,GACA,KAAI,CAACma,YAAY,CAAGmB,CAAgB,CAGhD,CA1BW,AA2Bf,CAKAa,iBAAkB,CACd,IAAI,CAAChC,YAAY,CAAGa,EACpB,IAAI,CAAC5U,MAAM,CAAGoU,CAClB,CAMA3C,eAAe7S,CAAM,CAAE,CAEnB,OAAO,IAAI+U,EAAgB/U,EAAQ,IAAI,CAACwP,OAAO,CAAE,IAAI,CAAC0F,iBAAiB,CAAE,IAAI,CAACnU,IAAI,CAAE,IAAI,CAACK,MAAM,CAAE,IAAI,CAAC+T,YAAY,CAAE,IAAI,CAAC4B,iBAAiB,CAC9I,CACJ,CAMO,MAAMhC,EAWT7Z,YAAY8E,CAAM,CAAEwP,CAAO,CAAE0F,CAAiB,CAAEnU,CAAI,CAAEK,CAAM,CAAE+T,CAAY,CAAEG,CAAU,CAAE,CAEpF,IAAI,CAACtZ,MAAM,CAAG,IAAI,CAElB,IAAI,CAACiU,OAAO,CAAG,IAAI,CAEnB,IAAI,CAACgF,eAAe,CAAG,IAAI,CAC3B,IAAI,CAACjV,MAAM,CAAGA,EACd,IAAI,CAACwP,OAAO,CAAGA,EACf,IAAI,CAAC0F,iBAAiB,CAAGA,EACzB,IAAI,CAACnU,IAAI,CAAGA,EACZ,IAAI,CAACK,MAAM,CAAGA,EACd,IAAI,CAAC+T,YAAY,CAAGA,EACpB,IAAI,CAACG,UAAU,CAAGA,CACtB,CAEAhH,cAAe,CACX,IAAI,CAAC6G,YAAY,CAAC,IAAI,CAACF,eAAe,CAACjF,OAAO,CAAC,IAAI,CAAChU,MAAM,CAAE,IAAI,CAACiU,OAAO,EAC5E,CAEAmH,YAAYnG,CAAK,CAAE,CACf,EAAArC,gBAAgB,CAAC4C,QAAQ,CAACP,GAC1B,IAAMb,EAAS,IAAI,CAACZ,OAAO,CAAC,IAAI,CAACxT,MAAM,CAAE,IAAI,CAACiU,OAAO,EACrD,EAAArB,gBAAgB,CAAC4C,QAAQ,CAAC,IAAI,EACf,KAAXpB,GACAa,EAAMoG,cAAc,EAE5B,CACJ,C,4GCjHgB,mB,oCAAAC,C,8BAxIhB,IAAIC,EAAgB,IAAI,AACxB,OAAMC,EACFC,WAAW7G,CAAO,CAAE,CAChBA,EAAQ8G,WAAW,CAAG,IAAI,CAACA,WAAW,CACtC,IAAI,CAACC,iBAAiB,CAACra,IAAI,CAACsT,EAChC,CACAgH,sBAAsBC,CAAS,CAAE,CAC7BA,EAAUV,eAAe,GACzB,IAAI,CAACM,UAAU,CAACI,EACpB,CACA3K,OAAQ,CACJ,IAAI,CAACyK,iBAAiB,CAAG,EAAE,CAC3B,IAAI,CAACD,WAAW,CAAG,EACvB,CACAI,SAAU,CAENP,EAAgB,IAAI,AACxB,CACA,OAAOQ,OAAOC,CAAU,CAAE,CACtB,IAAMC,EAAYV,GAAiB,IAAIC,EAIvC,OAHAS,EAAUD,UAAU,CAAGA,EACvBC,EAAU/K,KAAK,GACfqK,EAAgB,IAAI,CACbU,CACX,CACJ,CAyBA,IAAMC,EAAyB,mBAAiB,CAACza,MAAM,CACvD,SAAS0a,EAAalI,CAAO,CAAEjV,CAAK,CAAE,CAClC,IAAMod,EAAapd,EAAM0b,KAAK,CAAC,qBAAmB,EAClD,GAAI0B,AAAsB,IAAtBA,EAAW3a,MAAM,CACjB,OAAO,IAAI,AAAC,CAEhB,IAAM4a,EAAe,EAAE,CACvB,IAAK,IAAI9a,EAAI,EAAGC,EAAK4a,EAAW3a,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAAG,KAG7C+a,EAFJ,IAAM3U,EAAUyU,CAAU,CAAC7a,EAAE,CACvBmI,EAAQ/B,EAAQwK,OAAO,CAAC,mBAAiB,EAE/C,GAAIzI,AAAU,KAAVA,EACA4S,EAAU3U,MAET,CACD,IAAM4U,EAAiB3Q,SAASjE,EAAQoD,SAAS,CAAC,EAAGrB,IACrD2S,EAAa/a,IAAI,CAAC2S,EAAQ+H,UAAU,CAACO,EAAe,EACpDD,EAAU3U,EAAQoD,SAAS,CAACrB,EAAQwS,EACxC,CAAC,AACe,KAAZI,GACAD,EAAa/a,IAAI,CAACgb,EAE1B,CACA,OAAOD,CACX,CACA,SAASG,EAAkBvI,CAAO,CAAE1I,CAAI,CAAEkR,EAAqB,EAAK,CAAE,CAClE,IAAMpb,EAAakK,EAAKlK,UAAU,CAClC,IAAK,IAAIE,EAAI,EAAGC,EAAKH,EAAWI,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAAG,CACjD,IAAMmb,EAAOrb,CAAU,CAACE,EAAE,CACpBob,EAAYD,EAAK1d,KAAK,CACtB4d,EAAcT,EAAalI,EAAS0I,GACtCvI,EAAS,IAAI,AACbwI,CAAgB,IAAI,GAApBA,EACIH,GAEArI,CAAAA,AADAA,CAAAA,EAAS,IAAI,EAAA0E,oBAAoB,CAAC,IAAM6D,EAAS,EAC1CrD,UAAU,CAAGoD,EAAKtd,IAAI,AAAD,EAIhCgV,EAASyI,AA/DrB,SAAgCC,CAAK,CAAE,KAI/BxD,EAHJ,GAAIwD,AAAiB,IAAjBA,EAAMrb,MAAM,CACZ,OAAOqb,CAAK,CAAC,EAAE,AAAC,CAGpB,IAAMC,EAAYD,EAAMrb,MAAM,CACxBub,EAAaF,EAAMtF,GAAG,CAAC,AAACC,GAC1B,AAAI,AAAa,UAAb,OAAOA,EACA,IAAMA,GAEjB6B,EAAa7B,EAAE6B,UAAU,EAAIA,EACtB7B,EAAEjE,OAAO,CAHG,EAKjBA,EAAU,CAACyJ,EAAOhJ,IAAY,CAChC,IAAIiJ,EAAS,GACb,IAAK,IAAI3b,EAAI,EAAGA,EAAIwb,EAAW,EAAExb,EAC7B2b,GAAUF,CAAU,CAACzb,EAAE,CAAC0b,EAAOhJ,GAEnC,OAAOiJ,CACX,EACMrB,EAAY,IAAI,EAAA/C,oBAAoB,CAACtF,GAE3C,OADAqI,EAAUvC,UAAU,CAAGA,EAChBuC,CACX,EAwC4Ce,GAErB,IAAI,GAAfxI,IACA7I,EAAK4R,mBAAmB,CAACT,GACzBnb,IACAC,IACAyS,EAAQwH,UAAU,CAACrH,GAE3B,CACJ,CAsCO,SAASkH,EAAgB3X,CAAQ,CAAEqY,CAAU,CAAE,KAS9CzQ,EARJ,IAAMmB,EAAW/I,EAASyZ,OAAO,CAEjCnS,SAASoS,SAAS,CAAC3Q,GACnB,IAAMuH,EAAUuH,EAAmBO,MAAM,CAACC,GAC1CQ,EAAkBvI,EAAStQ,EAAU,IACrC,IAAM2Z,EAAwBrJ,EAAQ0H,iBAAiB,CACvD1H,EAAQ/C,KAAK,GACb,IAAMqM,EAAS,EAAAzc,GAAG,CAAC2L,oBAAoB,CAACC,GAExC,KAAQnB,EAAOgS,EAAOC,QAAQ,IAE1B,OADAvJ,EAAQyH,WAAW,GACXnQ,EAAKC,QAAQ,EACjB,KAAK,EACDgR,EAAkBvI,EAAS1I,GAC3B,KAAM,AACV,MAAK,GACDkS,AAtDhB,SAAwBxJ,CAAO,CAAE1I,CAAI,CAAEgS,CAAM,CAAE,CAC3C,IAAMX,EAAcT,EAAalI,EAAS1I,EAAK0O,WAAW,EAC1D,GAAI2C,AAAgB,IAAI,GAApBA,EAAsB,CACtB,IAAIc,EAAWnS,EACf,IAAK,IAAIhK,EAAI,EAAGC,EAAKob,EAAYnb,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAAG,CAClD,IAAMoc,EAAcf,CAAW,CAACrb,EAAE,CAC5Bqc,EAAcrc,AAAM,IAANA,EACdgK,EACAmS,EAASG,UAAU,CAACzD,YAAY,CAACnP,SAAS6S,cAAc,CAAC,IAAKJ,EAASK,WAAW,CAAC,AACrF,CAAuB,UAAvB,OAAOJ,EACPC,EAAY3D,WAAW,CAAG0D,GAG1BC,EAAY3D,WAAW,CAAG,IAC1BhG,EAAQ2H,qBAAqB,CAAC+B,IAElCD,EAAWE,EACX3J,EAAQyH,WAAW,GACfkC,IAAgBrS,GAChBgS,EAAOC,QAAQ,EAEvB,CACAvJ,EAAQyH,WAAW,EACvB,CAAC,AACL,EA8B+BzH,EAAS1I,EAAMgS,GAC9B,KAAM,AACV,MAAK,EACG,EAAAzc,GAAG,CAACwK,QAAQ,CAACC,IACb0I,EAAQwH,UAAU,CAACO,CAAU,CAAC,EAAAlb,GAAG,CAAC6K,+BAA+B,CAACJ,GAAM,CAEpF,CAEJ,IAAIyS,EAAe,EAMnB,GAAAld,GAAG,CAACwK,QAAQ,CAACoB,EAASF,UAAU,GAI3BE,AAA+B,IAA/BA,EAASuR,UAAU,CAACxc,MAAM,EAAUua,EAAWva,MAAM,AAAD,IACrDiL,EAAS0N,YAAY,CAACnP,SAASiT,aAAa,CAAC,IAAKxR,EAASF,UAAU,EACrEwR,EAAe,IAEnB,IAAMG,EAAwBlK,EAAQ0H,iBAAiB,CAEvD,OADA1H,EAAQ6H,OAAO,GACR,CACHpP,SAAAA,EACAyR,sBAAAA,EACAb,sBAAAA,EACAU,aAAAA,CACJ,CACJ,C,yKCpLaI,cAAa,W,OAAbA,C,EAYAvD,sBAAqB,W,OAArBA,C,kBAZN,OAAMuD,EACTlf,aAAc,CAIV,IAAI,CAACwc,WAAW,CAAG,CACvB,CACJ,CAKO,MAAMb,UAA8BuD,EACvClf,aAAc,CACV,KAAK,IAAI0S,WAKT,IAAI,CAACyM,iBAAiB,CAAG,EAAAvd,GAAG,CAACgL,8BAA8B,AAC/D,CACJ,C,0KCHawS,eAAc,W,OAAdA,C,EAwMAC,gBAAe,W,OAAfA,C,EAqCGC,OAAM,W,OAANA,C,wEA9PhB,IAAMC,EAAuB9f,OAAOC,MAAM,CAAC,CACvC8f,YAAa,GACbC,QAAS,EACb,GACA,SAASC,EAAuB3b,CAAI,CAAE4b,CAAK,CAAEnV,CAAK,CAAEuK,CAAO,CAAE,CACzDhR,EAAK8B,IAAI,CAAC8Z,CAAK,CAACnV,EAAM,CAAEuK,EAC5B,CACA,SAAS6K,EAAoB7b,CAAI,CAAE4b,CAAK,CAAEnV,CAAK,CAAEuK,CAAO,CAAE,CACtD,IAAM8K,EAAepgB,OAAO4E,MAAM,CAAC0Q,EACnC8K,CAAAA,EAAarV,KAAK,CAAGA,EACrBqV,EAAatd,MAAM,CAAGod,EAAMpd,MAAM,CAClCwB,EAAK8B,IAAI,CAAC8Z,CAAK,CAACnV,EAAM,CAAEqV,EAC5B,CAKO,MAAMT,EAUTpf,YAAY8f,CAAQ,CAAEC,CAAY,CAAEC,CAAsB,CAAEC,CAAe,CAAEC,CAAyB,CAAEvZ,CAAO,CAAE,CAC7G,IAAI,CAACmZ,QAAQ,CAAGA,EAChB,IAAI,CAACC,YAAY,CAAGA,EACpB,IAAI,CAACE,eAAe,CAAGA,EACvB,IAAI,CAACtZ,OAAO,CAAGA,EACf,IAAI,CAAC7F,MAAM,CAAG,IAAI,CAClB,IAAI,CAACqf,KAAK,CAAG,EAAE,CACf,IAAI,CAACR,KAAK,CAAG,IAAI,CACjB,IAAI,CAACS,aAAa,CAAG,IAAI,CACzB,IAAI,CAACC,eAAe,CAAG,KAAK,EAC5B,IAAI,CAACR,YAAY,CAAG,KAAK,EACzB,IAAI,CAACS,QAAQ,CAAGZ,EAChB,IAAI,CAACa,oBAAoB,CAAG,EAAAlf,UAAU,CAACiT,OAAO,CAACyL,EAAc,IAAI,CAAEC,GACnE,IAAI,CAACQ,uBAAuB,CAAG,EAAAnf,UAAU,CAACiT,OAAO,CAAC2L,EAAiB,IAAI,CAAEC,GACrEvZ,EAAQ6Y,WAAW,EACnB,KAAI,CAACc,QAAQ,CAAGV,CAAkB,CAE1C,CAMA/Z,KAAK/E,CAAM,CAAEiU,CAAO,CAAE,CAClB,IAAI,CAACjU,MAAM,CAAGA,EACd,IAAI,CAACuf,eAAe,CAAGtL,EACvB,IAAI,CAAC8K,YAAY,CAAGpgB,OAAO4E,MAAM,CAAC0Q,GAClC,IAAI,CAAC8K,YAAY,CAACzS,MAAM,CAAGtM,EAC3B,IAAI,CAAC+e,YAAY,CAAC7J,aAAa,CAAG,IAAI,CAACqK,eAAe,CACtD,IAAI,CAACV,KAAK,CAAG,IAAI,CAACY,oBAAoB,CAACzL,OAAO,CAAChU,EAAQ,IAAI,CAACuf,eAAe,EAC3E,IAAI,CAAC5b,QAAQ,CAAG,IAAI,CAAC+b,uBAAuB,CAAC1L,OAAO,CAAChU,EAAQ,IAAI,CAACuf,eAAe,EACjF,IAAI,CAACI,YAAY,CAAC,IAClB,IAAI,CAACC,eAAe,EACxB,CAKAxa,QAAS,CACL,IAAI,CAACpF,MAAM,CAAG,IAAI,CAClB,IAAI,CAAC6e,KAAK,CAAG,IAAI,CACU,IAAI,GAA3B,IAAI,CAACS,aAAa,EAClB,IAAI,CAACA,aAAa,CAAClN,WAAW,CAAC,IAAI,EAEvC,IAAI,CAACyN,cAAc,GACnB,IAAI,CAACJ,oBAAoB,CAACvL,UAAU,GACpC,IAAI,CAACwL,uBAAuB,CAACxL,UAAU,EAC3C,CAEA5B,aAAatS,CAAM,CAAEqS,CAAI,CAAE,CACnBrS,IAAW,IAAI,CAACif,YAAY,EAC5B,IAAI,CAACJ,KAAK,CAAG,IAAI,CAACY,oBAAoB,CAACzL,OAAO,CAAC,IAAI,CAAChU,MAAM,CAAE,IAAI,CAACuf,eAAe,EAChF,IAAI,CAACI,YAAY,GACjB,IAAI,CAACC,eAAe,IAEf5f,IAAW,IAAI,CAACmf,eAAe,EACpC,IAAI,CAACxb,QAAQ,CAAG,IAAI,CAAC+b,uBAAuB,CAAC1L,OAAO,CAAC,IAAI,CAAChU,MAAM,CAAE,IAAI,CAACuf,eAAe,EACtF,IAAI,CAACK,eAAe,CAAC,KAGrB,IAAI,CAACE,WAAW,CAACzN,EAEzB,CACAsN,aAAa1a,EAAQ,EAAK,CAAE,CACxB,GAAI,CAAC,IAAI,CAAC4Z,KAAK,CAAE,CACb,IAAI,CAACA,KAAK,CAAG,EAAA5Q,UAAU,CACvB,MACJ,CAAC,AACD,IAAM8R,EAAc,IAAI,CAACT,aAAa,CAChCU,EAAe,IAAI,CAACV,aAAa,CAAG,EAAA/e,UAAU,CAAC0S,WAAW,CAAC,IAAI,CAAC4L,KAAK,EACrEoB,EAAiBF,IAAgBC,EACnCC,GAAkBF,AAAgB,IAAI,GAApBA,GAClBA,EAAY3N,WAAW,CAAC,IAAI,EAE5B6N,CAAAA,GAAkBhb,CAAI,GACtB+a,EAAYjP,SAAS,CAAC,IAAI,CAElC,CACA+O,YAAYjR,CAAO,CAAE,CACjB,IAAMkQ,EAAe,IAAI,CAACA,YAAY,CAChCM,EAAQ,IAAI,CAACA,KAAK,CAClBG,EAAW,IAAI,CAACA,QAAQ,CACxBX,EAAQ,IAAI,CAACA,KAAK,CAClBlb,EAAW,IAAI,CAACA,QAAQ,CACxBgb,EAAU,IAAI,CAAC9Y,OAAO,CAAC8Y,OAAO,CAC9BuB,EAAgB,EAAE,CACpBC,EAAgB,EAChBC,EAAiB,EACrB,IAAK,IAAI7e,EAAI,EAAGC,EAAKqN,EAAQpN,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAAG,CAC9C,IAAMgM,EAASsB,CAAO,CAACtN,EAAE,CACnByL,EAAUO,EAAOP,OAAO,CAC1BqT,EAAc,EACdC,EAAW/S,EAAO7D,KAAK,CACrB6W,EAAMD,EAAW/S,EAAON,UAAU,CAClCuT,EAAenB,EAAM9R,MAAM,CAACA,EAAO7D,KAAK,CAAEsD,EAAQvL,MAAM,EACxDgf,EAAuBL,EACzBF,EAAcze,MAAM,CAAG+e,EAAa/e,MAAM,CAC9C,KAAO6e,EAAWC,EAAK,EAAED,EAAU,KAG3Brd,EAFJ,IAAMyd,EAAWrB,CAAK,CAACiB,EAAS,CAC1BtB,EAAW0B,EAAWA,EAASlU,UAAU,CAAG,IAAI,CAACwS,QAAQ,AAE3DL,CAAAA,GAAWyB,EAAiB,GACxBC,GAAeI,GAAuBD,EAAa/e,MAAM,CAAG,GAC5DwB,EAAOud,CAAY,CAACH,EAAY,CAChCA,MAGApd,EAAOid,CAAa,CAACC,EAAc,CACnCA,KAEJC,KAGAnd,EAAOU,EAASJ,MAAM,GAE1B8b,EAAM9R,MAAM,CAAC+S,EAAU,EAAGrd,GAC1Buc,EAASvc,EAAM4b,EAAOyB,EAAUvB,GAChC9b,EAAKmX,YAAY,CAAC4E,EACtB,CACIwB,CAAY,CAACH,EAAY,EACzBH,EAAc5e,IAAI,IAAIkf,EAAavQ,KAAK,CAACoQ,GAEjD,CACA,IAAK,IAAI9e,EAAI4e,EAAe3e,EAAK0e,EAAcze,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAC7D2e,CAAa,CAAC3e,EAAE,CAAC+E,OAAO,GAE5B,GAAI,IAAI,CAACT,OAAO,CAAC6Y,WAAW,CACxB,IAAK,IAAInd,EAAI,EAAGC,EAAK6d,EAAM5d,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAAG,CAC5C,IAAMof,EAAiBtB,CAAK,CAAC9d,EAAE,CAAC0S,OAAO,AACvC0M,CAAAA,EAAelf,MAAM,CAAGD,EACxBmf,EAAejX,KAAK,CAAGnI,CAC3B,CAAC,AAET,CACAqe,gBAAgBgB,EAAkB,EAAK,CAAE,CACrC,IAAM/B,EAAQ,IAAI,CAACA,KAAK,CAClBE,EAAe,IAAI,CAACA,YAAY,CAChCpb,EAAW,IAAI,CAACA,QAAQ,CACxBqb,EAAW,IAAI,CAACA,QAAQ,CACxBQ,EAAW,IAAI,CAACA,QAAQ,CAC1BqB,EAAchC,EAAMpd,MAAM,CAC1B4d,EAAQ,IAAI,CAACA,KAAK,CAClByB,EAAczB,EAAM5d,MAAM,CAM9B,GALIof,CAAAA,AAAgB,IAAhBA,GAAqBD,GAAmB,CAAC,IAAI,CAAC/a,OAAO,CAAC8Y,OAAO,AAAD,IAE5D,EAAAoC,QAAQ,CAACC,sBAAsB,CAAC3B,GAChCyB,EAAc,GAEdA,AAAgB,IAAhBA,EAAmB,CAEnB,IAAI,CAACzB,KAAK,CAAGA,EAAQ,AAAI5X,MAAMoZ,GAC/B,IAAK,IAAItf,EAAI,EAAGA,EAAIsf,EAAa,EAAEtf,EAAG,CAClC,IAAM0B,EAAOU,EAASJ,MAAM,GAC5Bic,EAASvc,EAAM4b,EAAOtd,EAAGwd,GACzBM,CAAK,CAAC9d,EAAE,CAAG0B,EACXA,EAAKmX,YAAY,CAAC4E,EACtB,CACJ,KACK,CAED,IAAIzd,EAAI,EACR,KAAOA,EAAIsf,EAAa,EAAEtf,EACtB,GAAIA,EAAIuf,EAAa,CACjB,IAAM7d,EAAOoc,CAAK,CAAC9d,EAAE,CACrBie,EAASvc,EAAM4b,EAAOtd,EAAGwd,EAC7B,KACK,CACD,IAAM9b,EAAOU,EAASJ,MAAM,GAC5Bic,EAASvc,EAAM4b,EAAOtd,EAAGwd,GACzBM,EAAM/d,IAAI,CAAC2B,GACXA,EAAKmX,YAAY,CAAC4E,EACtB,CAAC,AAEL,IAAMhS,EAAUqS,EAAM9R,MAAM,CAAChM,EAAGuf,EAAcvf,GAC9C,IAAKA,EAAI,EAAGsf,EAAc7T,EAAQvL,MAAM,CAAEF,EAAIsf,EAAa,EAAEtf,EACzDyL,CAAO,CAACzL,EAAE,CAAC+E,OAAO,EAE1B,CAAC,AACL,CACAuZ,gBAAiB,CACb,IAAMR,EAAQ,IAAI,CAACA,KAAK,CACxB,IAAK,IAAI9d,EAAI,EAAGC,EAAK6d,EAAM5d,MAAM,CAAEF,EAAIC,EAAI,EAAED,EACzC8d,CAAK,CAAC9d,EAAE,CAAC6D,MAAM,EAEvB,CACJ,CAKO,MAAMmZ,UAAwB,EAAAH,aAAa,CAO9Clf,YAAY+f,CAAY,CAAEE,CAAe,CAAEtZ,CAAO,CAAE,CAChD,KAAK,GACL,IAAI,CAACoZ,YAAY,CAAGA,EACpB,IAAI,CAACE,eAAe,CAAGA,EACvB,IAAI,CAACtZ,OAAO,CAAGA,EAKf,IAAI,CAACwY,iBAAiB,CAAG,EAAAvd,GAAG,CAACmL,sBAAsB,CACnD,KAAAoE,sBAAsB,AAAtB,IACA,IAAI,CAAC6O,sBAAsB,CAAG,EAAA3e,UAAU,CAACkT,iBAAiB,CAACwL,GAC3D,IAAI,CAACG,yBAAyB,CAAG,EAAA7e,UAAU,CAACkT,iBAAiB,CAAC0L,EAClE,CAKAtI,eAAe7S,CAAM,CAAE,CACnB,OAAO,IAAIsa,EAAeta,EAAQ,IAAI,CAACib,YAAY,CAAE,IAAI,CAACC,sBAAsB,CAAE,IAAI,CAACC,eAAe,CAAE,IAAI,CAACC,yBAAyB,CAAE,IAAI,CAACvZ,OAAO,CACxJ,CACJ,CASO,SAAS2Y,EAAOS,CAAY,CAAEgC,CAAyB,CAAEpb,EAAU4Y,CAAoB,CAAE,CAI5F,OAAO,IAAIF,EAAgBU,EAHH,AAAqC,YAArC,OAAOgC,EACzBA,EACA,IAAMA,CAAyB,CACqBtiB,OAAOqH,MAAM,CAACrH,OAAOqH,MAAM,CAAC,CAAC,EAAGyY,GAAuB5Y,GACrH,C,0KC9Paqb,aAAY,W,OAAZA,C,EA0GGzW,KAAI,W,OAAJA,C,wEA1GT,OAAMyW,EAMThiB,YAAYuL,CAAI,CAAEuR,CAAU,CAAE,CAC1B,IAAI,CAACmF,aAAa,CAAG,EACrB,IAAI,CAACC,gBAAgB,CAAG,GACxB,IAAI,CAAC1U,QAAQ,CAAG,IAAI,CACpB,IAAI,CAACsR,YAAY,CAAG,EACpB,IAAI,CAACG,qBAAqB,CAAG,IAAI,CACjC,IAAI,CAACb,qBAAqB,CAAG,IAAI,CACjC,IAAI,CAAC7S,IAAI,CAAGA,EACZ,IAAI,CAACuR,UAAU,CAAGA,CACtB,CAKAzY,OAAO8d,CAAiB,CAAE,CACtB,GAAI,AAAkB,IAAI,GAAtB,IAAI,CAAC3U,QAAQ,CAAW,KACpB/I,EACJ,IAAM8G,EAAO,IAAI,CAACA,IAAI,CACtB,GAAI,AAAgB,UAAhB,OAAOA,EAAmB,CAE1B9G,AADAA,CAAAA,EAAWsH,SAASwN,aAAa,CAAC,WAAU,EACnCC,SAAS,CAAG,EAAA5X,GAAG,CAAC0J,UAAU,CAACC,GACpC,IAAM6W,EAAM3d,EAASyZ,OAAO,CAACmE,iBAAiB,CAClC,IAAI,GAAZD,GAAgBA,AAAgB,aAAhBA,EAAIE,OAAO,EAC3B7d,CAAAA,EAAW2d,CAAE,CAErB,MAEI3d,EAAW8G,CAAK,CAEpB,IAAM2J,EAAS,KAAAkH,eAAe,AAAf,EAAgB3X,EAAU,IAAI,CAACqY,UAAU,CACxD,KAAI,CAACtP,QAAQ,CAAG0H,EAAO1H,QAAQ,CAC/B,IAAI,CAACyR,qBAAqB,CAAG/J,EAAO+J,qBAAqB,CACzD,IAAI,CAACb,qBAAqB,CAAGlJ,EAAOkJ,qBAAqB,CACzD,IAAI,CAACU,YAAY,CAAG5J,EAAO4J,YAAY,CACvC,IAAI,CAACmD,aAAa,CACd,IAAI,CAAChD,qBAAqB,CAAC1c,MAAM,CAAG,IAAI,CAAC6b,qBAAqB,CAAC7b,MAAM,CACzE,IAAI,CAAC2f,gBAAgB,CAAG,IAAI,CAAC9D,qBAAqB,CAAC7b,MAAM,CAAG,CAChE,CAAC,AACD,IAAMiL,EAAW,IAAI,CAACA,QAAQ,CAAC+U,SAAS,CAAC,IACnCC,EAAgB,IAAI,CAACvD,qBAAqB,CAC1Cvb,EAAY,AAAI6E,MAAM,IAAI,CAAC0Z,aAAa,EACxC5D,EAAS,EAAAzc,GAAG,CAAC2L,oBAAoB,CAACC,GACpCiV,EAAgB,EAChBjG,EAAc,IAAI,CAACsC,YAAY,CAC/BzS,EAAOgS,EAAOC,QAAQ,GAC1B,IAAK,IAAIhc,EAAKkgB,EAAcjgB,MAAM,CAAEkgB,EAAgBngB,EAAI,EAAEmgB,EAAe,CACrE,IAAM/M,EAAU8M,CAAa,CAACC,EAAc,CACtCC,EAAehN,EAAQ8G,WAAW,CACxC,KAAOnQ,AAAS,IAAI,GAAbA,GACH,GAAImQ,IAAgBkG,EAAc,CAC9Bhf,CAAS,CAAC+e,EAAc,CAAG/M,EAAQiC,cAAc,CAACtL,GAClD,KAAM,AACV,MAEIA,EAAOgS,EAAOC,QAAQ,GACtB9B,GACH,AAET,CACA,GAAI,IAAI,CAAC0F,gBAAgB,CAAE,CACvB,IAAMS,EAAgB,IAAI,CAACvE,qBAAqB,CAChD,IAAK,IAAI/b,EAAI,EAAGC,EAAKqgB,EAAcpgB,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAAG,EAAEogB,CAAa,CACnE/e,CAAS,CAAC+e,EAAc,CAAGE,CAAa,CAACtgB,EAAE,CAACsV,cAAc,CAACwK,EAEnE,CAAC,AACD,OAAO,IAAI,EAAAN,QAAQ,CAACrU,EAAU9J,EAClC,CAQA4D,OAAOxG,CAAM,CAAEqG,CAAI,CAAEgb,CAAiB,CAAE,CAChB,UAAhB,OAAOhb,GACPA,CAAAA,EAAO4E,SAAS6W,cAAc,CAACzb,EAAI,EAEb,KAAK,IAA3Bgb,GACAA,CAAAA,EAAoBhb,CAAG,EAE3B,IAAMpD,EAAO,IAAI,CAACM,MAAM,CAAC8d,GAGzB,OAFApe,EAAK8B,IAAI,CAAC/E,EAAQ,EAAAgF,uBAAuB,EACzC/B,EAAK8e,QAAQ,CAAC1b,GACPpD,CACX,CACJ,CAEA,IAAM+e,EAEN,6IAUO,SAASvX,EAAKqM,CAAO,CAAE,GAAGC,CAAM,CAAE,CACrC,IAAMiF,EAAa,EAAE,CACjB,EAAO,GACX,IAAK,IAAIza,EAAI,EAAGC,EAAKsV,EAAQrV,MAAM,CAAG,EAAGF,EAAIC,EAAI,EAAED,EAAG,CAClD,IAAM0gB,EAAgBnL,CAAO,CAACvV,EAAE,CAC5BvC,EAAQ+X,CAAM,CAACxV,EAAE,CAErB,GADA,GAAQ0gB,EACJjjB,aAAiBkiB,EAAc,CAC/B,IAAMvd,EAAW3E,EACjBA,EAAQ,IAAM2E,CAClB,CAAC,AAID,GAHqB,YAAjB,OAAO3E,GACPA,CAAAA,EAAQ,IAAI,EAAA8Z,oBAAoB,CAAC9Z,EAAK,EAEtCA,aAAiB,EAAA6b,qBAAqB,CAAE,CACxC,IAAMqH,EAAQF,EAAuBG,IAAI,CAACF,GAC5B,IAAI,GAAdC,GACAljB,CAAAA,EAAMsa,UAAU,CAAG4I,CAAK,CAAC,EAAE,AAAD,CAElC,CAAC,AACGljB,aAAiB,EAAAof,aAAa,EAI9B,GAAQpf,EAAMqf,iBAAiB,CAACrC,EAAWva,MAAM,EACjDua,EAAW1a,IAAI,CAACtC,IAGhB,GAAQA,CAEhB,CAEA,OADA,GAAQ8X,CAAO,CAACA,EAAQrV,MAAM,CAAG,EAAE,CAC5B,IAAIyf,EAAa,EAAMlF,EAClC,C,4GC/Ia,Y,oCAAA+E,C,IALb,IAAMqB,EAAQnX,SAASoX,WAAW,EAK3B,OAAMtB,EAMT7hB,YAAYwN,CAAQ,CAAE9J,CAAS,CAAE,CAC7B,IAAI,CAAC8J,QAAQ,CAAGA,EAChB,IAAI,CAAC9J,SAAS,CAAGA,EAIjB,IAAI,CAAC5C,MAAM,CAAG,IAAI,CAIlB,IAAI,CAACiU,OAAO,CAAG,IAAI,CACnB,IAAI,CAACzH,UAAU,CAAGE,EAASF,UAAU,CACrC,IAAI,CAAC8V,SAAS,CAAG5V,EAAS4V,SAAS,AACvC,CAKAP,SAASxW,CAAI,CAAE,CACXA,EAAKgX,WAAW,CAAC,IAAI,CAAC7V,QAAQ,CAClC,CAKA0N,aAAa7O,CAAI,CAAE,CACf,GAAI,IAAI,CAACmB,QAAQ,CAAC8V,aAAa,GAC3BjX,EAAKsS,UAAU,CAACzD,YAAY,CAAC,IAAI,CAAC1N,QAAQ,CAAEnB,OAE3C,KAMGwI,EALJ,IAAMwM,EAAM,IAAI,CAAC+B,SAAS,CAC1B,GAAI/W,EAAKkX,eAAe,GAAKlC,EACzB,MAAO,CACX,IAAM1C,EAAatS,EAAKsS,UAAU,CAC9BlW,EAAU,IAAI,CAAC6E,UAAU,CAE7B,KAAO7E,IAAY4Y,GACfxM,EAAOpM,EAAQoW,WAAW,CAC1BF,EAAWzD,YAAY,CAACzS,EAAS4D,GACjC5D,EAAUoM,EAEd8J,EAAWzD,YAAY,CAACmG,EAAKhV,EACjC,CAAC,AACL,CAKA4O,QAAS,KAIDpG,EAHJ,IAAMrH,EAAW,IAAI,CAACA,QAAQ,CACxB6T,EAAM,IAAI,CAAC+B,SAAS,CACtB3a,EAAU,IAAI,CAAC6E,UAAU,CAE7B,KAAO7E,IAAY4Y,GACfxM,EAAOpM,EAAQoW,WAAW,CAC1BrR,EAAS6V,WAAW,CAAC5a,GACrBA,EAAUoM,EAEdrH,EAAS6V,WAAW,CAAChC,EACzB,CAKAja,SAAU,KAIFyN,EAHJ,IAAMzH,EAAS,IAAI,CAACE,UAAU,CAACqR,UAAU,CACnC0C,EAAM,IAAI,CAAC+B,SAAS,CACtB3a,EAAU,IAAI,CAAC6E,UAAU,CAE7B,KAAO7E,IAAY4Y,GACfxM,EAAOpM,EAAQoW,WAAW,CAC1BzR,EAAO9H,WAAW,CAACmD,GACnBA,EAAUoM,EAEdzH,EAAO9H,WAAW,CAAC+b,GACnB,IAAM3d,EAAY,IAAI,CAACA,SAAS,CAC1B8f,EAAY,IAAI,CAAC1iB,MAAM,CAC7B,IAAK,IAAIuB,EAAI,EAAGC,EAAKoB,EAAUnB,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAC7CqB,CAAS,CAACrB,EAAE,CAAC6D,MAAM,CAACsd,EAE5B,CAMA3d,KAAK/E,CAAM,CAAEiU,CAAO,CAAE,CAClB,IAAMrR,EAAY,IAAI,CAACA,SAAS,CAChC,GAAI,IAAI,CAAC5C,MAAM,GAAKA,EAGf,GAAI,AAAgB,IAAI,GAApB,IAAI,CAACA,MAAM,CAAW,CAC3B,IAAM0iB,EAAY,IAAI,CAAC1iB,MAAM,AAC7B,KAAI,CAACA,MAAM,CAAGA,EACd,IAAI,CAACiU,OAAO,CAAGA,EACf,IAAK,IAAI1S,EAAI,EAAGC,EAAKoB,EAAUnB,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAAG,CAChD,IAAMoG,EAAU/E,CAAS,CAACrB,EAAE,CAC5BoG,EAAQvC,MAAM,CAACsd,GACf/a,EAAQ5C,IAAI,CAAC/E,EAAQiU,EACzB,CACJ,KACK,CACD,IAAI,CAACjU,MAAM,CAAGA,EACd,IAAI,CAACiU,OAAO,CAAGA,EACf,IAAK,IAAI1S,EAAI,EAAGC,EAAKoB,EAAUnB,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAC7CqB,CAAS,CAACrB,EAAE,CAACwD,IAAI,CAAC/E,EAAQiU,EAElC,CAAC,AACL,CAIA7O,QAAS,CACL,GAAI,AAAgB,IAAI,GAApB,IAAI,CAACpF,MAAM,CACX,MAAO,CAEX,IAAM4C,EAAY,IAAI,CAACA,SAAS,CAC1B8f,EAAY,IAAI,CAAC1iB,MAAM,CAC7B,IAAK,IAAIuB,EAAI,EAAGC,EAAKoB,EAAUnB,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAC7CqB,CAAS,CAACrB,EAAE,CAAC6D,MAAM,CAACsd,EAExB,KAAI,CAAC1iB,MAAM,CAAG,IAAI,AACtB,CAKA,OAAOghB,uBAAuB3B,CAAK,CAAE,CACjC,GAAIA,AAAiB,IAAjBA,EAAM5d,MAAM,EAGhB2gB,EAAMO,cAAc,CAACtD,CAAK,CAAC,EAAE,CAAC7S,UAAU,EACxC4V,EAAMQ,WAAW,CAACvD,CAAK,CAACA,EAAM5d,MAAM,CAAG,EAAE,CAAC6gB,SAAS,EACnDF,EAAMS,cAAc,GACpB,IAAK,IAAIthB,EAAI,EAAGC,EAAK6d,EAAM5d,MAAM,CAAEF,EAAIC,EAAI,EAAED,EAAG,CAC5C,IAAM0B,EAAOoc,CAAK,CAAC9d,EAAE,CACfqB,EAAYK,EAAKL,SAAS,CAC1B8f,EAAYzf,EAAKjD,MAAM,CAC7B,IAAK,IAAI2B,EAAI,EAAGC,EAAKgB,EAAUnB,MAAM,CAAEE,EAAIC,EAAI,EAAED,EAC7CiB,CAAS,CAACjB,EAAE,CAACyD,MAAM,CAACsd,EAE5B,EAZW,AAaf,CACJ,C,0KCtGgB,WAAU,W,OAAVI,C,EAwDA,WAAU,W,OAAVC,C,IA9FhB,IAAIC,EAAgB,SAASC,CAAC,CAAEC,CAAC,CAAE,CAI/B,MAAOF,AAHPA,CAAAA,EAAgBrkB,OAAOwkB,cAAc,EAChC,EAAEC,UAAW,EAAE,AAAC,aAAa3b,OAAS,SAAUwb,CAAC,CAAEC,CAAC,CAAE,CAAED,EAAEG,SAAS,CAAGF,CAAG,GAC1E,SAAUD,CAAC,CAAEC,CAAC,CAAE,CAAE,IAAK,IAAIG,KAAKH,EAAOvkB,OAAOmB,SAAS,CAACwjB,cAAc,CAACzZ,IAAI,CAACqZ,EAAGG,IAAIJ,CAAAA,CAAC,CAACI,EAAE,CAAGH,CAAC,CAACG,EAAE,AAAD,CAAG,GAC/EJ,EAAGC,EAC5B,EAUWK,EAAW,UAAW,CAQ7B,MAAOA,AAPPA,CAAAA,EAAW5kB,OAAOqH,MAAM,EAAI,SAAkBwd,CAAC,CAAE,CAC7C,IAAK,IAAIvI,EAAG1Z,EAAI,EAAGwU,EAAInE,UAAUnQ,MAAM,CAAEF,EAAIwU,EAAGxU,IAE5C,IAAK,IAAI8hB,KADTpI,EAAIrJ,SAAS,CAACrQ,EAAE,CACF0Z,EAAOtc,OAAOmB,SAAS,CAACwjB,cAAc,CAACzZ,IAAI,CAACoR,EAAGoI,IAAIG,CAAAA,CAAC,CAACH,EAAE,CAAGpI,CAAC,CAACoI,EAAE,AAAD,EAE/E,OAAOG,CACX,GACgBtT,KAAK,CAAC,IAAI,CAAE0B,UAChC,EAcO,SAASkR,EAAWW,CAAU,CAAEzf,CAAM,CAAEsD,CAAG,CAAEoc,CAAI,CAAE,CACtD,IAA2HT,EAAvH/H,EAAItJ,UAAUnQ,MAAM,CAAEuU,EAAIkF,EAAI,EAAIlX,EAAS0f,AAAS,IAAI,GAAbA,EAAgBA,EAAO/kB,OAAOglB,wBAAwB,CAAC3f,EAAQsD,GAAOoc,CAAI,CACzH,GAAI,AAAmB,UAAnB,OAAOrb,SAAwB,AAA4B,YAA5B,OAAOA,QAAQub,QAAQ,CAAiB5N,EAAI3N,QAAQub,QAAQ,CAACH,EAAYzf,EAAQsD,EAAKoc,QACpH,IAAK,IAAIniB,EAAIkiB,EAAWhiB,MAAM,CAAG,EAAGF,GAAK,EAAGA,IAAS0hB,CAAAA,EAAIQ,CAAU,CAACliB,EAAE,AAAD,GAAGyU,CAAAA,EAAK,AAAAkF,CAAAA,EAAI,EAAI+H,EAAEjN,GAAKkF,EAAI,EAAI+H,EAAEjf,EAAQsD,EAAK0O,GAAKiN,EAAEjf,EAAQsD,EAAG,GAAM0O,CAAAA,CAAE,CAClJ,OAAOkF,EAAI,GAAKlF,GAAKrX,OAAOyJ,cAAc,CAACpE,EAAQsD,EAAK0O,GAAIA,CAAC,AACjE,CAmDO,SAAS+M,EAAWc,CAAW,CAAEC,CAAa,CAAE,CACnD,GAAI,AAAmB,UAAnB,OAAOzb,SAAwB,AAA4B,YAA5B,OAAOA,QAAQmO,QAAQ,CAAiB,OAAOnO,QAAQmO,QAAQ,CAACqN,EAAaC,EAAe,AACnI,C,4GChHuB,W,oCAAd,YAAU,A,YAAmB,M,4GCAf,W,oCAAd,YAAU,A,YAAmB,M,6FCGtC,IAAMC,EAAO9Y,SAAS6W,cAAc,CAAC,QACrCiC,EAAK5f,MAAM,CAAC8G,SAASwN,aAAa,CAAC,e,4GCFnB,W,oCAAAzE,C,mBAAT,SAASA,EAAWhQ,CAAS,CAAE,GAAGggB,CAAqB,CAAE,CAC9DA,EAAMC,OAAO,CAAC,AAAC3c,GAAQ,CACrB,GAAI,AAAe,UAAf,OAAOA,EAAkB,MAAO,CACpC,IAAI4c,EAAOlgB,CAAM,CAACsD,EAAI,AACtB,QAAOtD,CAAM,CAACsD,EAAI,CAClB3I,OAAOyJ,cAAc,CAACpE,EAAQsD,EAAK,CACjC9E,IAAAA,KACE,EAAAjC,UAAU,CAACC,KAAK,CAACwD,EAAQsD,GAClB4c,GAET9gB,IAAI+gB,CAAC,CAAE,CACLD,EAAOC,EACP,EAAA5jB,UAAU,CAACF,MAAM,CAAC2D,EAAQsD,EAC5B,CACF,EACF,EACF,C,oJCEa8c,EAAN,cAAkB,EAAA7b,WAAW,CAC3B8b,MAAQ,EAAM,AACd5M,CAAAA,EAAI,CAAE,AACN6M,CAAAA,EAAI,CAAE,AACNC,CAAAA,KAAO,CAAE,AACTC,CAAAA,KAAO,EAAG,AAEjBtlB,cAAc,CACZ,KAAK,GACL,KAAA8U,OAAO,AAAP,EAAQ,IAAI,CAAE,QAAS,IAAK,IAAK,OAAQ,OAC3C,CAEOyQ,UAAW,CAChB,GAAM,CAAEJ,MAAAA,CAAK,CAAEE,KAAAA,CAAI,CAAE9M,EAAAA,CAAC,CAAE6M,EAAAA,CAAC,CAAE,CAAG,IAAI,CAC5BrJ,EAAIsJ,AAAO,IAAPA,EACV,MAAO,CAAC;;;;aAIC,EAAEtJ,EAAE;cACH,EAAEA,EAAE;YACN,EAAExD,EAAE;WACL,EAAE6M,EAAE;qBACM,EAAErJ,EAAI,EAAE;mBACV,EAAEA,EAAE;kBACL,EAAEoJ,EAAQ,OAAS,SAAS,CAAC;IAC3C,CAAC,AACH,CACF,EA5BaD,EAAA,eAVZ,KAAA5b,aAAa,AAAb,EAAc,CACbpJ,KAAM,QACNuE,SAAU,KAAA8G,IAAI,AAAJ,CAAI,CAAC;eACF,EAAE,AAAAgN,GAAKA,EAAEgN,QAAQ,GAAG;kBACjB,EAAE,AAAAhN,GAAK,CAAEA,EAAE4M,KAAK,CAAG,EAAK,EAAE;kBAC1B,EAAE,AAAA5M,GAAK,CAAEA,EAAE4M,KAAK,CAAG,EAAM,EAAE;MACvC,EAAE,AAAA5M,GAAKA,EAAE4M,KAAK,CAAG,CAAC,CAAC,EAAE5M,EAAE+M,IAAI,CAAC,CAAC,CAAC,CAAG/M,EAAE+M,IAAI,CAAC;;EAE5C,CAAC,AACH,G,6EACaJ,G,IAwDAM,EAAN,cAAuB,EAAAnc,WAAW,CAChCkP,EAAI,CAAE,AACN6M,CAAAA,EAAI,CAAE,AACNrJ,CAAAA,EAAI,CAAE,AACNuJ,CAAAA,KAAO,EAAG,AAEjBtlB,cAAc,CACZ,KAAK,GACL,KAAA8U,OAAO,AAAP,EAAQ,IAAI,CAAE,IAAK,IAAK,IAAK,OAC/B,CACF,EAVa0Q,EAAA,eApBZ,KAAAlc,aAAa,AAAb,EAAc,CACbpJ,KAAM,aACNuE,SAAU,KAAA8G,IAAI,AAAJ,CAAI,CAAC,EAAE,AAACka,GAAgB,CAChC,GAAM,CAAElN,EAAAA,CAAC,CAAE6M,EAAAA,CAAC,CAAEE,KAAAA,CAAI,CAAE,CAAGG,EACnB1J,EAAI0J,EAAE1J,CAAC,CACX,GAAIA,GA1DY,GA0DM,CACpB,IAAM2J,EAAOC,KACb,MAAO,KAAApa,IAAI,AAAJ,CAAI,CAAC;kBACA,EAAE,IAAMgN,EAAImN,EAAK,IAAI,EAAE,IAAMN,EAAIM,EAAK,OAAO,EAAE,IA7D7C,GA6D+D,OAAO,EAAE,IAAMJ,EAAK;MACjG,CAAC,AACH,CAAC,AACDvJ,GAAK,EACL,IAAM2J,EAAO3J,EAAI,EACjB,MAAO,KAAAxQ,IAAI,AAAJ,CAAI,CAAC;qBACK,EAAE,IAAMgN,EAAE,IAAI,EAAE,IAAM6M,EAAIM,EAAK,IAAI,EAAE,IAAM3J,EAAE,OAAO,EAAE,IAAMuJ,EAAK;qBACjE,EAAE,IAAM/M,EAAIwD,EAAE,IAAI,EAAE,IAAMqJ,EAAIM,EAAK,IAAI,EAAE,IAAM3J,EAAE,OAAO,EAAE,IAAMuJ,EAAK;qBACrE,EAAE,IAAM/M,EAAIwD,EAAE,IAAI,EAAE,IAAMqJ,EAAIM,EAAK,IAAI,EAAE,IAAM3J,EAAE,OAAO,EAAE,IAAMuJ,EAAK;IACtF,CAAC,AACH,EAAE,CAAC,AACL,G,6EACaE,G,IA0BAI,EAAN,cAAmB,EAAAvc,WAAW,CAC5Bwc,QAAU,CAAE,AACZC,CAAAA,QAAU,CAAE,AACXC,CAAAA,MAAQ,EAAG,AAEnB/lB,cAAc,CACZ,KAAK,GACL,KAAA8U,OAAO,AAAP,EAAQ,IAAI,CAAE,UAAW,UAC3B,CAEOyQ,UAAW,CAChB,IAAMjB,EAAK,IAAI,CAACwB,OAAO,CAAG,IAAQ,GAElC,MAAO,CAAC;;wBAEY,EAAEE,AAHR,GAAK,AAAA1B,CAAAA,EAAI,EAAI,GAAKA,EAAIA,CAAA,AAAAA,EAAK,EAAC,EAGZ,IAAI;;;IAGlC,CAAC,AACH,CAEA5a,mBAAoB,CAClB,KAAK,CAACA,iBAAiB,GACvB,IAAI,CAACqc,KAAK,CAAGpP,OAAOsP,WAAW,CAAC,IAAM,CACpC,IAAI,CAACJ,OAAO,CAAI,IAAI,CAACA,OAAO,CAAG,GAAM,CACvC,EAAG,IACL,CAEAlc,sBAA6B,CAC3B,KAAK,CAACA,oBAAoB,GAC1Buc,cAAc,IAAI,CAACH,KAAK,CAC1B,CACF,EAhCaH,EAAA,eARZ,KAAAtc,aAAa,AAAb,EAAc,CACbpJ,KAAM,SACNuE,SAAU,KAAA8G,IAAI,AAAJ,CAAI,CAAC;eACF,EAAE,AAAAgN,GAAKA,EAAEgN,QAAQ,GAAG;qBACd,EAAE,IAAM,IAAK,OAAO,EAAE,AAAAhN,GAAKA,EAAEsN,OAAO,CAAC;;EAExD,CAAC,AACH,G,6EACaD,G,IA6CAO,EAAN,cAAwB,EAAA9c,WAAW,CAChC+c,MAAQC,KAAKC,GAAG,EAAG,AACnBC,CAAAA,UAAY,EAAM,AACnBC,CAAAA,KAAO,CAAE,AAEhBxmB,cAAc,CACZ,KAAK,GACL,KAAA8U,OAAO,AAAP,EAAQ,IAAI,CAAE,OAChB,CAEApL,mBAAoB,CAClB,KAAK,CAACA,iBAAiB,GACvB,IAAM+c,EAAS,IAAM,EACf,IAAI,CAACF,SAAS,GAClB,IAAI,CAACC,IAAI,CAAGH,KAAKC,GAAG,GAAK,IAAI,CAACF,KAAK,CACnClb,sBAAsBub,GACxB,EACAvb,sBAAsBub,EACxB,CAEA9c,sBAAuB,CACrB,KAAK,CAACA,oBAAoB,GAC1B,IAAI,CAAC4c,SAAS,CAAG,EACnB,CACF,EAxBaJ,EAAA,eANZ,KAAA7c,aAAa,AAAb,EAAc,CACbpJ,KAAM,cACNuE,SAAU,KAAA8G,IAAI,AAAJ,CAAI,CAAC;qBACI,EAAE,AAAAgN,GAAKA,EAAEiO,IAAI,CAAC;EACjC,CAAC,AACH,G,6EACaL,E"}